{"name":"The Julia Language","description":"A fresh approach to technical computing","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/the-julia-language","ideas_url":"https://julialang.org/jsoc/projects/","logo":"https://summerofcode.withgoogle.com/media/org/the-julia-language/49fck3n7j5aqnpwu-360.png","technologies":["machine learning","julia","data science","compilers","garbage-collection"],"topics":["math","artificial intelligence","science","data science","graphs"],"projects":[{"project_name":"Compiler","summary":"Work on improving the internals of the Julia compiler to benefit users.","difficulty":"Medium"},{"project_name":"CliMA","summary":"Development of a new open-source climate model that leverages GPU processing.","difficulty":"High"},{"project_name":"Documentation tooling","summary":"Creation of tools to enhance documentation generation and management in Julia.","difficulty":"Medium"},{"project_name":"Ferrite FEM","summary":"Building a modern finite element toolbox using Julia programming.","difficulty":"High"},{"project_name":"Gabs","summary":"Develop a simulator for Gaussian quantum information processes.","difficulty":"High"},{"project_name":"Graph neural networks","summary":"Implement deep learning techniques for graph structures with GraphNeuralNetworks.jl.","difficulty":"High"},{"project_name":"High Performance and Parallel Computing","summary":"Writing efficient code that can harness multi-machine processes for speed and data handling.","difficulty":"High"},{"project_name":"GPU Programming","summary":"Projects related to utilizing the GPU capabilities of Julia.","difficulty":"High"},{"project_name":"JuliaDynamics","summary":"Focus on dynamical and complex systems, including nonlinear dynamics implemented in Julia.","difficulty":"Medium"},{"project_name":"JuliaGenAI","summary":"Research applications of Generative AI within the Julia ecosystem.","difficulty":"Medium"},{"project_name":"JuliaHealth","summary":"Applying Julia to enhance healthcare, biomedical research, and public health.","difficulty":"Medium"},{"project_name":"Machine learning","summary":"Develop solutions for machine learning within the Julia ML ecosystem.","difficulty":"Medium"},{"project_name":"Molecular simulation","summary":"Utilize the Molly.jl library for molecular simulations.","difficulty":"High"},{"project_name":"QuantumClifford","summary":"Work involving quantum circuits that utilize Clifford gates.","difficulty":"High"},{"project_name":"QuantumOptics","summary":"Study quantum dynamics and master equations.","difficulty":"High"},{"project_name":"Symbolic computation","summary":"Develop user-friendly tools for symbolic programming in Julia.","difficulty":"Medium"},{"project_name":"Turing","summary":"Focus on probabilistic modeling and programming using Turing.jl.","difficulty":"Medium"},{"project_name":"Tooling","summary":"Development of better tools and environments for Julia developers.","difficulty":"Medium"},{"project_name":"Topology optimisation","summary":"Improve existing topology optimization tools within the Julia language.","difficulty":"Medium"},{"project_name":"Trixi.jl","summary":"Work on modern computational fluid dynamics using Trixi.jl in Julia.","difficulty":"High"}],"jina_response":"Title: Projects\n\nURL Source: https://julialang.org/jsoc/projects/\n\nMarkdown Content:\nThis page lists a bunch of project ideas, meant to serve as starting points as you develop your own plan. You're free to modify them to your tastes, or propose something totally different in an area you're interested in.\n\nWe have our project ideas organized below roughly by domain but you can also see a [single page with all our projects together](https://julialang.org/jsoc/allprojects):\n\n*   [Compiler](https://julialang.org/jsoc/gsoc/compiler/) – work on the Julia compiler's internals to make things better for everyone.\n    \n*   [CliMA](https://julialang.org/jsoc/gsoc/clima/) – a new open-source climate model that runs on GPUs.\n    \n*   [Documentation tooling](https://julialang.org/jsoc/gsoc/documenter/) - Tooling related to documentation generation, docstrings etc.\n    \n*   [Ferrite FEM](https://julialang.org/jsoc/gsoc/ferrite-fem/) - A modern finite element toolbox in Julia.\n    \n*   [Gabs](https://julialang.org/jsoc/gsoc/gabs/) - A Gaussian quantum information simulator\n    \n*   [Graph neural networks](https://julialang.org/jsoc/gsoc/gnn/) - Deep learning on graphs with GraphNeuralNetworks.jl.\n    \n*   [High Performance and Parallel Computing](https://julialang.org/jsoc/gsoc/hpc/) – write code that runs on lots of machines, goes really fast, processes lots of data, or all three.\n    \n*   [GPU Programming](https://julialang.org/jsoc/gsoc/gpu/) - Projects that involve the Julia GPU stack\n    \n*   [JuliaDynamics](https://julialang.org/jsoc/gsoc/juliadynamics/) - Dynamical systems, complex systems and nonlinear dynamics in Julia\n    \n*   [JuliaGenAI](https://julialang.org/jsoc/gsoc/juliagenai/) - Research and applications of Generative AI in Julia\n    \n*   [JuliaHealth](https://julialang.org/jsoc/gsoc/juliahealth/) - Using the Julia programming language to improve medicine, health care, public health, and biomedical research.\n    \n*   [Machine learning](https://julialang.org/jsoc/gsoc/machine-learning) - work on problems in machine learning in the broader Julia ML ecosystem\n    \n*   [Molecular simulation](https://julialang.org/jsoc/gsoc/molly/) - molecular simulation with Molly.jl.\n    \n*   [QuantumClifford](https://julialang.org/jsoc/gsoc/quantumclifford) - Quantum circuits with Clifford gates\n    \n*   [QuantumOptics](https://julialang.org/jsoc/gsoc/quantumoptics) - Quantum dynamics and master equations\n    \n*   [Symbolic computation](https://julialang.org/jsoc/gsoc/symbolics/) - User friendly symbolic programming\n    \n*   [Turing](https://julialang.org/jsoc/gsoc/turing/) - for probabilistic modelling and probabilistic programming\n    \n*   [Tooling](https://julialang.org/jsoc/gsoc/tooling/) - Development of developer tools and development environments for Julia\n    \n*   [Topology optimisation](https://julialang.org/jsoc/gsoc/topopt/) - improving topology optimisation tools in Julia.\n    \n*   [Trixi.jl](https://julialang.org/jsoc/gsoc/trixi/) - modern computational fluid dynamics with Trixi.jl in Julia.\n    \n\nWe also have Julia project's available under other organizations. If you are applying for those projects, make sure your application is for that organization and NOT the Julia Language:\n\n*   [Gridap - NumFOCUS](https://github.com/numfocus/gsoc#gridap)\n    \n*   [FluxML - NumFOCUS](https://github.com/numfocus/gsoc#fluxml)\n    \n*   [SciML - NumFOCUS](https://github.com/numfocus/gsoc#sciml)\n    \n*   [ArviZ - NumFOCUS](https://github.com/numfocus/gsoc#arviz)\n"}