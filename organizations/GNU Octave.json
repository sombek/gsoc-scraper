{"name":"GNU Octave","description":"Free Your Numbers","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/gnu-octave","ideas_url":"https://wiki.octave.org/Summer_of_Code_-_Getting_Started#Suggested_projects","logo":"https://summerofcode.withgoogle.com/media/org/gnu-octave/0kc85jo6rl3eo2g0-360.png","technologies":["c++","hg"],"topics":["mathematics","scientific computing","numerical computation","numerical methods","matlab"],"projects":[{"project_name":"Adding clustering 'Searcher' classes in statistics package","summary":"This project aims to implement new class definitions for clustering methods in the statistics package, enhancing existing functionalities and addressing performance issues with KDTree.","difficulty":"hard"},{"project_name":"Custom re-implementation of the texi2html command line tool","summary":"The goal is to create a compiled function that replaces the outdated texi2html tool, improving the processing speed of documentation in pkg-octave-doc.","difficulty":"hard"},{"project_name":"Port Chebfun to Octave and improve classdef support","summary":"This project seeks to adapt Chebfun to be compatible with Octave while enhancing the classdef functionality, addressing differences in implementation between the two.","difficulty":"hard"}],"jina_response":"Title: Summer of Code - Getting Started\n\nURL Source: https://wiki.octave.org/Summer_of_Code_-_Getting_Started\n\nMarkdown Content:\n[![Image 1: Info icon.svg](https://wiki.octave.org/wiki/images/thumb/a/ae/Info_icon.svg/26px-Info_icon.svg.png)](https://wiki.octave.org/File:Info_icon.svg)\n\nSince 2011 the GNU Octave project has successfully mentored:\n\n*   [**42 participants** üôÇ](https://wiki.octave.org/Summer_of_Code \"Summer of Code\")\n*   [**44 projects** üìù](https://wiki.octave.org/Summer_of_Code \"Summer of Code\")\n\nin [Summer of Code](https://wiki.octave.org/Summer_of_Code \"Summer of Code\") (SoC) programs by [Google](https://summerofcode.withgoogle.com/) and [ESA](https://esa.int/).\n\nThose SoC programs aim to advertise open-source software development and to attract potential new Octave developers.\n\nSteps toward a successful application\n-------------------------------------\n\n1.  üòâüí¨ **We want to get to know you (before the deadline). Communicate with us.**\n    *   Join [**Octave Discourse**](https://octave.discourse.group/) or [IRC](https://wiki.octave.org/IRC \"IRC\") for general discussion and to ask questions (Please do not use the bug tracker for general GSOC inquiries unrelated to specific bugs found with Octave.) Using a nickname is fine.\n    *   Show us that you're motivated to work on Octave üíª. There is no need to present an overwhelming CV üèÜ; evidence of involvement with Octave is more important.\n    *   **If you never talked to us, we will likely reject your proposal**, even it looks good üöÆ\n2.  üë©‚Äçüî¨ **Get your hands dirty.**\n    *   We are curious about your programming skills üöÄ\n        *   Your application will be much stronger if you [fix Octave bugs](https://savannah.gnu.org/bugs/?group=octave) or [submit patches](https://savannah.gnu.org/patch/?group=octave) before or during the application period.\n        *   You can take a look at the [short projects](https://wiki.octave.org/Short_projects \"Short projects\") for some simple bugs to start with.\n    *   **Use Octave!**\n        *   If you come across something that does not work the way you like ‚û°Ô∏è try to fix that üîß\n        *   Or if you find a missing function ‚û°Ô∏è try to implement it.\n3.  üìùüí° **Tell us what you are going to do.**\n    *   Do not write just to say what project you're interested in. Be specific about what you are going to do, include links üîó, show us you know what you are talking about üí°, and ask many [smart questions](http://www.catb.org/esr/faqs/smart-questions.html) ü§ì\n    *   Remember, **we are volunteer developers and not your boss** üôÇ\n4.  üìî **Prepare your proposal with us.**\n    *   Try to show us as early as possible a draft of your proposal üìë\n    *   If we see your proposal for the first time after the application deadline, it might easily contain some paragraphs not fully clear to us. Ongoing interaction will give us more confidence that you are capable of working on your project üôÇüëç\n    *   Here‚Äôs a sample proposal outline that you can use as a reference when drafting your own application. [Sample Proposal](https://docs.google.com/document/d/1kGtT9_f0FrXdCKwyKEWwOV6R-AU90bkd/edit?usp=sharing&ouid=115736651221450989198&rtpof=true&sd=true)\n    *   Then submit the proposal following the applicable rules, e.g. for [GSoC](https://google.github.io/gsocguides/student/writing-a-proposal). üì®\n\nHow do we judge your application?\n---------------------------------\n\nDepending on the mentors and SoC program there are varieties, but typically the main factors considered would be:\n\n*   **You have demonstrated interest in Octave and an ability to make substantial modifications to Octave**\n    \n    The most important thing is that you've contributed some interesting code samples to judge your skills. It's OK during the application period to ask for help on how to format these code samples, which normally are Mercurial patches.\n    \n\n*   **You showed understanding of your topic**\n    \n    Your proposal should make it clear that you're reasonably well versed in the subject area and won't need all summer just to read up on it.\n    \n\n*   **Well thought out, adequately detailed, realistic project plan**\n    \n    \"I'm good at this, so trust me\" isn't enough. In your proposal, you should describe which algorithms you'll use and how you'll integrate with existing Octave code. You should also prepare a project timeline and goals for the midterm and final evaluations.\n    \n\nWhat you should know about Octave\n---------------------------------\n\nGNU Octave is mostly written in C++ and its own scripting language that is mostly compatible with Matlab. There are bits and pieces of Fortran, Perl, C, awk, and Unix shell scripts here and there. In addition to being familiar with C++ and Octave's scripting language, you as successful applicant will be familiar with or able to quickly learn about Octave's infrastructure. You can't spend the whole summer learning how to build Octave or prepare a changeset and still successfully complete your project üòá\n\nYou should know:\n\n1.  How to build Octave from its source code using [the GNU build system](http://en.wikipedia.org/wiki/GNU_build_system).\n    *   Read in this wiki: [Developer FAQ](https://wiki.octave.org/Developer_FAQ \"Developer FAQ\"), [Building](https://wiki.octave.org/Building \"Building\")\n    *   Tools to know: [gcc](https://en.wikipedia.org/wiki/GNU_Compiler_Collection), [make](https://en.wikipedia.org/wiki/Make_(software))\n2.  How to submit patches (changesets).\n    *   Read in this wiki: [Contribution guidelines](https://wiki.octave.org/Contribution_guidelines \"Contribution guidelines\"), [Mercurial](https://wiki.octave.org/Mercurial \"Mercurial\")\n    *   Tools to know: [Mercurial (hg)](https://en.wikipedia.org/wiki/Mercurial), [git](https://en.wikipedia.org/wiki/Git)\n\nSuggested projects\n------------------\n\nThe following suggested projects are distilled from the [Projects](https://wiki.octave.org/Projects \"Projects\") page for the benefit of potential SoC participants. You can also look at our [completed past projects](https://wiki.octave.org/Summer_of_Code \"Summer of Code\"), or the current [| Octave Development Roadmap](https://hg.savannah.gnu.org/hgweb/octave/file/tip/etc/ROADMAP.md) for more inspiration.\n\n[![Image 2: Info icon.svg](https://wiki.octave.org/wiki/images/thumb/a/ae/Info_icon.svg/26px-Info_icon.svg.png)](https://wiki.octave.org/File:Info_icon.svg)\n\nDo you use Octave at your working place or university? Do you have some numerical project in mind? You are always welcome to **propose your own projects**. If you are passionate about your project, it will be easy to find an Octave developer to mentor and guide you. Please note that for such a proposal to be successful it will almost certainly involve initiating pre-proposal discussion over at the [Octave Discourse forum](https://octave.discourse.group/).\n\nAdding clustering `*Searcher` classes in statistics package\n-----------------------------------------------------------\n\nAlthough the statistics package already has `knnsearch` and `rangesearch` functions, it misses [classdefs](https://docs.octave.org/latest/Creating-a-classdef-Class.html) for extending their functionality. Furthermore, the `KDTree` method in the aforementioned functions is currently disabled, because it is very slow and poorly implemented (see GitHub issue [#151](https://github.com/gnu-octave/statistics/issues/151)). The goal of this project if to implement `KDTreeSearcher`, `ExhaustiveSearcher`, and `hnswSearcher` classes (including their `knnsearch` and `rangesearch` methods) along with the `createns` helper function. Beyond MATLAB compatibility, the KDTree implementation should ideally utilize a compiled oct library for faster construction and queries of points.\n\n*   **Project size** [\\[?\\]](https://wiki.octave.org/Summer_of_Code_-_Getting_Started#Project_sizes) and **Difficulty**\n\n~350 hours (hard)\n\n*   **Required skills**\n\nOctave, classdef, C++, good knowledge of clustering methods\n\n*   **Potential mentors**\n\n[Andreas Bertsatos](https://octave.discourse.group/u/pr0m1th3as)\n\nCustom re-implementation of the texi2html (v.1.82) command line tool\n--------------------------------------------------------------------\n\nImplement a compiled .oct function to relax the dependency of the pkg-octave-doc package on texi2html (v.1.82) command line tool, which is no longer maintained or further developed but also not readily available to all linux distributions. The idea is to have a \\`texi2html\\` function within the pkg-octave-doc package that will replace the functionality of the texi2html (v.1.82) command line tool. This will also help improve the speed of pkg-octave-doc processing large packages, which contain specific tags (such as @math) which are currently handled within Octave code.\n\n*   **Project size** [\\[?\\]](https://wiki.octave.org/Summer_of_Code_-_Getting_Started#Project_sizes) and **Difficulty**\n\n~350 hours (hard)\n\n*   **Required skills**\n\nPerl, C++, Octave, Texinfo, HTML\n\n*   **Potential mentors**\n\n[Andreas Bertsatos](https://octave.discourse.group/u/pr0m1th3as)\n\nPort Chebfun to Octave and improve classdef support\n---------------------------------------------------\n\n[Chebfun](https://www.chebfun.org%7C) uses interpolation to approximate functions to very high accuracy, giving numerical computing that feels like symbolic computing. The software is implemented as collection of \"classdef\" classes and is Free and Open Source Software. However, Chebfun does not yet work with Octave, largely due to differences and issues with Octave's classdef implementation. This project has two aims: (1) make changes to the Chebfun code to make it work on Octave and (2) improve Octave's classdef functionality. Some initial steps toward to first goal can be found on [this octave\\_dev branch](https://github.com/cbm755/chebfun/tree/octave_dev%7C). The second goal will likely involve a collaborative effort because classdef is a priority on [| Octave's Development Roadmap](https://hg.savannah.gnu.org/hgweb/octave/file/tip/etc/ROADMAP.md) and because other proposed projects also involve classdef.\n\n*   **Project size** [\\[?\\]](https://wiki.octave.org/Summer_of_Code_-_Getting_Started#Project_sizes) and **Difficulty**\n\n~350 hours (hard)\n\n*   **Required skills**\n\nOctave, object-oriented programming, polynomial interpolation and approximation theory, C++.\n\n*   **Potential mentors**\n\n[Colin B. Macdonald](https://octave.discourse.group/u/cbm)\n\nProject sizes\n-------------\n\nAs of 2024, possible project sizes are 90 (small), 175 (medium), or 350 hours (large) [\\[1\\]](https://wiki.octave.org/Summer_of_Code_-_Getting_Started#cite_note-1).\n\nFootnotes\n---------\n\n1.  [‚Üë](https://wiki.octave.org/Summer_of_Code_-_Getting_Started#cite_ref-1) [https://developers.google.com/open-source/gsoc/faq#how\\_much\\_time\\_does\\_gsoc\\_participation\\_take](https://developers.google.com/open-source/gsoc/faq#how_much_time_does_gsoc_participation_take)\n\nSee also\n--------\n\n*   [https://summerofcode.withgoogle.com/](https://summerofcode.withgoogle.com/)\n*   [GSoC Student Guide](https://google.github.io/gsocguides/student/)\n*   [GSoC Mentor Guide](https://google.github.io/gsocguides/mentor/)\n*   [GSoC Timeline](https://developers.google.com/open-source/gsoc/timeline)\n"}