{"name":"LibreOffice","description":"LibreOffice is a free and open source office suite","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/libreoffice","ideas_url":"https://wiki.documentfoundation.org/Development/GSoC/Ideas","logo":"https://summerofcode.withgoogle.com/media/org/libreoffice/3g60m1gvsyzwzvvk-360.png","technologies":["python","java","c++"],"topics":["office suite","desktop application","end user application"],"projects":[{"project_name":"Variable units on numerical input","summary":"Allow users to switch between different unit measurements (e.g., cm, inches) within numerical controls, enhancing flexibility in usage.","difficulty":"Medium"},{"project_name":"Remember window size per document","summary":"Restore document-specific window sizes in LibreOffice, preventing loss of layout upon reopening applications.","difficulty":"Medium"},{"project_name":"Improve snapping and object selection","summary":"Enhance the snapping functionality in LibreOffice to allow more intuitive positioning and adjustments of objects on the canvas.","difficulty":"Hard"},{"project_name":"Re-design Notebookbar using Native Toolkit Widgets","summary":"Shift the Notebookbar design to use native UI toolkit widgets for better integration and user experience.","difficulty":"Medium"},{"project_name":"New dialog to edit Table Styles","summary":"Create a user-friendly dialog to edit existing table styles in Writer and Calc, improving UI consistency.","difficulty":"Medium"},{"project_name":"Implement report builder in C++","summary":"Transition the report builder from Java to C++, eliminating dependencies on external libraries to improve robustness.","difficulty":"Hard"},{"project_name":"Attach animations to styles","summary":"Allow for animation to be attached to styles in Impress, leveraging the powerful styles concept to enhance visual presentations.","difficulty":"Hard"},{"project_name":"Rework Impress slideshow to use DrawingLayer primitives","summary":"Refactor the rendering system of the Impress slideshow to utilize DrawingLayer primitives, enhancing code maintainability.","difficulty":"Hard"},{"project_name":"Implement table styles","summary":"Develop a system for real table styles within Calc, improving performance and visual formatting consistency.","difficulty":"Medium Hard"},{"project_name":"Accessibility checker for Impress and Calc","summary":"Integrate an accessibility checker for Impress and Calc similar to the one in Writer to enhance document inclusivity.","difficulty":"Medium to Hard"},{"project_name":"Extend support for document theme colors","summary":"Broaden support for theme colors across document properties in Calc, Impress, and Writer to ensure consistency in visual themes.","difficulty":"Hard"},{"project_name":"Import Markdown files into LibreOffice Writer","summary":"Enable import functionality for Markdown files in LibreOffice Writer, facilitating modern content creation workflows.","difficulty":"Medium"},{"project_name":"Rust UNO Language Binding","summary":"Create Rust bindings for the UNO API used in LibreOffice, expanding the library's usability beyond traditional languages.","difficulty":"Medium to hard"},{"project_name":"Python code auto-completion","summary":"Develop a tool to generate Python stubs from IDL specifications to facilitate auto-completion in IDEs for Python scripting in LibreOffice.","difficulty":"Medium to hard"}],"jina_response":"Title: GSoC Ideas - The Document Foundation Wiki\n\nURL Source: https://wiki.documentfoundation.org/Development/GSoC/Ideas\n\nMarkdown Content:\n*   [Wiki Home](https://wiki.documentfoundation.org/Special:MyLanguage/Main_Page \"Special:MyLanguage/Main Page\")\n*   [Development](https://wiki.documentfoundation.org/Special:MyLanguage/Development \"Special:MyLanguage/Development\")\n*   [Design](https://wiki.documentfoundation.org/Special:MyLanguage/Design \"Special:MyLanguage/Design\")\n*   [QA](https://wiki.documentfoundation.org/Special:MyLanguage/QA \"Special:MyLanguage/QA\")\n*   [Events](https://wiki.documentfoundation.org/Special:MyLanguage/Events \"Special:MyLanguage/Events\")\n*   [Documentation](https://wiki.documentfoundation.org/Special:MyLanguage/Documentation \"Special:MyLanguage/Documentation\")\n*   [Website](https://wiki.documentfoundation.org/Special:MyLanguage/Website \"Special:MyLanguage/Website\")\n*   [Localization](https://wiki.documentfoundation.org/Special:MyLanguage/Language \"Special:MyLanguage/Language\")\n*   [Accessibility](https://wiki.documentfoundation.org/Special:MyLanguage/Accessibility \"Special:MyLanguage/Accessibility\")\n*   [Marketing](https://wiki.documentfoundation.org/Special:MyLanguage/Marketing \"Special:MyLanguage/Marketing\")\n*   [Diversity](https://wiki.documentfoundation.org/Special:MyLanguage/Diversity \"Special:MyLanguage/Diversity\")\n*   [Wiki Help](https://wiki.documentfoundation.org/Special:MyLanguage/Help:Editing \"Special:MyLanguage/Help:Editing\")\n\n*   [Overview](https://wiki.documentfoundation.org/Special:MyLanguage/Development \"Special:MyLanguage/Development\")\n*   [Reporting Bugs](https://wiki.documentfoundation.org/Special:MyLanguage/QA/BugReport \"Special:MyLanguage/QA/BugReport\")\n*   [How to build](https://wiki.documentfoundation.org/Special:MyLanguage/Development/BuildingOnLinux \"Special:MyLanguage/Development/BuildingOnLinux\")\n*   [Code Overview](https://wiki.documentfoundation.org/Special:MyLanguage/Development/Code_Overview \"Special:MyLanguage/Development/Code Overview\")\n*   [Git Commands](https://wiki.documentfoundation.org/Special:MyLanguage/Development/Git_For_LibreOffice_Developers \"Special:MyLanguage/Development/Git For LibreOffice Developers\")\n*   [Debugging](https://wiki.documentfoundation.org/Special:MyLanguage/Development/How_to_debug \"Special:MyLanguage/Development/How to debug\")\n*   [EasyHacks](https://wiki.documentfoundation.org/Special:MyLanguage/Development/EasyHacks \"Special:MyLanguage/Development/EasyHacks\")\n*   [Release Plan](https://wiki.documentfoundation.org/Special:MyLanguage/ReleasePlan \"Special:MyLanguage/ReleasePlan\")\n*   [FAQ](https://wiki.documentfoundation.org/Special:MyLanguage/Development/FAQ \"Special:MyLanguage/Development/FAQ\")\n*   [Developers](https://wiki.documentfoundation.org/Special:MyLanguage/Development/Developers \"Special:MyLanguage/Development/Developers\")\n*   [Extensions](https://wiki.documentfoundation.org/Special:MyLanguage/Development/Extension_Development \"Special:MyLanguage/Development/Extension Development\")\n*   â†’ [Open Issues](https://bugs.documentfoundation.org/report.cgi?x_axis_field=bug_severity&y_axis_field=component&z_axis_field=&query_format=report-table&short_desc_type=allwordssubstr&short_desc=&product=LibreOffice&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&bug_status=RESOLVED&bug_status=VERIFIED&bug_status=CLOSED&bug_status=NEEDINFO&bug_status=PLEASETEST&resolution=---&longdesc_type=allwordssubstr&longdesc=&bug_file_loc_type=allwordssubstr&bug_file_loc=&status_whiteboard_type=allwordssubstr&status_whiteboard=&keywords_type=allwords&keywords=&bug_id=&bug_id_type=anyexact&emailtype1=substring&email1=&emailtype2=substring&email2=&emailtype3=substring&email3=&chfieldvalue=&chfieldfrom=&chfieldto=Now&j_top=AND&f1=noop&o1=noop&v1=&format=table&action=wrap)\n\nThis page lists the project ideas for Google Summer of Code, see the [general info about LibreOffice and GSoC](https://wiki.documentfoundation.org/Development/GSoC \"Development/GSoC\"). All applicants are required to complete at least one [easy hack](https://wiki.documentfoundation.org/Development/EasyHacks \"Development/EasyHacks\").\n\nAll tasks on this page already indicate mentors for the task. New tasks on this page should be added only by those with the experience and time to invest in mentoring new developers.\n\nNote that the LibreOffice project selects GSOC projects that are well researched and show a good understanding of the scope of the problem. It is also possible to create a project proposal not based on the ideas given below, if the application of the contributor shows good understanding of the problem. In fact, if you apply with one of the prepared ideas below, we expect you to show you did research beyond the abstracts given below even more.\n\nWhen doing that please use this template:\n\n=== Title of the task ===\n\nSome detailed description of the things to accomplish.\nDon't hesitate to provide details if you have some like code pointers, links to specifications, etc.\n\nGoal(s) - the expected outcome of the project.\n\n;Required skills / knowledge: C++, Reading other's code, and any other useful skill required go here.\n\n;Size: 90, 175 or 350 hours\n\n;Difficulty: Range among easy, medium, hard\n\n;Potential mentors\n:''Joe Devel'', IRC: jdevel, mail: {{nospam|joe|devel.org}}\n\nPlease move successfully completed projects to [Development/GSoC/Successfully Implemented Ideas](https://wiki.documentfoundation.org/Development/GSoC/Successfully_Implemented_Ideas \"Development/GSoC/Successfully Implemented Ideas\").\n\nUser Experience\n---------------\n\nThe design team collected a number of ideas in in the pad [http://pad.documentfoundation.org/p/UX-GSoC\\_Ideas](http://pad.documentfoundation.org/p/UX-GSoC_Ideas). Not for all ideas mentors have committed so far. If you are interested in a task that has no mentor you would need to find someone. If the topic needs further refinement feel free to contact the UX team in order to prioritize the usability engineering. Some examples for full-featured topics:\n\n### Variable units on numerical input\n\nLibreOffice allows to change the unit from cm to inch or point, etc. but only globally. Some workflows make it necessary to deal with different units at the same time. For instance the page size in inch, positioning of objects in centimeter, and size in points. The proposal is to allow switching the unit on the control.\n\nMockup: [https://bug-attachments.documentfoundation.org/attachment.cgi?id=130628](https://bug-attachments.documentfoundation.org/attachment.cgi?id=130628)\n\n[Enhancement request on Bugzilla](https://bugs.documentfoundation.org/show_bug.cgi?id=72662) (and the various See Also tickets)\n\nGoals:\n\n1.  derive a new control from spin edit that allows switching the unit\n2.  ideally but optionally remember the unit per control\n3.  consider solutions to change the precision per adding decimal places\n4.  replace the existing numerical spin edit controls\n\nRequired skills / knowledge\n\n(C++, Reading other's code)?\n\nSize\n\n350 hours\n\nDifficulty\n\n(Medium)?\n\nPotential mentors\n\n_Andreas Heinisch_, mail: andreas.heinisch![Image 1: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)yahoo.de\n\n_Heiko Tietze_, IRC: htietze, Mail: heiko.tietze![Image 2: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)documentfoundation.org\n\n### Remember window size per document\n\nLibreOffice remembers the window size per module and it's possible to have, for example, a Writer document in landscape next to a portrait sized Calc sheet. However, closing the modules brings you back to the start center which overwrites the module size. And the size/position is not stored per document, which is a major problem for many users.\n\n[Ticket on Bugzilla](https://bugs.documentfoundation.org/show_bug.cgi?id=41777).\n\nGoal:\n\nRestore the window size per module from the document\n\nRequired skills / knowledge\n\n(C++, Reading other's code)?\n\nSize\n\n175 hours\n\nDifficulty\n\n(Medium)?\n\nPotential mentors\n\n_Andreas Heinisch_, mail: andreas.heinisch![Image 3: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)yahoo.de\n\n_Heiko Tietze_, IRC: htietze, Mail: heiko.tietze![Image 4: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)documentfoundation.org\n\n### Improve snapping and object selection\n\nSnapping in LibreOffice is a bit awkward, and doesn't work as expected in some cases. There is also no advanced snapping supported (taking into account multiple object positions and distances), which would make object position and sizing much easier for the user. This idea involves investigating the existing implementation for snapping in the svx module and work on it.\n\nGoal:\n\nMake snapping and object selection pleasant to use.\n\nExtended goal for this idea is to look into object selection and handles rendering, consistency and UX. In some cases the selection and selection handles aren't properly rotated with the object, sometimes an outline of the selection isn't rendered or rendering could be improved.\n\nRequired skills / knowledge\n\n(C++, Reading other's code)?\n\nSize\n\n350 hours\n\nDifficulty\n\nHard\n\nPotential mentors\n\n_TomaÅ¾ Vajngerl_, IRC: quikee, mail: quikee![Image 5: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)gmail.com\n\n### Re-design Notebookbar using Native Toolkit Widgets\n\nThe task here is to redesign the Notebookbar to use [vcl weld mechanism](https://wiki.documentfoundation.org/Development/VCL/weld \"Development/VCL/weld\") instead of custom widgets. The issue is filed as [tdf#163988](https://bugs.documentfoundation.org/show_bug.cgi?id=163988) in Bugzilla.\n\nCurrently, although Notebookbar uses Glade UI files, it uses [custom widgets](https://dev.blog.documentfoundation.org/2024/11/14/notebookbar-part-1-custom-widgets-for-the-tabbed-interface/), and most of the logic is done in C++ code.\n\nAlthough the result looks nice with GTK3 and some other UI plugins, it has some drawbacks as described in [tdf#163988](https://bugs.documentfoundation.org/show_bug.cgi?id=163988). Specially in GTK4, the result is not interesting. Also, changing the Notebookbar in the Glade interface designer is not easy/possible with this approach.\n\nThe task here is to re-design the Notebookbar, using native toolkit widgets and make sure that is usable with VCL weld mechanism. Doing modifications in the C++ code to make it usable in LibreOffice UI is not part of this task, so that people who only know how to design, but are not familiar with C++ can also do the task. To make the result usable with LibreOffice, additional coding/refactoring is needed which does not fit into this project.\n\nOne can start by creating a dialog box with `GtkNotebook`, and then add appropriate icons and other GTK widgets to reach to a reasonable UI, comparable to what is available with the custom widgets.\n\nPlease note that not each and every GTK widget is supported by VCL weld, so you have to go step by step to make sure that the result works well with VCL weld mechanism.\n\nA preview can be generated by both `glade-previewer -f notebook.ui` and also by using the ui file with [minweld example](https://wiki.documentfoundation.org/Development/VCL/minweld \"Development/VCL/minweld\"). One may test the result, after putting the UI file in `instdir/share/config/soffice.cfg/` and changing the `minweld` example to reflect the name of the UI and the ID of the dialog.\n\n```\n./bin/run minweld\n```\n\nGoal:\n\nRe-design Notebookbar using native widgets.\n\nRequired skills / knowledge\n\nUI Design, Glade UI designer, Reading other's code\n\nSize\n\n175 hours\n\nDifficulty\n\nMedium\n\nPotential mentors\n\n_Hossein Nourikhah_, IRC: hossein, mail: hossein![Image 6: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)libreoffice.org\n\n### New dialog to edit Table Styles\n\nLibreOffice Writer and Calc have a set of built-in table styles. For instance, in Writer, when the user inserts a new table, they can go to Table - AutoFormat Styles to select which style to apply to the table.\n\nTo create a new style, the user can first insert a table to the document, format it manually and then go to Â â–¸ and click Add. This will extract the table formatting properties and create the new style.\n\nHowever, LibreOffice does not offer a dialog to Edit existing table styles.\n\nThe objective of this project is to create a new dialog to edit all the properties of existing table styles.\n\nThe UX team has already devised [a proposal](https://design.blog.documentfoundation.org/2015/12/13/style-your-tables/) for the new Edit Table Styles dialog.\n\nAs a stretch goal, it would be nice to have this dialog be used in Impress as well. See the Table Design entry in Impress's Properties sidebar when a table is selected.\n\nRequired skills / knowledge\n\nC++, Reading other's code, Debugging\n\nSize\n\n175 hours\n\nDifficulty\n\nMedium\n\nPotential mentors\n\n_Rafael Lima_, mail: rafael.palma.lima![Image 7: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)gmail.com\n\nBase\n----\n\n### Implement report builder in C++\n\nDesigning and generating reports in LibreOffice is an important feature of LibreOffice BASE. The [current **report builder** implementation](https://docs.libreoffice.org/reportbuilder.html) uses Java and Pentaho Reporting Flow Engine of Pentaho BI for creating the output, which is an ODT file. Dependence on Java and Pentaho creates issues for packaging LibreOffice in different distributions, and also makes development harder.\n\nThe file format used for storing the reports is in itself and XML file, and the resulting ODT file is also an XML document conforming to ODF standard. In order to implement **report builder** in C++, one should look into the import/export filters in LibreOffice, like the FODF which use XSLT. The resulting code should be able to do the export to ODT without the help of Pentaho library and/or Java.\n\nLibreOffice uses [`libxslt`](https://opengrok.libreoffice.org/xref/core/external/libxslt/) as an external library that provides the required tool to XSL tranfromations in C++ code. One can find some of the existing XSL transformation files used in import/export filters with:\n\n```\n$ git ls-files \"filter/*.xsl\"\n```\n\nDefining appropriate XSL transformation file alongside writing C++ code is needed to implement the reportgenerator.\n\nThe other parts of the reporting workflow are already in C++. The [**reportdesign**](https://docs.libreoffice.org/reportdesign.html) is in C++, and also other parts of the LibreOffice BASE that the report designer relies on are written in C++. This project can also improve report generating performance of LibreOffice.\n\nGoal\n\nImplementing report builder in C++, and removing the Java / Pentaho dependency\n\nRequired skills / knowledge\n\nC++, XML, XSLT, Reading other's code\n\nSize\n\n350 hours\n\nDifficulty\n\nHard\n\nPotential mentors\n\n_Hossein Nourikhah_, IRC: hossein, mail: hossein![Image 8: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)libreoffice.org\n\nBasic\n-----\n\nDraw\n----\n\nImpress\n-------\n\n### Attach animations to styles\n\nCurrently, Impress styles control most of the visual shape appearance, but not the slideshow animation effect. Which is a pity, as the styles concept is pretty powerful inside LibreOffice, and provides a nice way to change animation settings and type for a great number of objects simultaneously. For a slightly different view onto the same problem, see [this](https://bz.apache.org/ooo/show_bug.cgi?id=73090) bug report, and [this one](https://bugs.documentfoundation.org/show_bug.cgi?id=41572) from the LibreOffice side.\n\nOriginal patch from GSoC 2010: [https://cgit.freedesktop.org/libreoffice/build/tree/patches/dev300/sd\\_effects\\_styles.diff?h=master-backup](https://cgit.freedesktop.org/libreoffice/build/tree/patches/dev300/sd_effects_styles.diff?h=master-backup)\n\nGoal:\n\nMake styles animatable.\n\nRequired skills / knowledge\n\nC++, Reading other's code\n\nSize\n\n350 hours\n\nDifficulty\n\nHard\n\nPotential mentors\n\n_Thorsten Behrens_, IRC: thorsten, mail: thorsten.behrens![Image 9: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)allotropia.de\n\n_Katarina Behrens_, IRC: bubli, mail: bubli![Image 10: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)bubli.org\n\n### Rework Impress slideshow to use DrawingLayer primitives\n\nThe Impress slideshow, while being designed to only interact with Impress via interfaces, had to resort to an ugly hack to be able to render all Impress content. That was ok back in the day, but is becoming a liability these days. Nowadays, what one want to use is the DrawingLayer Primitives ([https://wiki.openoffice.org/wiki/DrawingPrimitives](https://wiki.openoffice.org/wiki/DrawingPrimitives)), which means porting over [slideshow/source/engine/shapes/\\*](https://cgit.freedesktop.org/libreoffice/core/tree/slideshow/source/engine/shapes) to use this kind of abstraction, instead of the StarView Metafile previously in use.\n\nGoal:\n\nGet rid of ugly hack for rendering Impress content in slideshows by porting code to use DrawingLayer primitives.\n\nRequired skills / knowledge\n\nC++, Reading other's code.\n\nSize\n\n350 hours\n\nDifficulty\n\nHard\n\nPotential mentors\n\n_Thorsten Behrens_, IRC: thorsten, mail: thorsten.behrens![Image 11: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)allotropia.de\n\nCalc\n----\n\n### Implement table styles\n\nCalc so far lacks real table styles, which for example can be seen in Impress tables, with formatting of header row, header column, banded rows and columns, total row, rightmost column, ...\n\nThe existing old technology _Format â†’ AutoFormat Styles_ are visually similar, but very inefficient in that they apply individual attributes to individual cells, which a) is slow, and b) bloats the document size, and also can't cope with hidden rows or columns to keep a visually stable table style layout.\n\nSee also [tdf#132780](https://bugs.documentfoundation.org/show_bug.cgi?id=132780)\n\nGoal:\n\nReplace hacky table formatting with real table styles in Calc.\n\nRequired skills / knowledge\n\nC++, Reading other's code, Debugging, Understanding the concept of different layers of cell attribution, Having an idea of how a single attribute with one value could be used for this\n\nSize\n\n350 hours\n\nDifficulty\n\nMedium Hard\n\nPotential mentors\n\n_[Eike Rathke](https://wiki.documentfoundation.org/User:ErAck \"User:ErAck\")_, IRC: erAck, mail: erack![Image 12: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)redhat.com\n\nCommon\n------\n\n### Accessibility checker for Impress and Calc\n\nWe have an accessibility checker sidebar in Writer, but not in Impress and Calc. The accessibility checker triggers a check of the document for accessibility issues and displays those in the sidebar, with helpful hints how to resolve those issues. Accessibility issues include checks of the document metadata (name, description), document structure, objects in the document, as well as check of contrast (font color vs. background color). A lot of issues apply for Impress and Calc too, but some are Writer specific and there as some that are unique to Impress and Calc.\n\nGoal:\n\nAdd accessibility sidebar to impress (move code from writer to common code into svx or sfx2), implement a trigger to re-run a check when an object changes, go through the accessibility checks for writer and investigate which check also applies to Impress, add the accessibility check to common code and adapt if necessary (for example to work in editeng and not writer model). If there is still time, repeat the same for Calc.\n\nRequired skills / knowledge\n\nC++, Reading other's code, Debugging,\n\nSize\n\n350 hours\n\nDifficulty\n\nMedium to Hard\n\nPotential mentors\n\n_TomaÅ¾ Vajngerl_, IRC: quikee, mail: quikee![Image 13: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)gmail.com\n\n### Extend support for document theme colors\n\nSupport for theme colors is already implemented for Writer, Impress/Draw and Calc, however some colors weren't extended to support theme colors properly. Also when we define gradients we don't support theme colors there so support for theme color gradients would need to be added.\n\nGoal:\n\nSearch for properties or parts of properties where we use colors, but we don't support to set a ComplexColor (used for theme colors). Implement a property that works with a ComplexColor for that property, add support to change the color in ThemeColorChanger, write a round-trip test and adapt the import/export filters (for ODF and OOXML) to support saving the theme color for the property. Repeat.\n\nRequired skills / knowledge\n\nC++, Reading other's code, Debugging\n\nSize\n\n350 hours\n\nDifficulty\n\nHard\n\nPotential mentors\n\n_TomaÅ¾ Vajngerl_, IRC: quikee, mail: quikee![Image 14: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)gmail.com\n\nFilters\n-------\n\n### Import Markdown files into LibreOffice Writer\n\nThis project is meant to deliver a first working version of Markdown import into LibreOffice Writer, optionally using a document template (OTT) to provide decorative content, and custom styles. Participants are encouraged to research available import libraries, as well as means to get content inserted programmatically into a Writer document (e.g. via UNO, or via DLP's librevenge).\n\nRelated report: [tdf#162153](https://bugs.documentfoundation.org/show_bug.cgi?id=162153).\n\nGoal:\n\nMake it possible to import Markdown files compliant to the [CommonMark specification](https://spec.commonmark.org/) into Writer.\n\nAs a stretch goal, adding experimental support for Paste-special-as-Markdown can be implemented for Writer.\n\nRequired skills / knowledge\n\nC++, working with libraries\n\nSize\n\n350 hours\n\nDifficulty\n\nMedium\n\nPotential mentors\n\n_Thorsten Behrens_, IRC: thorsten, mail: thorsten.behrens![Image 15: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)allotropia.de\n\nUNO\n---\n\nUNO is the LibreOffice component model, cross-language and intra- as well as inter-process. It is somewhat similar to Corba and COM. It is used to extend LibreOffice via document-related scripts and more general extension packages, as well as to use LibreOffice functionality remotely from another process.\n\nUNO's cross-language abilities are implemented by bridging between various language-specific environments and a binary runtime representation (with a C API). Next to C++, Java, and Python, it would be great to have such a bridge also for a great language like Rust and a lightweight scripting language like LUA and latest version of .NET, which is cross-platform.\n\n### Rust UNO Language Binding\n\nOne aspect is to use Rust FFI to interface with the binary UNO C API. Another is to design the Rust representations of the various UNO constructs (its data types; objects with their multiple interfaces and methods; services and singletons), so that this language binding can not only be used to interact with existing LibreOffice services written in other languages, but also to create new services in Rust. A third aspect could be to create a pure Rust implementation of the UNO remote bridge protocol.\n\nSome documentation pointers are:\n\n*   [UNO Type System](https://www.openoffice.org/udk/common/man/typesystem.html)\n*   [UNO Object Life Cycle Model](https://www.openoffice.org/udk/common/man/lifecycle.html)\n*   [Uno Remote Protocol](https://wiki.openoffice.org/wiki/Uno/Remote/Specifications/Uno_Remote_Protocol)\n\nSome code pointers are:\n\n*   [`bridges/source/jni_uno`](https://cgit.freedesktop.org/libreoffice/core/tree/bridges/source/jni_uno?id=fa97b8ac234c34618d8dca4329bc13e8454b47b4) as an example of an in-process UNO bridge (for Java, via JNI)\n*   [`binaryurp`](https://cgit.freedesktop.org/libreoffice/core/tree/binaryurp?id=fa97b8ac234c34618d8dca4329bc13e8454b47b4) as an example of a remote UNO bridge (in C++)\n\nGoal:\n\nMake it possible to use LibreOffice's UNO API with Rust.\n\nRequired skills/knowledge\n\nRust, interfacing to low-level C/C++, working against formal specifications\n\nSize\n\n350 hours\n\nDifficulty\n\nMedium to hard\n\nPotential mentors\n\n_Stephan Bergmann,_ IRC: sberg, mail: stephan.bergmann![Image 16: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)allotropia.de\n\n_Michael Stahl_, IRC: mst\\_\\_\\_, mail: mst![Image 17: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)libreoffice.org\n\n_Bjoern Michaelsen_, IRC: Sweetshark, mail: bjoern.michaelsen![Image 18: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)libreoffice.org\n\n### Python code auto-completion\n\nWhile it has been years since LibreOffice (and before that, OpenOffice) support Python binding, there were difficulties for the Python script developers to use it efficiently. One of the obstacles is the lack of Python auto-completion. The reason why this was not possible was that the Python objects are created at runtime, and therefore an IDE can not know about the structure of the classes when a developer writes the code.\n\nThe solution for that is to generate Python stubs from IDL specifications. This is done in many other languages in the module `codemaker`. The task here is to create a similar tool for Python, which can be named `pythonmaker`.\n\nTo get an idea of the needed code, you may look into `codemaker/source/`, and there you will see:\n\n*   `cppumaker`: stub generator for C++\n*   `javamaker`: stub generator for Java\n*   `netmaker`: stub generator for Python\n\nGoal:\n\nMake it possible to do Python code auto-completion by generating Python stubs from IDL specifications.\n\nRequired skills/knowledge\n\nC++, Python, reading other people's code\n\nSize\n\n350 hours\n\nDifficulty\n\nMedium to hard\n\nPotential mentors\n\n_Hossein Nourikhah,_ IRC: hossein, mail: hossein![Image 19: @](https://wiki.documentfoundation.org/images/8/88/At_sign.svg)libreoffice.org\n\nIdeas without a mentor\n----------------------\n\nA number of ideas from previous years can be found at the [Development/GSoC/Ideas without a mentor](https://wiki.documentfoundation.org/Development/GSoC/Ideas_without_a_mentor \"Development/GSoC/Ideas without a mentor\") page. Please note that you need to find a mentor willing to mentor the task. There is no guarantee that anyone in the community is going to mentor one of these tasks this year.\n"}