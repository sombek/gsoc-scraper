{"name":"Synfig","description":"Open-source 2D animation software","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/synfig","ideas_url":"https://github.com/synfig/synfig-docs-dev/blob/master/docs/gsoc/2025/ideas.rst","logo":"https://summerofcode.withgoogle.com/media/org/synfig/ohcj3eigerib4jym-360.png","technologies":["python","c++","gtk","gtkmm"],"topics":["2d/3d graphics","animation","vector graphics"],"projects":[{"project_name":"macOS app bundle","summary":"Improvement of macOS app bundle creation, addressing slow generation and signing issues. Focus on better adoption to macOS guidelines.","difficulty":"Medium"},{"project_name":"Synfig Android Version","summary":"Development of a Synfig version for Android with a prototype UI and integrated features from Synfig Studio.","difficulty":"Medium/High"},{"project_name":"Brush tool","summary":"Implementation of a Brush tool for raster drawing within Synfig, enabling users to draw directly in the application.","difficulty":"Medium/High"},{"project_name":"Exporter to Spine file format","summary":"Creation of an export tool that enables exporting skeleton-based animations from Synfig Studio to the Spine file format.","difficulty":"Medium"}],"jina_response":"Title: synfig-docs-dev/docs/gsoc/2025/ideas.rst at master · synfig/synfig-docs-dev\n\nURL Source: https://github.com/synfig/synfig-docs-dev/blob/master/docs/gsoc/2025/ideas.rst\n\nMarkdown Content:\nSkip to content\nNavigation Menu\nProduct\nSolutions\nResources\nOpen Source\nEnterprise\nPricing\nSign in\nSign up\nsynfig\n/\nsynfig-docs-dev\nPublic\nNotifications\nFork 26\n Star 6\nCode\nIssues\n6\nPull requests\n9\nActions\nProjects\nSecurity\nInsights\n master\nBreadcrumbs\nsynfig-docs-dev/docs/gsoc/2025\n/ideas.rst\nLatest commit\n \nHistory\nHistory\nFile metadata and controls\nPreview\nCode\nBlame\n187 lines (108 loc) · 8.03 KB\nRaw\nIdeas List\n\nThis year we plan to apply to Google Summer of Code. Currently we are looking for project ideas. If you are a contributor, you are welcome to explore existing project ideas towards the GSoC application phase. There are ways to reach out to mentors, and many projects have lists of newcomer friendly issues you can start from. Contributors are also welcome to propose their own project ideas.\n\nProjects Ideas\nmacOS app bundle (175 or 350 hrs)\n\nDescription:\n\nWe are currently using a script to create a macOS app bundle, but it has some issues. Generation takes a long time (could be greatly improved), it uses incorrect paths in some places and does not sign files.\n\nRequirements: macOS or access to macOS command-line (so you can test your script)\n\nadd script/program to collect executable/library dependencies (python/c++ preferred) to SynfigStudio.app folder\nadd support for signing binary files (this should be done in reverse order, files without dependencies should be signed first, SynfigStudio.app should be signed last)\nremove the macOS launcher script, add the code to set up the required macOS environment from the synfig/synfigstudio apps\nadd cpack support to build installer on macOS\nadd python and lxml packaging to .app (with signing))\ninterface/menu improvements for more native macOS support\n\nWhere to begin:\n\ncreate prototype script/program to collect executable/library dependencies\n\nExpected outcome:\n\n175 hours\n\nCMake/CPack builds SynfigStudio.app ready for distribution\n\n350 hours\n\nSynfig Studio is better adopted to macOS guidelines\n\nDifficulty: Medium\n\nSkills required/preferred: Python/C++\n\nPossible mentor(s): Dhairya Bahl, Rodolfo Ribeiro Gomes\n\nExpected size of project: 175 or 350 hours\n\nSynfig Android Version (350hrs)\n\nDescription: This project aims at providing a solid ground for a Synfig Android version. It aims to do so through two main parts.\n\n1- Prototype UI (Using Qt for android) that uses synfigapp and -in turn- synfig-core\n\nThere are two main goals here: 1. To have a basic android UI for synfig working. 2. While making this prototype certain parts of the synfig api would be fixed. Which would make SynfigApp and Synfig-Core able to be used with any other UI not just the current gtkmm UI (synfig-studio).\n\n2- Add more features to the UI Synfig is quite a huge application. Most likely this app would start with only very basic needed synfig features added. Then gradually adding more features from synfig-studio to the new prototype UI.\n\nWhere to begin:\n\nStart out by understanding and gathering the basic features for animation in synfig. In your proposal include these features and expand on how you plan to include them.\nResearch the available mobile/tablet animation apps and prototype a ui design using any ui design software (e.g. canva). This is not required but it will definetly help your proposal.\n\nExpected outcome\n\nPrototype Synfig Android Version\nImproved synfig-app and (possibly) synfig-core that can work with any other UI.\n\nDifficulty: Medium/High\n\nSkills required/preferred: C++, gtkmm, Qt, using Qt for Android\n\nPossible mentor(s): Mohamed Adham , Rodolfo Ribeiro Gomes\n\nExpected size of project: 350 hours\n\nBrush tool (175hrs)\n\nDescription:\n\nSynfig is primarily designed for vector-based animation, but it also supports the use of raster images within animations. However, the current functionality only allows for the use of raster images imported from external files (usually BMP, JPG or PNG), limiting users from drawing directly within the application. The goal of this project is to implement the missing Brush tool for raster drawing, allowing users to draw raster content directly in the app. An early attempt to implement this feature, called 'Brush,' exists, but it is entirely nonfunctional. Users are unable to make even a single stroke with the tool.\n\nWhere to begin:\n\nLook for the code of how tools are implemented in Synfig. As they are coded as a finite state machine, the correspondent files are name as state_\n\n2. synfigapp is responsible for handling the interface between the graphical user interface (GUI) and the underlying core engine of Synfig (which handles the animation and rendering processes). There are some synfigapp::Actions trying to implement it, as in synfig-studio/src/synfigapp/actions/layerpaint.h\n\nExpected outcome\n\nA working tool that allows users to freely hand-draw their artwork, which can then be animated within Synfig, with undo/redo functionality while drawing and features like brush selection, coloring options, and erasing.\n\nDifficulty: Medium/High\n\nSkills required/preferred: C++, gtkmm, 2D-drawing\n\nPossible mentor(s): Rodolfo Ribeiro Gomes , Mohamed Adham\n\nExpected size of project: 175 hours\n\nExporter to Spine file format (175hrs)\n\nDescription:\n\nThe goal of this project is to implement a feature in Synfig Studio that enables exporting skeleton-based animations to the Spine file format. This would allow users to seamlessly transfer their Synfig animations, those created using bone-based rigs and skeleton systems, to Spine for additional refinement or game engine integration. This would involve creating an export function in Synfig that outputs the necessary JSON or binary format that Spine can read. The project will ensure that all essential animation data, such as bone movements, and keyframe timing, are accurately preserved during the export. Thus, users can leverage Synfig's powerful animation tools while taking advantage of Spine's advanced features, such as runtime support in various game engines.\n\nWhere to begin:\n\nCheck Synfig skeleton layer code\nCheck Spine JSON format (https://en.esotericsoftware.com/spine-json-format)\nTry to add new menu option \"Export to Spine format\" to Skeleton layer, which should create basic Spine JSON file.\n\nExpected outcome * A fully functional export tool in Synfig Studio capable of converting skeleton-based animations into the Spine file format. * The exported Spine file should retain all key elements of the animation, including bones, mesh deformation, and animation keyframes. * The ability to open and refine the exported Spine animation in Spine's editor or integrate it directly into a game engine.\n\nDifficulty: Medium\n\nSkills required/preferred: Python (or C++), XML and JSON, understanding of Synfig's animation system, especially skeleton-based animation and bone rigs, and Synfig file format.\n\nPossible mentor(s): Rodolfo Ribeiro Gomes , Mohamed Adham\n\nExpected size of project: 175 hours\n\nPropose a Project\n\nIf you have a project idea, edit the \"Project Ideas\" section below by filling the required details and sending a pull request (this page is editable at https://github.com/synfig/synfig-docs-dev/blob/master/docs/gsoc/2025/ideas.rst), even if you could not mentor (we will find a mentor).\n\nRequired information for project proposal\n\nA descriptive title (175 or 350 hrs)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n**Description**\n\nA brief description about the project\n\n**Expected outcome**\n\nWhat benefit this deliver?\n\n**Difficulty** Easy | Medium | High\n\n**Skills required/preferred:** Knowledge Prerequisite\n\n**Possible mentor(s):** Put your name if you are willing to mentor + other mentors.\n\n**Expected size of project:** 90, 175 or 350 hours\n\n\nPlease mention the following as comment on your proposal pr\n\nYour name:\t:)\nYour profile:\tgithub | linkedin | etc\nYour role:\tI am a making this proposal as a <student | mentor | community member | contributor | etc>\nContacts\n\nhttps://www.synfig.org/contact/\n\nFooter\n© 2025 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact\nManage cookies\nDo not share my personal information\n"}