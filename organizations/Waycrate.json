{"name":"Waycrate","description":"Writing robust tools for the Wayland protocol","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/waycrate","ideas_url":"https://waycrate.github.io/outreach/gsoc/2025/idea-list/","logo":"https://summerofcode.withgoogle.com/media/org/waycrate/u6pnvceiilur7iqy-360.png","technologies":["c","c++","rust","wayland","Zig"],"topics":["security","graphics","Wayland","ScreenCapture","Desktop Portals"],"projects":[{"project_name":"ext_image_capture_source_v1 Protocol Support in Wayshot","summary":"Introduce support for the ext_image_capture_source_v1 protocol in Wayshot to enhance security and user experience for display and window captures.","difficulty":"Hard"},{"project_name":"libinput Backend for SWHKD","summary":"Implement a libinput backend in SWHKD to improve keyboard detection accuracy and simplify security models while enhancing user experience.","difficulty":"Medium"},{"project_name":"RDP Support in xdg-desktop-portal-luminous","summary":"Add Remote Desktop Protocol (RDP) support to xdg-desktop-portal-luminous to allow seamless remote desktop access for applications on Wayland.","difficulty":"Medium-ish (leaning towards hard)"}],"jina_response":"Title: GSoC 2025 cohort idea list\n\nURL Source: https://waycrate.github.io/outreach/gsoc/2025/idea-list/\n\nMarkdown Content:\nIdea 1: Introduce [ext\\_image\\_capture\\_source\\_v1](https://wayland.app/protocols/ext-image-capture-source-v1#ext_image_capture_source_v1) protocol support in Wayshot and improve security features\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n### Possible Mentors:\n\n*   Rachancheet Singh Kohli (rachancheet37 \\[at\\] gmail.com)\n*   Aakash Sen Sharma (aakashsensharma \\[at\\] gmail.com)\n*   Ishan Joshi (joshiishan246890 \\[at\\] gmail.com)\n\n### Difficulty: Hard\n\n### Project Size: Large (350 Hours)\n\n### Pre-requisite Skills: Rust, Wayland Protocols ( Optional )\n\n### Description:\n\nThe ext\\_image\\_capture\\_source\\_v1 protocol has recently been introduced to Wayland, providing a standardized method for display and top-level window capture. Wayshot currently supports CPU-based and GPU-based capture over wlr-screencopy protocol which is non-standard. Adopting the official protocol offers toplevel capture capabilities natively and improves the user experience.\n\nThis idea aims to introduce a new backend and turn the wlr backend into a legacy codebase for backwards compatibility. Due to the existence of this standardized protocol, we can now also provide extra _security_ to users and denote over dbus notifications when a particular app-id is being recorded by wayshot clients.\n\n### Expected Outcomes:\n\n*   Introduction of new standardized protocol and _security features_ to denote when toplevels are recorded by clients.\n*   Integration of the same protocol to xdg-desktop-portal-luminous to enable standardized WebRTC streaming.\n\nIdea 2: Introduce libinput backend to SWHKD to improve keyboard detection and security heuristics\n-------------------------------------------------------------------------------------------------\n\n### Possible Mentors:\n\n*   Ishan Joshi (joshiishan246890 \\[at\\] gmail.com)\n*   Aakash Sen Sharma (aakashsensharma \\[at\\] gmail.com)\n\n### Difficulty: Medium\n\n### Project Size: Medium (175 Hours)\n\n### Skills: Rust\n\n### Description:\n\nCurrently SWHKD uses the linux kernel evdev module to read keyboards and has very simplistic heuristics for device detection that is not ideal and prone to errors. Due to these heuristics SWHKD in some scenarios may capture kernel events from devices that are _NOT_ meant to be grabbed.\n\nEvdev also requires a very complex security model to work with to ensure proper execution and we hope libinput helps us resolve some of that.\n\nThis can be avoided by a more restricted libinput API and can significantly reduce code complexity. This would also vastly enhance the UX of the project at the cost of reduced capabilities but that can be avoided by a feature flag during build time.\n\n_PS: Due to space constraints we are unable to list out all the advantages & disadvantages of evdev. If youâ€™d be interested in those details, feel free to contact the listed possible mentors._\n\n### Expected Outcomes:\n\n*   Introduction of new libinput API for improved UX\n\nIdea 3: Introduce RDP support into xdg-desktop-portal-luminous\n--------------------------------------------------------------\n\n### Possible Mentors:\n\n*   Decodetalkers (chenhongtao12345678 \\[at\\] gmail.com)\n*   Aakash Sen Sharma (aakashsensharma \\[at\\] gmail.com)\n\n### Difficulty: Medium-ish (leaning towards hard)\n\n### Project Size: Medium (175 Hours)\n\n### Skills: Rust\n\n### Description:\n\nXdg-desktop-portal-luminous is a high performance capture portal for wayland compositors that supports frame capture and gpu-copy based frame streaming. The goal of this idea is to introduce support for remote-desktop protocol to enable applications like teamviewer and anydesk to work seamlessly on wayland compositors using our custom portal backends.\n\nThis will improve adoption and UX, users will no longer need to depend on other portals for this particular usecase and all usecases can be consolidated into 1 portal.\n\n### Expected Outcomes:\n\n*   Introduction of RDP support to luminous portal.\n"}