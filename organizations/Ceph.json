{"name":"Ceph","description":"The Future of Storage","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/ceph","ideas_url":"https://ceph.io/en/developers/google-summer-of-code/","logo":"https://summerofcode.withgoogle.com/media/org/ceph/rvqqprqtyq0rfrcc-360.png","technologies":["python","javascript","c++"],"topics":["distributed systems","Software-Defined-Storage"],"projects":[{"project_name":"Teuthology on Podman","summary":"Development of a tool using podman containers for testing Ceph changes, enhancing capabilities for running tests.","difficulty":"Hard"},{"project_name":"smartmontools drivedb.h postprocessor","summary":"Refining the drivedb.h file for smartmontools to enable better analysis of storage device data by normalizing attribute labels.","difficulty":"Intermediate"},{"project_name":"The More The Merrier","summary":"Creating a sharded notification queue for persistent bucket notifications in Ceph to enhance performance and reduce overhead.","difficulty":"Hard"},{"project_name":"Public telemetry slice/dice of SMART data","summary":"Parsing and normalizing SMART data telemetry for better analysis and visual representation in user-friendly formats.","difficulty":"Medium"},{"project_name":"Warm and Fuzzy","summary":"Utilizing a REST API fuzzer to test the security of Ceph's RGW and integrating fuzzing tests into automated workflows.","difficulty":"Medium"},{"project_name":"Ceph Dashboard Usability Improvements","summary":"Enhancing the Ceph Dashboard interface by improving user experience workflows and usability for managing NVMe-oF devices.","difficulty":"Easy"}],"jina_response":"Title: Google Summer of Code - Ceph\n\nURL Source: https://ceph.io/en/developers/google-summer-of-code/\n\nMarkdown Content:\n*   [Developers](https://ceph.io/en/developers/)\n    *   [Code](https://ceph.io/en/developers/code/)\n    *   [Contribute](https://ceph.io/en/developers/contribute/)\n    *   [Roadmap](https://ceph.io/en/developers/roadmap/)\n    *   [Google Summer of Code](https://ceph.io/en/developers/google-summer-of-code/)\n\n![Image 1: Google Summer of Code](https://ceph.io/assets/bitmaps/hero-gsoc.png)\n\nGoogle Summer of Code ([g.co/gsoc](http://g.co/gsoc)) is Google's mentorship program for bringing new contributors into open source communities.\n\nGoogle Summer of Code is a unique program where new contributors to open source, ages 18 and over, are paired with a mentor to introduce them to the open source community and provide guidance while they work on a real world open source project over the summer. Projects cover a wide range of fields including: Cloud, Operating Systems, Graphics, Medicine, Programming Languages, Robotics, Science, Security and many more. GSoC Contributors do earn a stipend to work on their small, (~90 hour), medium (~175 hour) or large (~350 hour) projects.\n\nGSoC is a highly competitive program, so don't wait to the last minute to prepare! GSoC Contributors should reach out to the mentors of projects that interest them once orgs are announced on February 27, 2025. Potential GSoC Contributors can apply for Ceph's projects at [g.co/gsoc](http://g.co/gsoc) from March 24th - April 8, 2025.\n\nSee the list of projects we have available for GSoC contributors and [learn how get started with contributions](https://ceph.io/en/developers/contribute/).\n\nFor any questions, contact Vallari Agrawal ([vallari.agrawal@ibm.com](mailto:vallari.agrawal@ibm.com)).\n\n* * *\n\nTeuthology on Podman [¶](https://ceph.io/en/developers/google-summer-of-code/#teuthology-on-podman)\n---------------------------------------------------------------------------------------------------\n\n**Mentor name(s):** Zack Cerza, Kamoltat (Junior) Sirivadhna Aishwarya Mathuria, Vallari Agrawal\n\n**Mentor email(s):** [zack1@ibm.com](mailto:zack1@ibm.com), [ksirivad@ibm.com](mailto:ksirivad@ibm.com), [aishwarya.mathuria@ibm.com](mailto:aishwarya.mathuria@ibm.com), [vallari.agrawal@ibm.com](mailto:vallari.agrawal@ibm.com)\n\n**Difficulty:** Hard\n\n**Project Hours:** 175\n\n**Skills needed:** python, containerisation, linux\n\n**Subcomponent of Ceph:** [Ceph Integration Test Framework](https://github.com/ceph/teuthology)\n\n**Description of project:**\n\n[ceph-devstack](https://github.com/zmc/ceph-devstack) is an in-development tool that uses rootless podman containers to deploy a scaled-down teuthology lab. It has proven useful for testing changes to teuthology and its related services, allowing us to more easily and flexibly make changes to components without worrying about causing outages.\n\nIt has some basic ability to run Ceph tests, but could benefit significantly from more investment in that area.\n\nImprove and extend ceph-devstack's ability to perform teuthology tests against Ceph builds. This project will involve writing Python code and tests to orchestrate podman containers, and working with security systems like SELinux, CGroups, and Linux capabilities.\n\n**Standup/weekly call mentee could attend?:** Teuthology weekly meeting\n\n**Steps to evaluate an applicant for the project:** TBD\n\n**1-2 short paragraphs about what first 2 weeks of work would look like during the internship:** TBD\n\n**Expected Outcome:**\n\nExtend ceph-devstack's ability to perform teuthology tests\n\n* * *\n\nsmartmontools drivedb.h postprocessor [¶](https://ceph.io/en/developers/google-summer-of-code/#smartmontools-drivedb.h-postprocessor)\n-------------------------------------------------------------------------------------------------------------------------------------\n\n**Mentor name(s):** Anthony D'Atri, Sunil Angadi\n\n**Mentor email(s):** [anthony.datri@ibm.com](mailto:anthony.datri@ibm.com), [sunil.angadi@ibm.com](mailto:sunil.angadi@ibm.com)\n\n**Difficulty:** Intermediate\n\n**Project Hours:** 90\n\n**Skills needed:** c++, maybe python or golang\n\n**Subcomponent of Ceph:** Observability\n\n**Description of project:**\n\nsmartmontools (smartctl) is pretty much the only game in town for harvesting metrics and counters from storage devices: SMART for SATA, a few things for SAS, and passthrough to nvme-cli for NVMe. It leverages a runtime file named drivedb.h that directs what attributes are to be found with what numeric IDs, and how to interpret them. drivedb.h is a mess, and upstream smartmontools would likely resist wholesale refactoring. For example, SSD wear might be labeled as \"lifetime remaining\" or \"wear level\" or multiple other strings. Some devices also report wear used, others wear remaining.\n\nOne task would be to add an interpretation primitive to the c++ code so that a drivedb.h entry can specify that the result should be subtracted from 100.  \nThe larger task would be to write a postprocessor for drivedb.h that more or less is a sequence of regex invocations that converges the existing freeform attribute label names into a normalized, defined set. Many tools just pass through the text labels, so doing meaningful analysis or queries is difficult; often only a fraction of the data is actually captured as a result. The output also includes numeric attribute IDs, which are less varied, but relying on them instead of the text labels is fraught because these numeric IDs are not strictly standardized either. I have seen drives that report a metric on a different numeric ID than most others, and/or that report a different metric on a specific numeric than most others report on that ID.\n\nFor extra credit, interface with the central telemetry DB as described in project \"Public telemetry slice/dice of SMART data\".\n\n**Standup/weekly call mentee could attend?:** TBD\n\n**Steps to evaluate an applicant for the project:** Ability to leverage code libraries and write the glue code.\n\n**1-2 short paragraphs about what first 2 weeks of work would look like during the internship:** TBD\n\n* * *\n\nThe More The Merrier [¶](https://ceph.io/en/developers/google-summer-of-code/#the-more-the-merrier)\n---------------------------------------------------------------------------------------------------\n\n**Mentor name(s):** Yuval Lifshitz\n\n**Mentor email(s):** [ylifshit@ibm.com](mailto:ylifshit@ibm.com)\n\n**Difficulty:** Hard\n\n**Project Hours:** 350\n\n**Skills needed:** C++, Python\n\n**Subcomponent of Ceph:** RGW\n\n**Description of project:**\n\nDetailed description of the project and evalution steps can be found [here](https://gist.github.com/yuvalif/9c5a1ed326ca14cf4851d7a0b8ba0db8).\n\nPersistent bucket notifications are a very useful and powerful feature\n\ntech talk: [https://www.youtube.com/watch?v=57Ejl6R-L20](https://www.youtube.com/watch?v=57Ejl6R-L20)\n\nusecase example: [https://www.youtube.com/watch?v=57Ejl6R-L20](https://www.youtube.com/watch?v=57Ejl6R-L20)\n\nHowever, they can pose a performance issue, since the notifications regarding a specific bucket are written to a single RADOS queue (unlike the writes to the bucket which are distributed across multiple bucket shards. So, in case that small objects are written to the bucket, the overhead of the notifications is considerable. In this project, our goal would be to create a sharded bucket notifications queue, to allow for better performance of sending persistent bucket notifications.\n\n**Standup/weekly call mentee could attend?:** RGW daily Standup, RGW weekly refactoring meeting\n\n**Steps to evaluate an applicant for the project:**\n\n*   build ceph from source and run basic bucket notification tests\n*   fix low-hanging-fruit issues in bucket notifications\n\n**1-2 short paragraphs about what first 2 weeks of work would look like during the internship:** TBD\n\n**Expected outcome:**\n\n*   sharded implementation of persistent topic queue\n*   stretch goal: perf test proving performance improvement\n\n* * *\n\nPublic telemetry slice/dice of SMART data [¶](https://ceph.io/en/developers/google-summer-of-code/#public-telemetry-slice%2Fdice-of-smart-data)\n-----------------------------------------------------------------------------------------------------------------------------------------------\n\n**Mentor name(s):** Anthony D'Atri\n\n**Mentor email(s):** [anthony.datri@ibm.com](mailto:anthony.datri@ibm.com)\n\n**Difficulty:** Medium\n\n**Project Hours:** 175\n\n**Skills needed:** Some coding language, Python or Go, jq or JSON parsing or other text library.\n\n**Subcomponent of Ceph:** telemetry\n\n**Description of project:**\n\nPublic telemetry today offers a few Grafana panels and downloadable archives of anonymized data. One field is a JSON blob of smartctl output. Parse this, apply a normalization layer, deduplicate, and present in one or more formats that facilitate analysis:\n\n*   CSV file containing attributes for only the latest report found for a given device\n*   The number of data points might be too high, but possibly a Grafana dashboard or even spreadsheet with template variables for manufacturer/model, interface type, etc. with various panes:\n    *   Histograms of power\\_on hours, normalized endurance used or remaining, etc\n    *   histogram or table of endurance remaining vs power on hours or TBW, i.e. allowing one to predict drive lifetime and inform purchase decisions, vs. assuming that SSDs especially QLC lack endurance or that high-endurance SKUs are required.\n    *   reallocated sectors over time, etc.\n\n**Standup/weekly call mentee could attend?:** TBD\n\n**Steps to evaluate an applicant for the project:** Coding experience beyond Karel\n\n**1-2 short paragraphs about what first 2 weeks of work would look like during the internship:**\n\nGain familiarity with the data format, including JSON. Discuss input filtering: skip over invalid entries, handle submissions from older smartmontools, uniqify, learn about SMART -- and how dumb it is, the need for nomalization of counters.\n\n**Expected outcome**:\n\nDescribed above under Description. More specifically, deriving the rate of wear over time for each specific SSD for which we have more than say a month of data: capture the delta between earliest and latest wear levels reported for each given serial number, and the time delta between those samples. Divide the wear delta by the time delta for rate of wear over time.\n\n* * *\n\nWarm and Fuzzy [¶](https://ceph.io/en/developers/google-summer-of-code/#warm-and-fuzzy)\n---------------------------------------------------------------------------------------\n\n**Mentor name(s):** Yuval Lifshitz\n\n**Mentor email(s):** [ylifshit@ibm.com](mailto:ylifshit@ibm.com)\n\n**Difficulty:** Medium\n\n**Project Hours:** 175\n\n**Skills needed:** C++, Python and also depending with the tool\n\n**Subcomponent of Ceph:** RGW\n\n**Description of project:**\n\nThe RGW's frontend is an S3 REST API server, and in this project we would like to use a REST API fuzzer to test the RGW for security issues (and other bugs). First step of the project would be to select the right tool (e.g. [https://github.com/microsoft/restler-fuzzer](https://github.com/microsoft/restler-fuzzer)), feed it with the AWS S3 OpenAPI spec, and see what happens when we let it connect to the RGW. Fixing issues the fuzzer finds would nice, but the real stretch goal would be to integrate these tests into teuthology.\n\n**Standup/weekly call mentee could attend:** RGW daily Standup, RGW weekly refactoring meeting\n\n**Steps to evaluate an applicant for the project:**\n\n*   build ceph from source and run basic s3 tests\n*   run sts tests against RGW\n*   run the REST fuzzing tool\n\n**1-2 short paragraphs about what first 2 weeks of work would look like during the internship:** TBD\n\n**Expected outcome:**\n\n*   find and fix security issues in the RGW found by the fuzzing tool\n*   stretch goal: integrate tool into automated teuthology runs\n\n* * *\n\nCeph Dashboard Usability Improvements [¶](https://ceph.io/en/developers/google-summer-of-code/#ceph-dashboard-usability-improvements)\n-------------------------------------------------------------------------------------------------------------------------------------\n\n**Mentor name(s):** Afreen Misbah\n\n**Mentor email(s):** [afreen@ibm.com](mailto:afreen@ibm.com)\n\n**Difficulty:** Easy\n\n**Project Hours:** 175\n\n**Skills needed:** Typescript, Angular, and basic understanding of HTML & CSS.\n\n**Subcomponent of Ceph:** Dashboard\n\n**Description of project:**\n\nCeph Dashboard is Ceph's management and monitoring tool. It's a web application tool with Angular/Typescript on frontend side and Python as backend.\n\nWe are in an effort to provide more usability workflows and solve UX issues to make management and monitoring easy for Ceph users.\n\nThe task includes improving the notification system and creating a workflow for managing NVMe-oF devices from dashboard.\n\n**Standup/weekly call mentee could attend?:** Dashboard daily sync\n\n**Steps to evaluate an applicant for the project:**\n\n*   Build ceph dashboard locally via docker-compose and kcli both\n*   Able to understand issues and ask useful questions\n*   Eagerness to learn and contribute\n\n**1-2 short paragraphs about what first 2 weeks of work would look like during the internship:**\n\nLearning about ceph and storage and gradually contributing to the dashboard.\n\n**Expected Outcome:**\n\nImprove dashboard usability.\n\n* * *\n"}