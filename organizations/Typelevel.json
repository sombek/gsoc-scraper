{"name":"Typelevel","description":"We do functional programming together","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/typelevel","ideas_url":"https://typelevel.org/gsoc/ideas","logo":"https://summerofcode.withgoogle.com/media/org/typelevel/hxlcctbqekguxcxx.png","technologies":["linux","node.js","jvm","scala","wasm"],"topics":["web","functional programming","cloud","AI/ML","cats"],"projects":[{"project_name":"Machine learning inference in Cats Effect","summary":"Transform pre-trained ML models into Cats Effect `IO` steps for efficient inference in web services.","difficulty":"Hard"},{"project_name":"Serverless integrations for Feral","summary":"Enhance the Feral library to support more serverless events and cloud providers beyond AWS and Google Cloud.","difficulty":"Medium"},{"project_name":"Native I/O backend for FS2 JVM","summary":"Replace JDK NIO with direct system I/O API calls to improve performance in FS2 networking on JVM.","difficulty":"Medium"},{"project_name":"Polling-based I/O in FS2","summary":"Implement polling for I/O readiness to improve several I/O APIs in FS2 across JVM and Native platforms.","difficulty":"Medium"},{"project_name":"FS2 Connection API","summary":"Create a shared connection API for TCP-based protocols to support pooling, error handling, and metrics.","difficulty":"Hard"},{"project_name":"Web Components for Calico","summary":"Enable Calico users to utilize various web components by enhancing its DSL and code-generation capabilities.","difficulty":"Medium"},{"project_name":"Upgrade sbt-typelevel to sbt 2","summary":"Upgrade the sbt-typelevel plugin to sbt 2, leveraging its new features for enhanced usability in projects.","difficulty":"Medium"},{"project_name":"Refresh Davenverse projects","summary":"Update and maintain popular Typelevel libraries in the Davenverse, ensuring modern build tooling and longevity.","difficulty":"Medium"},{"project_name":"Cats Effect & FS2 on WASM/WASI","summary":"Port the Cats Effect runtime and FS2 streaming I/O to Web Assembly and System Interface for secure application deployment.","difficulty":"Hard"},{"project_name":"Extensible log4cats interface","summary":"Adopt a new API in log4cats, migrating existing integrations and providing backward compatibility with older APIs.","difficulty":"Medium"},{"project_name":"http4s-fs2-data","summary":"Integrate fs2-data with http4s, enhancing existing integrations and adding support for more fs2-data modules.","difficulty":"Medium"},{"project_name":"Convert Doobie test suite to use munit-cats-effect","summary":"Simplify the Doobie test suite by converting it to use munit-cats-effect for better integration and reduced verbosity.","difficulty":"Easy"}],"jina_response":"Title: Typelevel | Google Summer of Code\n\nURL Source: https://typelevel.org/gsoc/ideas\n\nMarkdown Content:\nOur community has identified project ideas that we believe will significantly enhance the Typelevel ecosystem. Nothing is set in stone: we may be able to adjust a project’s length and difficulty to make it the right fit for you. So if you see something here that interests you or have an idea of your own, please get in touch!\n\n*   [Guidance](https://typelevel.org/typelevel.github.com/gsoc/)\n*   [Ideas](https://typelevel.org/typelevel.github.com/gsoc/ideas/)\n*   [Past Projects](https://typelevel.org/typelevel.github.com/gsoc/projects/)\n\n![Image 1](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Machine learning inference in Cats Effect\n\nWe want to make it possible to deploy machine learning inference as part of a larger web service without compromising the latency of other on-going requests. The goal of this project is to create a compiler to transform a pre-trained ML model into a sequence of Cats Effect `IO` steps that perform inference on some input.\n\n##### Prerequisites\n\nScala, ideally some experience with ML\n\n##### Expected Difficulty\n\nHard but doable. Will draw on knowledge of ML and compilers.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@armanbilge](https://github.com/armanbilge) [@djspiewak](https://github.com/djspiewak) [@ekrich](https://github.com/ekrich) [@valencik](https://github.com/valencik)\n\nAI\n\nweb\n\nprogramming languages\n\n![Image 2](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Serverless integrations for Feral\n\nFeral is a Typelevel library for building serverless functions that currently supports AWS Lambda and Google Cloud Run Functions. We want to add support for more types of serverless events and more cloud providers.\n\n##### Prerequisites\n\nScala, ideally experience with serverless\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nMedium (~ 175 hours)\n\n##### Mentors\n\n[@armanbilge](https://github.com/armanbilge) [@bpholt](https://github.com/bpholt)\n\ncloud\n\nprogramming languages\n\n![Image 3](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Native I/O backend for FS2 JVM\n\nFS2 on the JVM currently implements its networking API using JDK NIO. Unfortunately this indirection incurs a non-trivial performance penalty. We want to replace the use of JDK NIO with direct calls to system I/O APIs such as `epoll` and `kqueue`.\n\n##### Prerequisites\n\nScala, ability to read C\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@antoniojimeneznieto](https://github.com/antoniojimeneznieto) [@djspiewak](https://github.com/djspiewak) [@mpilquist](https://github.com/mpilquist) [@armanbilge](https://github.com/armanbilge)\n\noperating systems\n\nprogramming languages\n\n![Image 4](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Polling-based I/O in FS2\n\nCats Effect v3.6.0 introduced the ability to poll for I/O readiness. We want to use polling to reimplement several I/O APIs in FS2, including datagrams, unix sockets, and processes, on the JVM and Native platforms.\n\n##### Prerequisites\n\nScala, ability to read C\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@armanbilge](https://github.com/armanbilge) [@mpilquist](https://github.com/mpilquist) [@antoniojimeneznieto](https://github.com/antoniojimeneznieto)\n\noperating systems\n\nprogramming languages\n\n![Image 5](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### FS2 Connection API\n\nTCP-based protocols are common (e.g. HTTP, Postgres, Redis) and are implemented by clients to interface with these services (e.g. Ember, Skunk, Rediculous). The goal of this project is to create a “connection” API that supports pooling, error conditions, and metrics and can be shared by all of our client libraries.\n\n##### Prerequisites\n\nScala, ideally some knowledge of networking\n\n##### Expected Difficulty\n\nHard.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@mpilquist](https://github.com/mpilquist) [@armanbilge](https://github.com/armanbilge)\n\noperating systems\n\nprogramming languages\n\n![Image 6](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Web Components for Calico\n\nCalico is a reactive UI library built with Cats Effect and FS2. Web Components are a standard for creating framework-agnostic, reusable UI elements. The goal of this project is to enable Calico users to access the vast array of web components available by improving its DSL and code-generation.\n\n##### Prerequisites\n\nScala, ideally experience with Web APIs\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@armanbilge](https://github.com/armanbilge)\n\nweb\n\nprogramming languages\n\n![Image 7](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Upgrade sbt-typelevel to sbt 2\n\nsbt-typelevel is a plugin for sbt, the Scala build tool, used by hundreds of open source and enterprise projects. sbt 2 is in the final stages of development. We want to upgrade sbt-typelevel to sbt 2 and adopt its new features, such as “project matrix” for cross-building.\n\n##### Prerequisites\n\nScala\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@mzuehlke](https://github.com/mzuehlke) [@armanbilge](https://github.com/armanbilge)\n\ndevelopment tools\n\n![Image 8](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Refresh Davenverse projects\n\nThe Davenverse is a collection of several popular Typelevel libraries, including Mules and cats-scalacheck. Unfortunately, we have fallen behind on their maintenance. We want to move these libraries under the Typelevel org, refresh their build tooling, and bring them up-to-date to ensure their longevity.\n\n##### Prerequisites\n\nScala\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nMedium (~ 175 hours)\n\n##### Mentors\n\n[@samspills](https://github.com/samspills) [@valencik](https://github.com/valencik)\n\ndevelopment tools\n\nprogramming languages\n\n![Image 9](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Cats Effect & FS2 on WASM/WASI\n\nWeb Assembly and its System Interface are emerging technologies for deploying secure, modular applications. The goal of this project is to prototype porting the Cats Effect runtime and FS2 streaming I/O to the Wasm/WASI platform, also possibly generating feedback for the Scala WASM and WASI teams.\n\n##### Prerequisites\n\nScala, ideally some experience with Wasm/WASI\n\n##### Expected Difficulty\n\nHard. Wasm/WASI support in Scala is experimental.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@armanbilge](https://github.com/armanbilge) [@tanishiking](https://github.com/tanishiking) [@valencik](https://github.com/valencik)\n\nweb\n\ncloud\n\noperating systems\n\nprogramming languages\n\n![Image 10](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Extensible log4cats interface\n\nlog4cats is the de facto logging library for the Typelevel stack. Recently, a new API was proposed that overcomes current limitations of log4cats. The goal of this project is to adopt the new API in log4cats, migrate existing integrations to the new API, and create a compatibility layer with the old API.\n\n##### Prerequisites\n\nScala\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nLong (~ 350 hours)\n\n##### Mentors\n\n[@morgen-peschke](https://github.com/morgen-peschke) [@kubukoz](https://github.com/kubukoz) [@irevive](https://github.com/irevive)\n\ncloud\n\nprogramming languages\n\n![Image 11](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### http4s-fs2-data\n\nfs2-data is a streaming data library that supports a plethora of formats. http4s is a library for creating and consuming web services. http4s-fs2-data is a project to integrate the two libraries. We want to integrate more fs2-data modules as well as enhance the existing integrations.\n\n##### Prerequisites\n\nScala\n\n##### Expected Difficulty\n\nMedium.\n\n##### Expected Length\n\nShort (~ 90 hours)\n\n##### Mentors\n\n[@satabin](https://github.com/satabin) [@ybasket](https://github.com/ybasket)\n\ncloud\n\nweb\n\nprogramming languages\n\n![Image 12](https://typelevel.org/typelevel.github.com/img/assets/icon-about-open-source.svg)\n\n### Convert Doobie test suite to use munit-cats-effect\n\nDoobie is a purely functional library for database access. Our test suites are written before there is good integration between MUnit (the test framework) and Cats-Effect (the effect system we depend on). We want to convert to use munit-cats-effect to make them less verbose and error prone.\n\n##### Prerequisites\n\nScala\n\n##### Expected Difficulty\n\nEasy.\n\n##### Expected Length\n\nMedium (~ 175 hours)\n\n##### Mentors\n\n[@jatcwang](https://github.com/jatcwang)\n\ncloud\n\nprogramming languages\n"}