{"name":"CERN-HSF","description":"Umbrella for Particle Physics-related projects","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/cern-hsf","ideas_url":"https://hepsoftwarefoundation.org/gsoc/2025/summary.html","logo":"https://summerofcode.withgoogle.com/media/org/cern-hsf/cjus658sjzba5zhg-360.png","technologies":["python","c/c++","data analysis","artificial intelligence","container orchestration"],"topics":["machine learning","big data","algorithmics","particle physics","Performance Optimisation"],"projects":[{"project_name":"ATLAS: Precision Recovery in Lossy-Compressed Floating Point Data for High Energy Physics","summary":"This project focuses on recovering precision in data that has been lossy-compressed, which is crucial for high energy physics experiments.","difficulty":"Medium"},{"project_name":"baler: The rise of the machine (learning) in data compression for high energy physics and beyond","summary":"Explores the application of machine learning techniques in the field of data compression for high energy physics and other domains.","difficulty":"High"},{"project_name":"baler: Probabilistic circuit for lossless HEP data compression","summary":"Develops a probabilistic circuit aimed at achieving lossless data compression specifically for high energy physics.","difficulty":"High"},{"project_name":"BioDynamo: Agent-Based Simulation of CAR-T Cell Therapy Using BioDynaMo","summary":"Involves creating a simulation model to study CAR-T cell therapy using the BioDynaMo framework.","difficulty":"Medium"},{"project_name":"Patatrack: Development of an auto-tuning tool for the CLUEstering library","summary":"Aims to build a tool that automatically tunes parameters in the CLUEstering library to optimize performance.","difficulty":"Medium"},{"project_name":"CernVM-FS: Evaluate Distribution of ML model files on CVMFS","summary":"Focuses on assessing how machine learning model files can be effectively distributed using the CernVM file system.","difficulty":"Medium"},{"project_name":"Clad: Implement and improve an efficient, layered tape with prefetching capabilities","summary":"Enhances an existing data processing system with improved efficiency and prefetching features.","difficulty":"Medium"},{"project_name":"Clad: Enhancing LLM Training with Clad for efficient differentiation","summary":"Works on optimizing the training of large language models using the Clad tool for better differentiation functions.","difficulty":"Medium"},{"project_name":"Clad: Enable automatic differentiation of OpenMP programs with Clad","summary":"Enables the Clad framework to support automatic differentiation of OpenMP programs, improving computational efficiency.","difficulty":"High"},{"project_name":"Clad: Integrate Clad to PyTorch and compare the gradient execution times","summary":"Integrates the Clad library with PyTorch to analyze and optimize gradient calculations.","difficulty":"High"},{"project_name":"Clad: Enable automatic differentiation of C++ STL concurrency primitives in Clad","summary":"Aims to extend Clad's functionalities to include automatic differentiation for C++ Standard Library concurrency constructs.","difficulty":"High"},{"project_name":"Clad: Support usage of Thrust API in Clad","summary":"Focuses on adding support for the Thrust API within the Clad framework for enhanced parallel programming capabilities.","difficulty":"Medium"},{"project_name":"Constellation: Extending the User Interface","summary":"Works on improving the user interface of Constellation to increase usability and functionality.","difficulty":"Medium"},{"project_name":"CppInterOp: Implement CppInterOp API exposing memory, ownership and thread safety information","summary":"Develops an API for C++ interoperability focusing on aspects like memory handling and thread safety.","difficulty":"High"},{"project_name":"Ganga: Incorporate a Large Language Model to assist users","summary":"Integrates a large language model into the Ganga framework to provide user assistance and improve accessibility.","difficulty":"Medium"},{"project_name":"Ganga: Implement a deprecation system to keep code up to date","summary":"Creates a system within Ganga to manage code deprecation and maintain code relevance.","difficulty":"Medium"},{"project_name":"Geant4: Geant4-FastSim - Data Representation Optimisation for Generative Model-based Fast Calorimeter Shower Simulation","summary":"Optimizes data representation in the Geant4 simulation framework for faster and more efficient calorimeter simulations.","difficulty":"High"},{"project_name":"ROOT: Using ROOT in the field of genome sequencing","summary":"Explores applications of the ROOT framework in the analysis and processing of genomic data.","difficulty":"Medium"},{"project_name":"CICADA: Highly Granular Quantization for CICADA","summary":"Aims to improve the granularity of quantization methods employed in the CICADA project.","difficulty":"Medium"},{"project_name":"HSFCondDB: Intelligent Log Analysis for the HSF Conditions Database","summary":"Develops intelligent log analysis tools to improve data processing and insights from the HSF conditions database.","difficulty":"Medium"},{"project_name":"CppInterOp: Interactive Differential Debugging - Intelligent Auto-Stepping and Tab-Completion","summary":"Creates interactive debugging features for C++ code, enhancing the developer experience.","difficulty":"Medium"},{"project_name":"JuliaHEP: Julia Interfaces to HepMC3","summary":"Focuses on improving integration between the Julia programming language and HepMC3 for high energy physics applications.","difficulty":"Medium"},{"project_name":"MCnet: MCnet/MCviz - graph and 3D-viewer tools for simulated particle collisions","summary":"Develops tools for visualizing simulated particle collisions in both graph and three-dimensional formats.","difficulty":"Medium"},{"project_name":"MCnet: MCnet/OpenData - tools and exercises for open-data exploration with MC simulations","summary":"Provides tools and exercises to facilitate open data exploration using MC simulations.","difficulty":"Medium"},{"project_name":"ML4EP: Integrating Support for Google XLS in HLS4ML","summary":"Integrates Google XLS for optimization within HLS4ML, enhancing machine learning processes.","difficulty":"Medium"},{"project_name":"ML4EP: Optimizing Model Splitting in hls4ml for Efficient Multi-Graph Inference","summary":"Focuses on optimizing how models are split for better performance during multi-graph inference in HLS4ML.","difficulty":"High"},{"project_name":"ROOT: RNTuple in JSROOT","summary":"Implements RNTuple support in JSROOT to facilitate data handling in the ROOT framework.","difficulty":"Medium"},{"project_name":"Rucio: Rucio WebUI Revamp","summary":"Aims to revamp the web interface of Rucio, enhancing user experience and accessibility.","difficulty":"Medium"},{"project_name":"BEAD: Background Enrichment augmented Anomaly Detection (BEAD) for new physics searches at LHC","summary":"Develops advanced anomaly detection methods to find new physics signals in LHC data.","difficulty":"High"},{"project_name":"SMARTHEP: Estimating the energy cost of ML scientific software","summary":"Focuses on quantifying the energy consumption of machine learning applications in scientific software.","difficulty":"Medium"},{"project_name":"ML4EP: TMVA SOFIE - GPU Support for Machine Learning Inference","summary":"Enhances the TMVA SOFIE tool with GPU support to optimize machine learning inference tasks.","difficulty":"High"},{"project_name":"ML4EP: TMVA SOFIE - HLS4ML Integration for Machine Learning Inference","summary":"Integrates TMVA SOFIE with HLS4ML to improve machine learning inference capabilities.","difficulty":"High"},{"project_name":"ML4EP: TMVA SOFIE - Enhancing Keras Parser and JAX/FLAX Integration","summary":"Aims to improve integration for Keras and JAX/FLAX within TMVA SOFIE for more robust ML workflows.","difficulty":"Medium"},{"project_name":"Xeus-Cpp: Implementing Debugging Support","summary":"Develops debugging tools and features within the Xeus-Cpp framework to enhance programming efficiency.","difficulty":"Medium"},{"project_name":"Xeus-Cpp: Enable GPU support and Python Interoperability via a Plugin System","summary":"Focuses on adding GPU support and Python interoperability to Xeus-Cpp through a flexible plugin system.","difficulty":"High"}],"jina_response":"Title: Summary of GSoC 2025 Proposals\n\nURL Source: https://hepsoftwarefoundation.org/gsoc/2025/summary.html\n\nMarkdown Content:\n  HSF\n  Activities\n  Meetings\n  Communication\n  Projects & Support\n  About\nSummary of GSoC 2025 Proposals\n\nClick here for an overview of the GSoC program at HSF.\n\nFull List of Proposals\nATLAS: Precision Recovery in Lossy-Compressed Floating Point Data for High Energy Physics\nbaler: The rise of the machine (learning) in data compression for high energy physics and beyond\nbaler: Probabilistic circuit for lossless HEP data compression\nBioDynamo: Agent-Based Simulation of CAR-T Cell Therapy Using BioDynaMo\nPatatrack: Development of an auto-tuning tool for the CLUEstering library\nCernVM-FS: Evaluate Distribution of ML model files on CVMFS\nClad: Implement and improve an efficient, layered tape with prefetching capabilities\nClad: Enhancing LLM Training with Clad for efficient differentiation\nClad: Enable automatic differentiation of OpenMP programs with Clad\nClad: Enable automatic differentiation of OpenMP programs with Clad\nClad: Integrate Clad to PyTorch and compare the gradient execution times\nClad: Enable automatic differentiation of C++ STL concurrency primitives in Clad\nClad: Support usage of Thrust API in Clad\nConstellation: Extending the User Interface\nCppInterOp: Implement CppInterOp API exposing memory, ownership and thread safety information\nGanga: Incorporate a Large Language Model to assist users\nGanga: Implement a deprecation system to keep code up to date\nGeant4: Geant4-FastSim - Data Representation Optimisation for Generative Model-based Fast Calorimeter Shower Simulation\nROOT: Using ROOT in the field of genome sequencing\nCICADA: Highly Granular Quantization for CICADA\nHSFCondDB: Intelligent Log Analysis for the HSF Conditions Database\nCppInterOp: Interactive Differential Debugging - Intelligent Auto-Stepping and Tab-Completion\nJuliaHEP: Julia Interfaces to HepMC3\nMCnet: MCnet/MCviz - graph and 3D-viewer tools for simulated particle collisions\nMCnet: MCnet/OpenData - tools and exercises for open-data exploration with MC simulations\nML4EP: Integrating Support for Google XLS in HLS4ML\nML4EP: Optimizing Model Splitting in hls4ml for Efficient Multi-Graph Inference\nROOT: RNTuple in JSROOT\nRucio: Rucio WebUI Revamp\nBEAD: Background Enrichment augmented Anomaly Detection (BEAD) for new physics searches at LHC\nSMARTHEP: Estimating the energy cost of ML scientific software\nML4EP: TMVA SOFIE - GPU Support for Machine Learning Inference\nML4EP: TMVA SOFIE - HLS4ML Integration for Machine Learning Inference\nML4EP: TMVA SOFIE - Enhancing Keras Parser and JAX/FLAX Integration\nXeus-Cpp: Implementing Debugging Support\nXeus-Cpp: Enable GPU support and Python Interoperability via a Plugin System\n\n\n\n Improve this page. Thanks to GitHub Pages, Jekyll and Bootstrap.\n"}