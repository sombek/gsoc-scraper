{"name":"CCExtractor Development","description":"TV, Rust, Flutter, Linux, VR and C. In any order.","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/ccextractor-development","ideas_url":"https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/","logo":"https://summerofcode.withgoogle.com/media/org/ccextractor-development/xjqt8fksfnyqyqrd-360.png","technologies":["c","linux","rust","flutter"],"topics":["vr","linux","video","subtitles","mobile"],"projects":[{"project_name":"Google Summer of Code 2025 Overview","summary":"An overview of the upcoming Google Summer of Code 2025, highlighting the need for early project listings and the focus on community interaction.","difficulty":"N/A"},{"project_name":"Weekly Office Hours","summary":"Begins February 2, 2025, providing an open session every Sunday for students to ask questions about GSoC, projects, or the organization.","difficulty":"Easy"},{"project_name":"Project Ideas","summary":"Focuses on incorporating Rust for security improvements in subtitles and accessibility projects, also includes Flutter-related projects.","difficulty":"Varied"},{"project_name":"Niche Ideas","summary":"Specialized projects requiring advanced skills, aimed at students with specific interests outside mainstream ideas.","difficulty":"Advanced"},{"project_name":"Mentoring Structure","summary":"Description of the mentoring approach, emphasizing the continuity of team members who have participated in past GSoCs.","difficulty":"N/A"},{"project_name":"Resources Available","summary":"Students will receive access to high-speed servers and sample media, along with physical resources like portable drives to aid development.","difficulty":"N/A"},{"project_name":"Selected Perks","summary":"Accepted students will receive programming books, access to educational courses, and support for interview preparation resources.","difficulty":"N/A"},{"project_name":"Proposal Expectations","summary":"Guidelines for what constitutes a strong project proposal, including timeline, support needs, and realistic project goals.","difficulty":"Varied"}],"jina_response":"Title: Google Summer of Code (GSoC) 2025 ideas page\n\nURL Source: https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/\n\nMarkdown Content:\n### This is work in progress! However we intend to have a number of project listed early this year, so check often.[![Image 1](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#this-is-work-in-progress-however-we-intend-to-have-a-number-of-project-listed-early-this-year-so-check-often)\n\n### **NEW: Office Hours**[![Image 2](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#new-office-hours)\n\nStarting **February 2, 2025**, we will be holding **weekly office hours every Sunday** (depending on your timezone). This is an open session where you can drop in, ask your questions, and have a conversation with an **org admin and/or mentor**—maybe more. There’s no need to be formal, and if you’re shy, you don’t even have to turn your camera on.\n\nTo join, simply use this **[Google Meet link](https://meet.google.com/swu-vmra-tyh)**. The sessions will begin at **8:30 AM San Francisco Time**, which serves as the official reference time.\n\nThere is **no fixed agenda** for these meetings. Whether you want to ask about **GSoC, the organization, your project, or anything else**, you’re welcome to join. If others are discussing something, you can also stay and listen. We will be available for **at least 30 minutes**, but if a conversation is ongoing at **9:00 AM San Francisco Time**, we’ll **continue as long as needed**.\n\nFeel free to drop by, ask questions, or just hang out. We look forward to seeing you there!\n\nWelcome to our ideas page. It's great you want to start early. Please join us in our Zulip space! (we'll leave this as an exercise for you to find --- it's on our website).\n\nAs you will see, this year has a lot of Rust. The reason is simple: Security. Our C code base has known (and we suspect, a lot of unknown) security issues caused by the usual memory management in C. Lots of people have touched the code over the years, and it shows.\n\nThere's also Flutter, which we love, and more.\n\nWe will provide resources for students --- we'll give access to a high-speed server, all our samples (we'll even ship a portable drive with them anywhere in the world, so don't worry about slow connections) and various other perks.\n\nYou are welcome to check out the page (actual ideas at the bottom of the page, with each project having it's own separate page as well) and start early in the community bonding process as well as learning a bit about our code ethics and practices. And of course, we'd love you to stay around even if we are not invited to GSoC or if we cannot invite you as a student.\n\n#### The ideas we currently have[![Image 3](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#the-ideas-we-currently-have)\n\nImportant: If you have something else in mind that relates to subtitles and accessibility please get in touch. We prefer that you do something that you are passionate about even if it's something we hadn't considered.\n\nAfter you check out our ideas please continue reading to the bottom of the page to get information about who we are, how we collaborate, what resources we will provide to you, etc.\n\nSome tasks descriptions are still vague. We know that. Feel free to get in touch for questions, or just check their page from time to time. We will update the descriptions often.\n\n#### Niche ideas[![Image 4](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#niche-ideas)\n\nWe've moved the less mainstream ideas to their [own page](https://ccextractor.org/docs/classic_ideas/) These ideas are not less important, but because they require more specialized skills (or mindsets) we've decided to give them a place of their own :-) Please take a look after you are done with this page; maybe something there will pick your interest.\n\nSince we are now feature complete, and the subtitles work have changed a lot (We won! Almost everything is subtitled now!) it's time to settle down, prepare a really good, stable, battery included release so we can rest on our laurels for a bit after a fantastic run on our core tool.\n\n#### Flutter[![Image 5](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#flutter)\n\n#### Systems[![Image 6](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#systems)\n\n#### New things we're currently interested on[![Image 7](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#new-things-were-currently-interested-on)\n\n#### About us[![Image 8](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#about-us)\n\nWe are a small org, which means that your contribution will have a large impact. It's not going to mean a 0.5% improvement on a big project --- it's going to be more than 10% on a medium size one. If you like challenges and want a chance to shine this is your place.\n\nWe have _we think_ statistically amazing continuity in the team: Most GSoC students from all the past years are still involved, even if they are no longer eligible as students. They still contribute code, and they mentor both in GSoC and the sister program GCI. As mentors, they also come to the Summer of Code summit which traditionally takes place in October.\n\nWe have _mentors all over the world_ (North America, Europe, Asia and Australia), so time zones are never a problem. Our main channel of communication is a [Zulip instance](https://ccextractor.org/public/general/support) to which everyone is welcome. We expect all accepted students to be available on Zulip very often, even if you don't need to talk to your mentor. This will help you ask questions when necessary, and you might be able to help others out as well while working on your project.\n\nException: If your country (such as **Russia**) has banned Zulip please get in touch in we'll work out a solution with you. We absolutely want you to participate.\n\nA [mailing list](https://groups.google.com/forum/#!forum/ccextractor-dev) is also available for those that prefer email over Zulip. Note that getting replies might be faster on Zulip though (and it should be just as organized!).\n\n**All our top committers will be mentoring**. Many of them are former GSoC students or winners of GCI.\n\n#### Perks[![Image 9](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#perks)\n\nAll accepted students get a programming book immediately after being accepted, with the hope that they read them before the coding starts. We want to see if this increases the quality of the work. So far we have selected these three books (pick one), but we're open to suggestions: [Clean Code](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882), [Elements of Programming Interviews in Python](https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949), [Cracking the code interview](https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850).\n\nWe will also provide to all accepted students: - 6 months of access (from the acceptance date) to all courses in [educative.io](https://www.educative.io/) - 12 months of access (from the acceptance date) to [backtobackswe](https://backtobackswe.com/), which is a fantastic resource to learn algorithms, prepare for coding interviews, and in general learn fundamentals.\n\n#### About what we use[![Image 10](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#about-what-we-use)\n\nThis is what we use **today**. It doesn't mean this is what we want to continue using. Probably not --- we're really open to change. We're just describing the status quo so you know what you are getting into :-)\n\nThe core tool that names the organization (CCExtractor) is a command-line program written in **C** (not C++), and new core parts are being written in **Rust**.\n\nThe current GUI is written in **flutter**.\n\nThe testing tool we use to run regression tests is mainly written in **Python**, but it also used Javascript, CSS and some shell scripting. The Test suite is written in C#. One of the projects this year is to move it from a dedicated server to GSoC and improving the scalability of test runs.\n\nThe prototype real time subtitle website is written in **NodeJS**.\n\nWe also have a number of support tools that do a number of different things, from downloading subtitles from streaming services to translating them with Google Translate or DeepL. Most of them are written in **Python**, but since they are small tools that do their job you don't need to worry much about them.\n\nFor totally new things you can use whatever tool you feel is best for the task at hand.\n\n#### About sample media and other resources[![Image 11](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#about-sample-media-and-other-resources)\n\nWe work with huge files. Not all of them are huge, but many are. We know that many students don't have access to high speed internet. To those students we will ship (as soon as they are selected) a portable hard drive with all our samples. So if your internet connection is not good, don't worry --- as long as you can plug a USB drive to your development computer you can participate with us.\n\nWe also have a shared Linux development server with lots of storage and a Gigabit uplink. Students get an account on it and they are welcome to use it. There's nothing there except our own work, so it's a trusted environment (for a server that is connected to internet of course).\n\nThe sample platform also hosts a bunch of samples, both which are small or decently sized.\n\nSome projects have specific requirements, and we'll make sure that you get the resources you need: i.e. if your project requires some cloud resources (Google Compute Engine, for example), we'll make sure you get access to the resources.\n\nIn general, you are not expected to pay for anything (other than your own development computer and internet, of course) related to any project.\n\nIf you need anything not mentioned (such as a book) let us know. Within reason, we'll help you.\n\n#### About the projects and getting accepted[![Image 12](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#about-the-projects-and-getting-accepted)\n\nQualification: Our selection system is based on several factors. Of course no student ranks in all criteria, so don't worry when you read the list below.\n\n**Work on our core tool**: Even if you are going to be working on something totally different. This might seen counter intuitive, but the thing is if you prove you can dig into our (messy) code base, find yourself your way around it, and fix a few bugs, you are just the kind of person we can trust to \"figure things out\". GSoC is among other things, a learning experience. No matter what project you decide to work on, there's going to be roadblocks, things you don't know how to do, etc. So we really like it when students embrace those situations.\n\n**Qualification tasks specific to the project**: The detail page for some projects contains specific qualification tasks that apply to them.\n\n**Contributions to existing open source projects**: This can be anything. From a good GitHub profile to pull-requests sent to any other existing project, participation in hackathons, Google Code-In, past GSoCs and so on.\n\n**A good proposal**: This is the one criteria that is non-negotiable. Your proposal has to be good, period.\n\n**Project popularity**: Some ideas just have more competition, so if participating in GSoC is a top priority for you (over working on a specific project), consider applying to one of the \"niche\" ideas. After all, that's a great way to get your foot in the door :-)\n\n**Best core tool tasks**\n\nWe're added a difficulty level to most of our [open issues on GitHub](https://github.com/CCExtractor/ccextractor/issues). Best thing you can do is head there and see if you are able to fix some of the easy ones and work your way up. We don't expect you to be able to do the hard ones but we'd be impressed if you did :-)\n\nFor some of the easy ones you don't even need to know C. Just being able to compile CCExtractor and dig around a bit will be enough.\n\nThe sample platform's issues are tagged with \"gsoc-proposal-task\", so you can easily see what you can work on.\n\n### Take home qualification tasks[![Image 13](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#take-home-qualification-tasks)\n\nIf instead of working on existing code you'd prefer to show us your skills working on something new, you can pick one of [these projects](https://ccextractor.org/public/gsoc/takehome).\n\nIt goes without saying that everyone in the community has to be polite and respectful, and consider everyone else a member of a team and not a competitor.\n\nAll developers are part of the team, by the way. Our Zulip instance has mentors, code-in participants, other students, or developers and users that are none of the above but they all play some kind of role in CCExtractor's community.\n\nPart of being respectful is giving consideration to everyone else's time. Most of us have day jobs, and as such are limited in the time we can use to guide you. We'd like to spend it on quality discussions, and not on things that are for example written on this website, things that you can easily retrieve by reading documentation on used libraries or on the software's help screen. Asking this kind of questions in the Zulip instance shows little respect for our time. This doesn't mean you can't ask questions, but remember that being a clueless user and a lazy developer are two very different things. If you ask those questions you will probably get an answer as if you were a clueless user (polite no matter what), but if you apply to GSoC you will be considered a lazy developer. Google is your friend ;)\n\nTell things as you see them. Politely -you're not Linus-, but don't sugar-coat it. We know some parts of our code is poorly written, poorly documented, etc. It stands out, so you will know when you dig in. No one is going to be offended by having that code rewritten or refactored. Peer review applies to everybody's work and is done by everybody.\n\n#### Cross project proposals[![Image 14](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#cross-project-proposals)\n\nBecause we use a number of libraries and in fact \"are a library\" ourselves (meaning other programs can link CCExtractor as a library, or invoke the binary) we interact with other communities and their software. From time to time there's a chance to do something interesting that affects CCExtractor and something else (FFmpeg comes to mind, but also Kodi, VLC, libGPAC, Red Hen, to mention just a few of our friends that typically participate in Summer of Code). So how does this work? As long as the work benefits CCExtractor and it's part of your summer project, we're OK with you spending some time on the other project. For example if you are improving our MP4 support, for which we use libGPAC, and need to fix or improve something on libGPAC you are welcome to do so. If you do, make sure you submit your changes to their maintainers and follow through with their merge process.\n\n#### Your proposal[![Image 15](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#your-proposal)\n\nYou can propose to do any of the following ideas, or you can bring your own. In any case, make sure you run them by us before you actually submit your proposal.\n\nAt the very least your proposal needs to:\n\n*   Explain what you want to do, why it is important to you (don't make up a story here — the reason can be that you need it, that you just think it's cool, that you have an itch to work on it, etc), and why it could be important or useful to us.\n*   Explain how you intend to accomplish the goal, in enough detail that makes it clear that you have done your homework. For example, “I will modify the CCExtractor binary so that it's able to convert audio to text with perfect accuracy” is the same thing as sending your proposal to the trash. You need to have a plan.\n*   Detail the timeline explaining what the expected progress is for each week or every two weeks (pay special attention to the milestones within the GSoC timeline itself, of course) and how we should validate the results.\n*   Detail what kind of support you will need from us. For example, if you are going to need test streams, hardware, access to a server, etc, let us know, so we can prepare everything for you as soon as possible.\n*   Detail your expected working hours in UTC. We're used to weird working schedules, so don't worry about working in the middle of the night, or weekends instead of other days, etc. Knowing your hours may help us to match you better with a mentor.\n*   Mention your planned absences. We don't need you to detail what you will be doing when you are not working of course, but if you are going away for any reason we need to know so we don't think you've abandoned.\n*   Link to your GitHub (or any other repository) profile, if you have one, so we can take a look at your previous work.\n*   GSoC is a coding program: This means that ideas that are about testing (unless it involves coding something to test our programs ;) ), website design, etc, are out.\n*   However, we want to have good documentation: Make sure you have time to write a good technical article explaining your work.\n*   Be realistic and honest with the timeline. Consider each week you should work around 30 hours. If your timeline reserves a lot of time for minor things we'll think that you are not going to be working full-time in GSoC. On the other hand if you promise to do things in a lot less than that it seems realistic to us it will seem that you don't really know how much work things take.\n*   If you are going to be using 3rd party libraries (that's OK), make sure to validate that their license is compatible with GPLv2 (which is ours). List the libraries in your proposal. Check that they are cross-platform. If you will need to extend those libraries in any way please explain. In this case, your proposal should include time to get that extension submitted to the maintainers (we love to contribute to other projects).\n\nSomething else: Mentors often have their fingers in several pies. If you send the same proposal to several orgs everyone will know. So do yourself a favor and don't do that. You can apply to several organizations and that's totally fine, but each organization will want to see that you have put the time to write a great proposal that is focused on them.\n\n#### Useful resources[![Image 16](https://ccextractor.org/icons/link.svg)](https://ccextractor.org/docs/ideas_page_for_summer_of_code_2025/#useful-resources)\n\n[A great resource for GSoC](https://dev.to/realabbas/google-summer-of-code-5ao6).\n"}