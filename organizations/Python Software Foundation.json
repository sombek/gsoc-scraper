{"name":"Python Software Foundation","description":"A programming language used for science & more","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/python-software-foundation","ideas_url":"https://python-gsoc.org/ideas.html","logo":"https://summerofcode.withgoogle.com/media/org/python-software-foundation/2vpxhpvcsvgyx3kg-360.png","technologies":["python","javascript"],"topics":["security","visualization","compiler","modeling","Backup"],"projects":[{"project_name":"MSS - Mission Support System","summary":"A software tool developed for atmospheric scientists to optimize scientific flight planning.","difficulty":"Medium"},{"project_name":"CVE Binary Tool","summary":"A tool that scans binaries for known vulnerabilities to enhance system security.","difficulty":"Medium"},{"project_name":"Tölvera","summary":"A Python library for creating and interacting with self-organizing systems and artificial life in creative contexts.","difficulty":"High"},{"project_name":"pocketpy","summary":"A portable Python interpreter aiming to be an alternative to Lua for game scripting with no dependencies beyond the C standard library.","difficulty":"Medium"},{"project_name":"Borg Collective","summary":"A suite of Python-based backup tools for efficient data backup and restoration, including deduplication and desktop integration.","difficulty":"High"},{"project_name":"MNE-Python","summary":"An open-source package for analyzing and visualizing human neurophysiological data such as EEG and MEG.","difficulty":"High"},{"project_name":"ilastik","summary":"A user-friendly tool for segmenting and classifying biological images with machine learning, aimed at non-experts in computation.","difficulty":"Medium"}],"jina_response":"Title: Python GSoC – Home\n\nURL Source: https://python-gsoc.org/ideas.html\n\nMarkdown Content:\nIdeas\n-----\n\n  \n\n![Image 1](https://python-gsoc.org/logos/mss-logo_BiK2crz.png)\n\nMSS - Mission Support System\n----------------------------\n\nThe Mission Support System (MSS) is a software that is written by scientists in the field of atmospheric science. The purpose is to have a tool that simplifies the process for planning a scientific flight in which parameters of the atmosphere are measured. MSS helps to optimize the scientific outcome of the research flights by displaying the planned flight route and the corresponding model parameters in the same platform for many discussed options. It does therefore reduce somehow the amount of flight hours that is needed to answer a scientific question and thus saves in the end taxpayers money.\n\n* * *\n\n![Image 2](https://python-gsoc.org/logos/256x256_white_3xCK6Bv_oFfXgFE.png)\n\nCVE Binary Tool\n---------------\n\nThe CVE Binary Tool helps you determine if your system includes known vulnerabilities. You can scan binaries for over 200 common, vulnerable components (openssl, libpng, libxml2, expat and others), or if you know the components used, you can get a list of known vulnerabilities associated with an SBOM or a list of components and versions.\n\n* * *\n\n![Image 3](https://python-gsoc.org/logos/tolvera_logo.png)\n\nTölvera\n-------\n\nTölvera is a Python library for composing together and interacting with self-organising systems and artificial life. It provides creative coding-style APIs that allow users to combine and compose various built-in behaviours, such as flocking, slime mold growth, and swarming. With built-in support for Open Sound Control (OSC) and interactive machine learning (IML), Tölvera interfaces with music software and hardware for exploring diverse intelligence in artistic contexts.\n\n![Image 4](https://python-gsoc.org/logos/logo-pocketpy.png)\n\npocketpy\n--------\n\npocketpy is a portable Python 3.x interpreter, written in C11. It aims to be an alternative to Lua for game scripting, with elegant syntax, powerful features and competitive performance. pocketpy has no dependencies other than the C standard library, which can be easily integrated into your C/C++ project. Developers are able to write Python bindings via C-API or pybind11 compatible interfaces.\n\n* * *\n\n![Image 5](https://python-gsoc.org/logos/borg_256.png)\n\nBorg Collective\n---------------\n\nWe are the Borg Collective and maintain multiple Python-based backup tools that are often used in combination: Borg, Borgmatic and Vorta. The core Borg tool is a deduplicating archiver with compression and deduplication. Vorta is a desktop backp client that integrtes with Linux and macOS desktops. Borgmatic is a wrapper for server systems that also takes care of database backups and pre-backup commands.\n\n* * *\n\n![Image 6](https://python-gsoc.org/logos/logo_mne_hex.png)\n\nMNE-Python\n----------\n\nMNE-Python software is an open-source Python package for exploring, visualizing, and analyzing human neurophysiological data such as MEG, EEG, sEEG, ECoG, and more. It includes modules for data input/output, preprocessing, visualization, source estimation, time-frequency analysis, connectivity analysis, machine learning, and statistics.\n\n* * *\n\n![Image 7](https://python-gsoc.org/logos/logo_ilastik.png)\n\nilastik\n-------\n\nilastik allows users without computational expertise to leverage machine learning to easily segment and classify cells and other structures in biological images. It is designed to be user-friendly, while still providing powerful tools for image analysis.\n\n* * *\n\nFriends of the PSF\n------------------\n\nHere's some more interesting organizations that use Python!\n\n*   [TARDIS](https://tardis-sn.github.io/summer_of_code/ideas/) TARDIS is an open-source Monte Carlo radiative-transfer spectral synthesis code for 1D models of supernova ejecta. It is designed for rapid spectral modelling of supernovae. It is developed and maintained by a multi-disciplinary team iincluding software engineers, computer scientists, statisticians, and astrophysicists.\n"}