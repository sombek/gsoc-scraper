{"name":"DeepChem","description":"Democratize AI for drug discovery.","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/deepchem","ideas_url":"https://forum.deepchem.io/t/deepchem-gsoc-2025-project-ideas/1568","logo":"https://summerofcode.withgoogle.com/media/org/deepchem/ffdofoxp3ba1qqmh-360.png","technologies":["python","numpy","pytorch","HuggingFace"],"topics":["artificial intelligence","chemistry","biology","materials science","Drug Discovery"],"projects":[{"project_name":"Layer Tutorials","summary":"Improving DeepChem's documentation by adding tutorials for existing layers and developing new layers.","difficulty":"Beginner"},{"project_name":"Improving New Drug Modality Support","summary":"Adding tutorials for emerging drug modalities in DeepChem, enhancing its toolset for biopharmaceutical applications.","difficulty":"Beginner"},{"project_name":"Improving support for drug formulations","summary":"Creating a tutorial on drug formulations using DeepChem to assist in the design of drug formulations.","difficulty":"Beginner"},{"project_name":"Improve Equivariance Support","summary":"Extending DeepChem's support for equivariant models, including tensor field networks.","difficulty":"Intermediate"},{"project_name":"Numpy 2.0 Upgrade","summary":"Upgrading DeepChem to be compatible with Numpy 2.0, addressing backwards compatibility issues.","difficulty":"Intermediate"},{"project_name":"Conversion of SMILES to IUPAC and vice versa","summary":"Developing tools for accurate conversion between SMILES strings and IUPAC names in DeepChem.","difficulty":"Intermediate"},{"project_name":"Implement a Wishlist Model","summary":"Implementing a model from DeepChem's wishlist to improve its physics support, such as Hamiltonian or Lagrangian neural networks.","difficulty":"Advanced"},{"project_name":"PyTorch Porting","summary":"Porting Chemception model to PyTorch to ensure compatibility with DeepChem's ecosystem.","difficulty":"Advanced"},{"project_name":"HuggingFace-style easy pretrained-model Load","summary":"Implementing a user-friendly method to load pretrained models in DeepChem without requiring knowledge of training parameters.","difficulty":"Advanced"},{"project_name":"Model-Parallel DeepChem Model Training","summary":"Implementing model-parallel training support in DeepChem to accommodate larger models across multiple GPUs.","difficulty":"Advanced"}],"jina_response":"Title: DeepChem GSoC 2025 Project Ideas\n\nURL Source: https://forum.deepchem.io/t/deepchem-gsoc-2025-project-ideas/1568\n\nPublished Time: 2025-01-29T17:51:15+00:00\n\nMarkdown Content:\n[![Image 1](https://forum.deepchem.io/user_avatar/forum.deepchem.io/bharath/45/8_2.png)](https://forum.deepchem.io/u/bharath)\n\nThis post lists draft potential ideas for GSoC 2025 projects. (Note that we are planning on submitting an application but we will not know if we have been accepted until later.) We have divided projects into beginner, intermediate, and advanced categories. Projects are also listed with suggested GSoC project size (small, medium, large, see [https://developers.google.com/open-source/gsoc/faq 93](https://developers.google.com/open-source/gsoc/faq))\n\n### Beginner Friendly Projects\n\nBeginner projects should be accessible for new developers and focus on projects that don’t require engineering sophistication.\n\n*   **Layer Tutorials**\n    *   **Length:** Small (90 hours)\n    *   **Description:** DeepChem has been moving towards first class layers and now has a collection of general layers. We still need to improve the documentation for existing layers to make them more useful for the community. This project should add tutorials for using existing layers to the DeepChem tutorial series, and should plan to add a few new layers that would be useful to the community.\n    *   **Educational Value:** Students will learn to improve their technical communication skills and learn how to construct useful Jupyter/Colab tutorials. Layers are easier to add than full models since they are effectively functions.\n    *   **Potential Mentors:** Aryan, Jose, Riya, Maithili, Nimisha, Shreyas\n    *   **Note:** This was also a 2024 project, but there remains more work to be done for 2025 expanding tutorials/ideas.\n*   **Improving New Drug Modality Support**\n    *   **Length:** Small (90 hours)\n    *   **Description:** DeepChem at present doesn’t have much tooling or support for working with emerging drug modalities. These include PROTACs, Antibody-drug-conjugates, macrocycles, oligonucleotides and more. This project would add new tutorials introducing these new drug modalities and provides examples of how to work with them with deepchem. It would also be useful to identify and process relevant datasets.\n    *   **Educational Value:** New drug modalities drive many emerging startups in the space. Improving DeepChem’s support for these new modalities of therapeutics could help drive discovery of new medicine at the cutting edge. It would prepare students to potentially find jobs at these up-and-coming biotech firms as well.\n    *   **Potential Mentors:** Jose, David, Bharath\n    *   **Note:** This was also a 2024 project, but there remains more work to be done for 2025 expanding support for new modalities.\n*   **Improving support for drug formulations**\n    *   **Length:** Small (90 hours)\n    *   **Description:** Drug formulations are a rich area of industrial study that is often critical for actually bringing a drug to patients. See [https://drughunter.com/resource/the-modern-medicinal-chemist-s-guide-to-formulations/ 23](https://drughunter.com/resource/the-modern-medicinal-chemist-s-guide-to-formulations/) for example for a guide. In this project, you will build a tutorial introducing readers to the study of drug formulations along with DeepChem examples of how you can computationally help design a potential formulation.\n    *   **Educational Value:** Formulations are critical for bringing drugs to patients. Improving DeepChem’s support for these new modalities of therapeutics could help drive discovery of new medicine at the cutting edge. It will prepare students to find jobs at large biotech/pharma firms as well.\n    *   **Potential Mentors:** Jose, David, Bharath\n\n### Intermediate Projects\n\nThese projects require some degree of hacking, but likely won’t raise challenging engineering difficulties.\n\n*   **Improve Equivariance Support**\n    \n    *   **Length:** Medium (175 hours)\n    *   **Description:** DeepChem has limited support for equivariant models. This project would extend support for equivariance to DeepChem and add additional equivariant model such as tensor field networks to DeepChem\n    *   **Educational Value:** Equivariance is one of the most interesting ideas in modern machine learning and underpins powerful systems like AlphaFold2. Contributors will learn more about this field and could potentially write a research paper about their work on this project.\n    *   **Potential Mentors:** Aryan, Riya, Nimisha, Bharath, Shreyas\n    *   **Note:** This was also a 2024 project, but this project was not taken up by a student last year.\n*   **Numpy 2.0 Upgrade**\n    \n    *   **Length:** Large (175 hours)\n    *   **Description:** DeepChem is currently on Numpy < 2.0. The upgrade to 2.0 is not backwards compatible. We need to fix any broken compatibilities.\n    *   **Educational Value:** Complex version upgrades take a lot of sophistication and will teach students challenging debugging skills.\n    *   **Potential Mentors:** Bharath\n*   **Conversion of Smiles to IUPAC and IUPAC to smiles**\n    \n    *   **Length:** Large(300 hours)/Medium(175 hours)\n    *   **Description:** This project focuses on developing tools within DeepChem to enable accurate, bidirectional conversion between SMILES (Simplified Molecular Input Line Entry System) strings and IUPAC (International Union of Pure and Applied Chemistry) names. The final deliverables will include user-friendly APIs, thorough documentation, and comprehensive testing to facilitate reliable molecular representation transformations.\n    *   **Educational Value:** Deepening of understanding of chemical data structures, algorithm optimization for molecular conversions, and contributing to the Deepchem ecosystem.\n    *   **Potential Mentors:** Shreyas, Bharath\n\n### Advanced Projects\n\nThese projects raise considerable technical and engineering challenges. We recommend that students who want to tackle these projects have past experience working in large codebases and tackling code reviews for complex code.\n\n*   **Implement a Wishlist Model**\n    \n    *   **Length:** Large (300 hours)\n    *   **Description:** DeepChem has an extensive wishlist of models ([https://github.com/deepchem/deepchem/issues/2680 64](https://github.com/deepchem/deepchem/issues/2680)). Pick a model from the wishlist and implement it in DeepChem. We suggest tackling a model such as Hamiltonian or Lagrangian Neural networks or Physics Inspired Neural Operators (PINO) that will improve DeepChem’s physics support.\n    *   **Educational Value:** Implementing a machine learning model from scratch or from an academic reference into a production grade library like DeepChem is a challenging task. Doing so requires understanding the base model, dealing with numerical issues in implementation, and benchmarking the model correctly. Multiple past GSoC contributors have leveraged their implementations to write papers on their work and have gained skills that they have used subsequently in industry or in academia.\n    *   **Potential Mentors:** Depends on model.\n*   **PyTorch Porting**\n    \n    *   **Length:** Medium (175 hours)\n    *   **Description:** DeepChem has mostly shifted to PyTorch as its primary backend, but a couple models are still implemented in TensorFlow, in particular our Chemception implementation. This project would port Chemception and do final testing to fix issues with PyTorch/DeepChem compatibility on implementations. [https://github.com/deepchem/deepchem/issues/2863. 28](https://github.com/deepchem/deepchem/issues/2863)\n    *   **Educational Value:** Porting models while preserving numerical properties requires a strong understanding of deep learning implementations. It serves as a test of machine learning know-how that will serve students well in future machine learning positions in academia or industry.\n    *   **Potential Mentors:** Aryan, Jose, Riya, Nimisha, Bharath, Shreyas\n*   **HuggingFace-style easy pretrained-model Load**\n    \n    *   **Length:** Large (300 hours)\n    *   **Description:** DeepChem requires you to know the parameters used to train a model in order to reload it from disk. This is unfriendly for distributing pretrained models. In this project, you will implement an easy HuggingFace-style function call to load weights from disk without having to know training parameters. To do this, you will set a standard metadata format for saving model parameters that can be used behind the scene to autoload models from disk.\n    *   **Educational Value:** This is a technically challenging project which will require understanding metadata formats and changing saving/reloading for existing models.\n    *   **Potential Mentors:** Aryan, Bharath\n*   **Model-Parallel DeepChem Model Training**\n    \n    *   **Length:** Large (300 hours)\n    *   **Description:** DeepChem now has good support for training LLM models through huggingface. At present though, these models cannot be too large and must fit on a single GPU. In this project, you will implement basic support for model parallel training to train models with weights that don’t fit on a single GPU.\n    *   **Educational Value:** This is a technically challenging project which will require understanding multi-GPU training methods. You may need to explore existing PyTorch frameworks for model-parallel training and adapt them to DeepChem.\n    *   **Potential Mentors:** Aryan, Bharath\n\nCommunity members, please add on more suggestions!\n\n*   #### created\n    \n    ![Image 2](https://forum.deepchem.io/user_avatar/forum.deepchem.io/bharath/20/8_2.png)Jan 29\n    \n*   [#### last reply ![Image 3](https://forum.deepchem.io/letter_avatar_proxy/v4/letter/r/f17d59/20.png)19h](https://forum.deepchem.io/t/deepchem-gsoc-2025-project-ideas/1568/4)\n*   2\n    \n    #### replies\n    \n*   1.5k\n    \n    #### views\n    \n*   3\n    \n    #### users\n    \n*   10\n    \n    #### likes\n    \n*   4\n    \n    #### links\n    \n*   ![Image 4](https://forum.deepchem.io/user_avatar/forum.deepchem.io/bharath/32/8_2.png)\n    \n    ![Image 5](https://forum.deepchem.io/letter_avatar_proxy/v4/letter/s/76d3ee/32.png)\n    \n    ![Image 6](https://forum.deepchem.io/letter_avatar_proxy/v4/letter/r/f17d59/32.png)\n    \n\n[![Image 7](https://forum.deepchem.io/letter_avatar_proxy/v4/letter/s/76d3ee/45.png)](https://forum.deepchem.io/u/sanskarmodi8)\n\nHi DeepChem team,\n\nI’m interested in applying for GSoC 2025 under DeepChem and have explored the project ideas. Two ideas particularly interest me:\n\n1.  **Implementing a Wishlist Model** – I’d love to work on integrating a new model into DeepChem. Implementing such models aligns with my deep learning background and interest in applying ML to scientific computing.\n2.  **PyTorch Porting** – Given DeepChem’s shift towards PyTorch, I’m also interested in porting **Chemception** to PyTorch and ensuring full compatibility with DeepChem’s ecosystem. I have prior experience working with deep learning frameworks like PyTorch and TensorFlow, so this would be an exciting challenge.\n\nWhile I have not contributed to DeepChem yet, I have been an active open-source contributor, particularly in **sktime**, where I implemented the **BoxCoxBiasAdjustedForecaster** and am currently adding a deep learning-based forecasting model. I have experience debugging complex ML issues, writing clean and maintainable code, and ensuring proper integration of my implementations.\n\nI’d love to hear your thoughts on how I can best align my skills with the project’s needs. Additionally, do you have any recommendations on specific areas I should explore or contributions I can make before the application period?\n\nLooking forward to your guidance!\n\nBest,  \nSanskar Modi\n\n[![Image 8](https://forum.deepchem.io/letter_avatar_proxy/v4/letter/r/f17d59/45.png)](https://forum.deepchem.io/u/rthakur2712)\n\nHi there,\n\nI’m interested in the “Improve Equivariance Support” project for DeepChem. I’d like to be assigned and would appreciate a brief on the issue as well as guidance on how to start contributing. Could you please let me know if this is the right place to connect and, if so, how I should get started? I’m eager to learn more about equivariant models and help extend DeepChem’s capabilities in this area.\n\nThanks for your time,  \nRitik Thakur\n"}