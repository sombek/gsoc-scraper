{"name":"Rspamd","description":"Rspamd is an email framework and spam filter","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/rspamd","ideas_url":"https://rspamd.com/gsoc2025_ideas.html","logo":"https://summerofcode.withgoogle.com/media/org/rspamd/d2hi7vv5bavik21s-360.png","technologies":["c","lua","c++","rust","clickhouse"],"topics":["email","spam filtering"],"projects":[{"project_name":"Multi-Class Bayesian Classifier","summary":"Extend the Bayesian classifier to support multiple categories and AI-driven learning via a GPT plugin for dynamic model updates.","difficulty":"Medium/Hard"},{"project_name":"Full Telegram Support (Bot for Spam Filtering)","summary":"Implement a Telegram bot for spam filtering, featuring rule-based automation for user reports and admin moderation.","difficulty":"Medium"},{"project_name":"Settings Manager (UI + Rust Backend)","summary":"Create a user-friendly UI for managing Rspamd settings, supported by a Rust backend for configuration storage.","difficulty":"Medium"},{"project_name":"GnuPG Signing and Verification Support","summary":"Enhance GnuPG support for email signing/verifying, including key management and policy enforcement.","difficulty":"Hard"}],"jina_response":"Title: Rspamd project ideas for GSOC 2025\n\nURL Source: https://rspamd.com/gsoc2025_ideas.html\n\nMarkdown Content:\nIntroduction\n------------\n\nThis page lists project ideas for contributors to Rspamd, particularly for programs like Google Summer of Code (GSoC). We welcome contributors who are passionate about open-source development, email/spam filtering, and modern technologies like AI and Rust.\n\nInformation for GSoC Participants\n---------------------------------\n\nProspective contributors should:\n\n*   Have a **GitHub account** and familiarity with Git workflows.\n*   Review the [Rspamd repository](https://github.com/rspamd/rspamd).\n*   Join our Telegram channel [rspamd](https://t.me/rspamd_gsoc_2025) for discussions.\n*   Demonstrate proficiency in **C** (or C++), **Lua** or **Rust** (depending on the project).\n\nAll code must be licensed under **Apache 2.0**.\n\nMentors\n-------\n\n| Mentor | Email | Role |\n| --- | --- | --- |\n| Vsevolod Stakhov | vsevolod@rspamd.com | Core Development, Admin |\n| Andrew Lewis | alewis@rspamd.com | Core Development, Lua plugins development |\n| Anton Yuzhaninov | citrin@rspamd.com | Protocols, Integrations |\n\n* * *\n\nList of Projects\n----------------\n\n### Multi-Class Bayesian Classifier\n\n**Description**: Extend Rspamd’s Bayesian classifier to support **multiple categories** (beyond spam/ham) and integrate AI-driven learning via a **GPT plugin** for dynamic model updates.\n\n**Difficulty**: Medium/Hard\n\n**Timeline**: 22 weeks\n\n**Skills**: Machine Learning (Bayesian methods), Lua, Python (for GPT integration)\n\n**Mentors**: Vsevolod Stakhov, Andrew Lewis\n\n**Benefits**: Gain expertise in AI/ML integration, probabilistic classifiers, and large-language model APIs.  \n**Evaluation**:\n\n*   **Midterm**: Basic multi-class support in Bayes module; GPT plugin prototype.\n*   **Final**: Full integration with GPT for automated learning; performance benchmarks.\n\n* * *\n\n### Full Telegram Support (Bot for Spam Filtering)\n\n**Description**: Implement integration of with **Telegram bot** for spam filtering, including rule-based automation (e.g., user reports, admin moderation).\n\n**Difficulty**: Medium\n\n**Timeline**: 12 weeks\n\n**Skills**: Rust (Telegram Bot API), Lua, Rule Engine Design\n\n**Mentors**: Andrew Lewis, Anton Yuzhaninov\n\n**Benefits**: Learn real-time bot development, protocol integration, and spam rule optimization.  \n**Evaluation**:\n\n*   **Midterm**: Functional Telegram bot with basic spam reporting.\n*   **Final**: Advanced rules (e.g., rate limiting, user reputation), moderation UI, and documentation.\n\n* * *\n\n### Settings Manager (UI + Rust Backend)\n\n**Description**: Build a **user-friendly UI** for managing Rspamd settings and a Rust-based backend for storing configurations in MySQL/PostgreSQL.\n\n**Difficulty**: Medium\n\n**Timeline**: 12 weeks\n\n**Skills**: Rust, JavaScript/TypeScript (React/Vue), SQL\n\n**Mentors**: Andrew Lewis, Vsevolod Stakhov\n\n**Benefits**: Master full-stack development, Rust database integration, and secure UI design.  \n**Evaluation**:\n\n*   **Midterm**: Rust backend with CRUD operations; UI prototype.\n*   **Final**: Full UI feature set (import/export, versioning), performance optimizations.\n\n* * *\n\n### GnuPG Signing and Verification Support\n\n**Description**: Enhance Rspamd’s GnuPG support for signing/verifying emails, including key management and policy enforcement.\n\n**Difficulty**: Hard\n\n**Skills**: C, Cryptography (PGP/GnuPG), Lua\n\n**Timeline**: 22 weeks\n\n**Mentors**: Vsevolod Stakhov\n\n**Benefits**: Deepen knowledge of cryptographic protocols and secure C programming.  \n**Evaluation**:\n\n*   **Midterm**: Basic message signing/verification workflow.\n*   **Final**: Key rotation policies, WebUI integration, and attack-resistance testing.\n\n* * *\n\nHow to Proceed\n--------------\n\n1.  **Fork the Rspamd repo** and explore the codebase.\n2.  **Discuss your proposal** with mentors on Telegram or the mailing list.\n3.  Submit a **detailed timeline** with milestones matching GSoC’s 12-week schedule.\n\n_We value passion, clarity, and realistic planning!_\n"}