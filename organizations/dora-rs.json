{"name":"dora-rs","description":"Simplify robotic apps with low latency & distributed dataflow","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/dora-rs-tb","ideas_url":"https://github.com/dora-rs/dora/wiki/GSoC_2025","logo":"https://summerofcode.withgoogle.com/media/org/dora-rs-tb/u8emntrmqq6vgcih-360.png","technologies":["python","ros","c++","rust","Autonomous drive"],"topics":["middleware","Embodied AI","Python Robotics","Autonomous Drive","Robot Dataflow"],"projects":[{"project_name":"Robot Data Collection with Unified Format","summary":"This project focuses on creating a comprehensive robot dataset collection system using low-cost robot kits customized for the Dora platform.","difficulty":"medium"},{"project_name":"Improve Dora-Lerobot Demo Tutorial","summary":"Aims to enhance the Python tutorial for the SO-ARM100 robotic arm, bridging the gap between theory and application in robotics education.","difficulty":"medium"},{"project_name":"Enhancing Debugging with Rerun","summary":"Seeks to improve real-time debugging capabilities for Dora nodes by integrating visualization and access to debug messages, streamlining the debugging process.","difficulty":"medium"},{"project_name":"Library to support UR5","summary":"This project aims to develop a library for controlling UR5 collaborative robots within the Dora framework, enhancing usability and integration with existing robotic setups.","difficulty":"hard"}],"jina_response":"Title: GSoC_2025\n\nURL Source: https://github.com/dora-rs/dora/wiki/GSoC_2025\n\nMarkdown Content:\nDora is a dataflow-based, low-latency middleware designed to revolutionize the development of robotic applications. In the field of robotics, where efficiency and speed are crucial, Dora stands out by supporting multiple programming languages, including Python, Rust, C, and C++. This multi-language support enables developers from diverse backgrounds to contribute and innovate.\n\nThe following is a list of projects suggested for GSoC 2025. These projects aim to further expand Dora's capabilities, enhance its usability, and contribute to the growth of the global robotics community.\n\nProject #1: Robot Data Collection with Unified Format.\n------------------------------------------------------\n\n[](https://github.com/dora-rs/dora/wiki/GSoC_2025#project-1-robot-data-collection-with-unified-format)\n\n**Description** The robot data collection is expensive and hard to manage. The primary objective of this project is to create an end to end tutorials with affordable robot kit, specifically designed around the Dora platform, and utilize it to establish a comprehensive robot dataset collection system. This system is designed to facilitate the collection of data, which can be used for various applications such as robotics research, algorithm development, and model training.\n\n**Expected Outcomes**\n\n*   **Designing and 3D printing the robot components**. The robot will be constructed using 3D - printed components made from low - cost materials. This approach not only reduces the overall cost of the robot but also allows for easy customization and modification. The use of 3D printing enables the creation of complex geometries tailored to the specific requirements of the data collection tasks. This can be done with help from other open source projects such as Koch robot arms.\n*   **Creating the Mojoco robot model**. A Mojoco robot model will be created based on the robot arm. Mojoco is a high - performance physics simulation engine that provides accurate and efficient simulations. By creating a Mojoco model of the robot, we can collect data from the simulated model. This simulated data can serve as a baseline or supplement to the data collected from the real robot, and can also be used for preliminary testing and algorithm development in a controlled virtual environment.\n*   **Implementing data collection nodes in Dora**. The system will be programmed to collect a variety of data from the real robot, including the robot's joint angles, rotational speeds, and pose information. The data format will follow the [ARIO](https://imaei.github.io/project_pages/ario/) unified data format.\n*   **Integrating with the ARIO unified data format**. the code will be integrated with the Mojoco simulation environment to ensure seamless data collection from simulated robots.\n*   **Create tutorials and documentation** that will help the community replicate the data collection system.\n*   **dataset collected will be shared within the open source community**.\n\n**Resources**.\n\n[https://imaei.github.io/project\\_pages/ario/](https://imaei.github.io/project_pages/ario/)\n\n**Skills required/preferred**. Python, CAD, DORA\n\n**Difficulty rating**. medium\n\n**Expected size:** 350h\n\n**Mentors:** [bding@dora-rs.org](mailto:bding@dora-rs.org), [huangyu@dora-rs.org](mailto:huangyu@dora-rs.org)\n\nProject #2: Improve Dora-Lerobot Demo Tutorial\n----------------------------------------------\n\n[](https://github.com/dora-rs/dora/wiki/GSoC_2025#project-2--improve-dora-lerobot-demo-tutorial)\n\n**Description** In robotics education, a gap often exists between theoretical knowledge and practical application. Dora-Lerobot bridges this gap by integrating hands-on learning with AI-powered, pre-trained models. Its primary goal is to lower the barrier to entry in robotics, enabling everyone to master end-to-end control.\n\nRecently, support for the SO-ARM100, a low-cost robotic arm, was added to Dora through its driver. However, there is currently no end-to-end tutorial available for using this arm. Tutorials and documentation are critical for making the project more accessible to new users.\n\nThe goal of this project is to improve the Python-based tutorial for using the SO-ARM100 robotic arm with Dora-LeRobot, enabling users to easily get started and contribute to the ecosystem.\n\n**Expected Outcomes**\n\n*   Fix issues and add missing code so that Dora-LeRobot can be run with SO-ARM100 successfully.\n*   Writing detailed setup and usage tutorials.\n*   Implementing code for calibration, control, training, and inference.\n*   Creating video tutorials and improve based on community feedbacks.\n*   Creating test plan for user testing to ensure the tutorial is easy to follow.\n\n**Resources**.  \n[https://github.com/dora-rs/dora-lerobot/tree/main](https://github.com/dora-rs/dora-lerobot/tree/main)  \n[https://github.com/huggingface/lerobot](https://github.com/huggingface/lerobot)\n\n**Skills required/preferred**. Python, Rust, DORA\n\n**Difficulty rating**. medium\n\n**Expected size:** 350h\n\n**Mentors:** [shavtao@gmail.com](mailto:shavtao@gmail.com), [bding@dora-rs.org](mailto:bding@dora-rs.org)\n\nProject #3: Enhancing Debugging with Rerun\n------------------------------------------\n\n[](https://github.com/dora-rs/dora/wiki/GSoC_2025#project-3--enhancing-debugging-with-rerun)\n\n**Description** Currently, debugging Dora nodes has several limitations. There's limited real - time visibility as debug messages are only accessible from log files, forcing developers to halt the robot application, access and analyze logs, which is time - consuming and lacks real - time insights. There's also a lack of integrated visualization, making it hard to correlate debug messages with sensor data processing like LiDAR or camera feeds, and thus difficult to determine if issues in object detection are due to sensor data or the algorithm. Additionally, the absence of a unified real - time debugging solution leads to a fragmented debugging experience, with developers relying on multiple tools and techniques, making it more challenging to identify and fix issues efficiently.\n\n**Expected Outcomes**\n\n*   **Improving the dora-rerun node to collect real-time debug messages**. Improve dora-rerun node to allow rerun viewer to collect each node real time debug message with python or rust.\n*   **Displaying sensor data processing examples**. Create sensor data processing(e.g., LiDAR, camera feeds) python or Rust example code and documentation to show how to use debug messages.\n*   **Visualizing robot trajectories and arm poses**. Rerun will be used to visualize robot trajectories, arm poses, or other relevant data in the same rerun window and how to setup with detailed tutorials.\n*   **Creating detailed tutorials**. Create detailed tutorials on how to set up Rerun for debugging Dora nodes. This makes it easier for developers, especially those new to Rerun or Dora, to start using this debugging tool effectively.\n\n**Resources**.  \n[https://github.com/dora-rs/dora/tree/main/node-hub/dora-rerun](https://github.com/dora-rs/dora/tree/main/node-hub/dora-rerun)\n\n**Skills required/preferred**. Rust, DORA\n\n**Difficulty rating**. medium\n\n**Expected size:** 175h\n\n**Mentors:** [shavtao@gmail.com](mailto:shavtao@gmail.com), [bding@dora-rs.org](mailto:bding@dora-rs.org)\n\nProject #4: Library to support UR5\n----------------------------------\n\n[](https://github.com/dora-rs/dora/wiki/GSoC_2025#project-4--library-to-support-ur5)\n\n**Description** Dora currently lacks a library for UR5 robots, which are widely used in schools. This project aims to extend Dora’s capabilities by adding support for Universal Robots’ UR5 collaborative robots. The primary focus is to develop UR5 library within the Dora framework. This library is designed to offer control over UR5 collaborative robots (cobots). By doing so, it will empower developers to more effectively integrate and utilize Dora in combination with their existing assets, opening up new possibilities for seamless robotics development and enhanced productivity.\n\n**Expected Outcomes**\n\n*   **Developing the Rust library for UR5 control**. A well-documented, efficient, and effective Rust library that interfaces with UR5 cobots through Dora.\n*   **Integrating with URSim**. The project will include an implementation that demonstrates control of the UR5 robot model and its gripper within the URSim virtual machine environment.\n*   **Porting the test\\_move example to Rust**. A Rust version of the test\\_move example (originally in Python) will be developed, providing a concrete demonstration of how to use the library with Dora.\n*   **Creating comprehensive documentation and tutorials**. Comprehensive documentation and usage tutorials that guide developers on UR5 support within their robotics projects using Dora.\n\n**Resources**.  \n([https://github.com/UniversalRobots/Universal\\_Robots\\_ROS\\_Driver/blob/master/ur\\_robot\\_driver/scripts/test\\_move](https://github.com/UniversalRobots/Universal_Robots_ROS_Driver/blob/master/ur_robot_driver/scripts/test_move))  \n[https://github.com/dora-rs/libfranka-rs](https://github.com/dora-rs/libfranka-rs). for reference on interfacing with robotics hardware using Rust\n\n**Skills required/preferred**. Rust,C++, Python, DORA\n\n**Difficulty rating**. hard\n\n**Expected size:** 350h\n\n**Mentors:** [bding@dora-rs.org](mailto:bding@dora-rs.org), [shavtao@gmail.com](mailto:shavtao@gmail.com)\n"}