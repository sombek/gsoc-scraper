{"name":"UC OSPO","description":"Amplifying Research Impact through Open Source","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/uc-ospo","ideas_url":"https://ucsc-ospo.github.io/osre25/#projects","logo":"https://summerofcode.withgoogle.com/media/org/center-for-research-in-open-source-software-cross/ndbkr7fqcqp4nguq-360.png","technologies":["python","javascript","c/c++","machine learning","VLSI"],"topics":["education","bioinformatics","hardware","data science","AI/ML"],"projects":[{"project_name":"2025 Open Source Research Experience","summary":"A program aimed at connecting students with research mentors to contribute to open source projects and reproducible research efforts.","difficulty":"Varies by project"},{"project_name":"Summer of Reproducibility (SoR)","summary":"Facilitates projects focused on creating and using reproducibility artifacts in research, allowing students to acquire valuable skills.","difficulty":"Medium"},{"project_name":"Google Summer of Code (GSoC)","summary":"OSRE acts as a GSoC mentor organization, enabling participation from a global community of students in open source research.","difficulty":"Medium"},{"project_name":"Mentor Participation","summary":"Mentors can post project ideas for students, encouraging a collaborative approach to developing research proposals.","difficulty":"Varies by project"},{"project_name":"Student Involvement","summary":"Students are encouraged to review project ideas and collaborate with mentors to formulate proposals for the summer projects.","difficulty":"Varies by experience level"},{"project_name":"Wide-ranging Project Opportunities","summary":"Diverse projects are available across various domains including AI, data science, and reproducibility, welcoming contributions from students around the world.","difficulty":"Varies by project"},{"project_name":"OSRE Sponsorship","summary":"Organizations can sponsor projects to strengthen their talent pipeline while collaborating on innovative open source initiatives.","difficulty":"N/A"},{"project_name":"Project Timeline","summary":"Outlines key deadlines for project submissions, mentor participation, and student proposals, crucial for the program's organization and structure.","difficulty":"N/A"}],"jina_response":"Title: OSRE | UCSC OSPO\n\nURL Source: https://ucsc-ospo.github.io/osre25/\n\nPublished Time: 2022-11-06T00:00:00+00:00\n\nMarkdown Content:\n🏠 Home\n🔭 About\n📺 Programs\n📚 Resources\n📝 Blog\n🎪 Events\n2025 Open Source Research Experience\n\nMatching summer students with research mentors and sponsors.\n\nView Projects\n\nThe Open Source Research Experience (OSRE) program provides support for undergraduate and graduate students contributing to open source projects and reproducible research efforts. With its dual focus on both increasing open source communities and making computational research efforts reproducible, the OSRE supports a wide variety of projects. In connection with the OSRE, the UCSC OSPO has taken part in the Google Summer of Code as a mentor organization and managed other sponsored programs such as the NSF funded Summer of Reproducibility. Information from past OSRE years can be found here: 2024, 2023 and 2022 (final 2022 reports). Mentors interested in participating in the OSRE (including for projects relevant to GSoC and the SoR) can post their project ideas for students to review. Project ideas are short abstracts that provide an overview of the tasks students will accomplish over the summer. See mentor page for more details. Interested Students or other newcomers to open source or reproducibility should review these project ideas and work with mentors to develop a full proposal. Student projects are due by April 4, 2024. See student information page for more details.\n\nTable of Content: OSRE News | OSRE 2025 | For students | Student pages | For mentors | For sponsors | Timeline | Projects | Tag cloud | Mentors and Contributors\n\nOSRE News\nAccepted as 2025 GSoC Mentor Organiztion\nWe are excited to have once again been selected as a Google Summer of Code Mentor Organization. The 2025 Open Source Research Experience (and with it the 2024 Summer of Reproducibility ) will once again benefit from GSOC’s world-wide outreach and generous funding of contributors.\nStephanie Lieggi\nFeb 27, 2025  1 min read  News\nOSRE 2025 Mentor Info Session\nOverview of expectations and benefits for those interested in mentoring for the 2025 Open Source Research Experience Program\nStephanie Lieggi\nJan 28, 2025  1 min read  News\nSoR 2025 Mentor Info Session\nCould your reproducibility-related research project benefit from working with enthusiastic and talented students who are paid to productively contribute to your work this coming Summer? Would you be able to mentor that student no more than 5 hours per week? The Summer of Reproducibility (SoR) Program is the opportunity you are looking for to move your research forward.\nStephanie Lieggi\nNov 13, 2024  2 min read  News\n40 Contributors participating in OSRE '24\nSummer 2024 OSRE supporting 40 students working on Open Source and Reproductivity Thanks to the support from the Google Summer of Code (GSoC) and the National Science Foundation FAIROS RCN program, the UCSC OSPO has matched 40 students with mentors to contribute to open source and reproducibility this year.\nStephanie Lieggi, Carlos Maltzahn\nMay 28, 2024  1 min read  News\nAccepted as 2024 GSoC Mentor Organiztion\nWe are excited to have once again been selected as a Google Summer of Code Mentor Organization. The 2024 Open Source Research Experience (and with it the 2024 Summer of Reproducibility ) will once again benefit from GSOC’s world-wide outreach and generous funding of contributors.\nStephanie Lieggi\nFeb 21, 2024  1 min read  News\nSEE ALL \nOSRE 2025\n\nOpen Source Research Experience\n\nAs last year OSRE 2025 will include mentors across multiple University of California campuses. Project ideas are listed below.\n\nThis year will again include the Summer of Reproducibility with research projects around producing and using reproducibility artifacts (see also ctuning.org and sysartifacts). Quite a few conferences are now offering awards for reproducibility artifacts. This encourages authors to produce reproducibility artifacts. There is great potential for using these artifacts not only for validating research results but also as teaching tools in classrooms and as baselines in research labs. Making producing and using reproducibility artifacts easier can significantly accelerate the rate of insights. The Summer of Reproducibility gives summer students the opportunity to help out in this cutting-edge effort and acquire valuable skills related to reproducibility.\n\nSummer of Reproducibility projects do not need to have at least one UC-affliated mentor.\nFor students\n\nIf you are interested, have a look at our guidelines for students, which includes timelines on when to contact mentors and proposal guidelines and expectations.\n\nMentor project ideas will be published beginning in January and updated through February. Students are asked to wait to reach out to mentors until late February 2025. The proposal deadline is expected to be late March / early April.\n\nStudents interested in applying to any of our projects should join our Slack channel before March 20. This channel will open for students in February and a link will be provided then.\n\nYou can also use our Gitter channel for general questions before reaching out to mentors. https://gitter.im/uc_ospo-osre/community\n\nNote that this channel is reviewed by the org admin periodically and meant for general organizational questions.\n\nDue to the open source nature of all OSRE projects, contributions are welcome from students or other newcomers from anywhere in the world. Please note that you must have work authorization in your country of residence to take part in this program. Please contact ospo-info-group@ucsc.edu if you have any questions about your eligibility.\n\nWe typically support the work of undergraduate students; however graduate students may also apply to work on more advanced project ideas. Please check out the project ideas page and contact the mentor if you have questions.\n\nStudent pages\n\nGo to 2024 student pages\n\nWe are asking OSRE 2025 students and contributors to share their progress on a regular basis. We are excited to be able to highlight their work on this website and in events such as our Open Source Symposium. This blog post contains instructions on how to start highlighting contributor work with blog posts, also known as “student pages”. And here they are:\n\nAll\nUC Mentors\nReproducibility\nHide\nFor projects and mentors\n\nThe UCSC OSPO is looking for mentors to be part of our 2025 Open Source Research Experience Program (OSRE), which also includes our NSF funded the Summer of Reproducibility (SoR). Please read the FAQ for Mentors and, if interested in participating, the instructions for posting projects.\n\nFAQ for Mentors –>\nThe Instructions –>\n\nWhile typical OSRE supported projects require mentors who are connected to University of California-based open source projects, the Summer of Reproducibility allows us to also support mentors interested in research projects related to the creation and usage of reproducibilty artifacts.\n\nThe OSRE aims to increase student capabilities in working in open source projects and creating reproducible artifacts, as well as add productive open source contributors and promote open source and reproducibility throughout the UC system and beyond.\n\nThe program team at the UCSC OSPO values diversity and inclusion in all our projects. We invite mentors from groups traditionally excluded in computer science/open source communities to participate in this program.\n\nWhy should you be an OSRE mentor?\n\nIf you could use undergraduate* research assistance over the summer with your on-going research, this is a great opportunity to get matched to top students. Like Google Summer of Code, the OSRE allows the mentors to choose the students they want to work with based on an interactive and iterative proposal process. The proposal process provides mentors the opportunity to select someone they want to work with who will benefit their project and research. (*A limited number of SoR projects can also support graduate students based on need for advanced expertise.)\n\nWho can be a mentor?\n\nYour project needs to\n\nEITHER have at least one mentor affiliated with the University of California or associated DOE national labs\nOR have some connection to producing or using reproducibility artifacts.\n\nFor University of California (UC) projects: Any UC-affiliated faculty, researchers or graduate students working on projects that are or will ultimately be part of an open source community/ecosystem.\n\nFor Summer of Reproducibility (SoR) projects: Researchers and faculty looking to support the open source production or use of reproducibility artifacts.\n\nAll software created as part of an OSRE project must be released as free and open source under a license that is both approved by the Open Source Initiative (OSI) and recognized as free by the Free Software Foundation (FSF).\n\nFor more details, please see the FAQ for Mentors and the instructions for posting projects.\n\nFAQ for Mentors –>\nThe Instructions –>\nFor sponsors\n\nIs your organization looking to use open source more effectively and want to support projects that directly benefit your business or industry?\n\nDoes your company want to strengthen the talent pipeline able to work on technologies essential to your organization’s success?\n\nDo you want to collaborate with innovative open source projects being developed by University of California researchers?\n\nSponsor Projects –>\n\nThe UC Open Source Research Experience (OSRE) offers your organization the chance to participate in projects that can help your development cycles run faster, benefit from wide collaborations, and help support workforce development in domains your organization needs.\n\nTo become a sponsor, fill out the Sponsorship Interest Form. You will be asked to indicate the level of sponsorship you would like to fund and the open source projects you are most interested in engaging with.\n\nBenefits of sponsorship\nCollaborating on innovative project that are of strategic interest to your industry;\nSupporting the teaching of open source techniques to a wide range of student contributors;\nInteracting with the next generation of open source leaders and up and coming talent; and\nRecognition as an OSRE Sponsor at the Open Source Research Symposium (Fall 2025)\nOSRE Sponsor Levels\nLevel\tAmount\nBronze\t$3,750 (covers 50% of one student stipend for summer)\nSilver\t$7,500 (covers one student full-time for summer)\nGold\t$15,000 (covers two students full-time for summer)\nTable: OSRE Sponsorship Levels\nBecoming a Sponsor\n\nBecoming a sponsor is easy! Fill out the Sponsorship Interest Form or reach out to the OSRE Admins by April 20. Information requested by the form include: name of contact person, level of sponsorship, and projects you are most interested in (if applicable.) The OSRE Admins will follow up with next steps for finalizing the sponsorship process.\n\nSponsor Projects –>\nTimeline\n\nGo to 2024 timeline\n\nFeb 11\tPriority deadline for mentors posting project ideas for OSRE/SoR consideration\nFeb 18\tFinal deadline for mentors posting projects for OSRE/SoR consideration\nFeb 27\tUC OSPO accepted as GSoC Mentor Organizations\nFeb 27 - Apr 2\tContributors can begin reaching out to mentors for guidance and join OSRE slack channel (joining Slack Channel is REQUIRED for proposals to be considered.\nMar 23\tDeadline for students to join Slack channel (required for proposal to be considered)\nApr 8\tStudent proposal deadline\nMay 8\tAccepted student proposals announced\nMay 8 - June 1/span>\tCommunity Bonding / Onboarding\nJune - August*\tOSRE participants work on projects / includes one mid-term evaluation\n*Project start and end dates are flexible but need to be OK’d with Mentor and Org Admin\t\nTable: OSRE 2025 Timeline\n2025 Projects\n\nFor SoR eligible projects, filter for Reproducibiltiy/SoR.\n\nAll\nUC Mentors/GSoC\nReproducibility/SoR\nHide\nAI Data Readiness Inspector (AIDRIN)\nGarbage In Garbage Out (GIGO) is a universally agreed quote by computer scientists from various domains, including Artificial Intelligence (AI). As data is the fuel for AI, models trained on low-quality, biased data are often ineffective.\nJean Luca Bez, Suren Byna\nAI for Science: Automating Domain Specific Tasks with Large Language Models\nRecent advancements in Large Language Models (LLMs) have transformed various fields by demonstrating remarkable capabilities in processing and generating human-like text. This project aims to explore the development of an open-source framework that leverages LLMs to enhance discovery across specialized domains.\nDaniel Wong, Luanzheng \"Lenny\" Guo\nAR4VIP\nWe are interested in developing navigation aids for visually impaired people (VIP) using AR/VR technologies. Our intended use is primarily indoors or outdoors but within private confines e.g. person’s backyard. Using AR/VR headsets or smart glasses allows navigation without using a cane and frees the users’ hands for other tasks.\nalex pang\nArchitecting the Future of Scientific Data: Multi-Site Streaming Without Compromise\nData is generated at ever-increasing rates, yet it’s often processed more slowly than it’s collected. Scientific instruments frequently operate below their full capacity or discard valuable data due to network bottlenecks, security domain mismatches, and insufficient real-time processing capabilities.\nJoaquin Chung, Flavio Castro\nAssessing and Enhancing CC-Snapshot for Reproducible Experiment Environments\nOverview CC-Snapshot is a tool on the Chameleon testbed that enables users to “capture” their customized environments and package them as complex images or appliances. By allowing researchers to share these environments easily, CC-Snapshot offers a powerful mechanism for reproducibility, ensuring that experiments can be replicated and extended by others.\nMark Powers, Michael Sherman\nAutograder\nThe EduLinq Autograder is an open source tool used by several courses at UCSC to safely and quickly grade programming assignments. Grading student code is something that may seem simple at first (you just need to run their code!\nEriq Augustine\nBrahma\nBrahma is a lightweight framework for building collaborative and cross platform WebXR based experiences using Three.js for the front-end and a simple Node.js/WebSocket script on the backend. It was created at the Social Emotional Technology Lab to facilitate the development of novel collaborative interfaces and virtual environments capable of loading scientific datasets.\nsmrghsh\nCarbonCast: Building an end-to-end consumption-based Carbon Intensity Forecasting service\nCarbonCast is a machine-learning-based approach to provide multi-day forecasts of the electrical grid’s carbon intensity. Developed in Python, the current version of CarbonCast delivers accurate forecasts in numerous regions by using historical source production data of a particular geographical region, time of day/year, and weather forecasts as features.\nAbel Souza\nCauseway: Scaling Experiential Learning Through Micro-Roles\nCauseway is a platform for learning to develop web applications using an Angular, RxJS, NgRx, and Firebase stack. Most online coding tutorials focus on covering the technical syntax or features of a language or framework, which means that new developers don’t have great resources for building a holistic picture of how everything they learn connects to actually developing a complex web application.\nDavid Lee\nChameleon Trovi Support for Complex Experiment Appliances\nOverview Chameleon has historically enabled researchers to orchestrate complex appliances—large, multi-node clusters configured via OpenStack Heat—to conduct advanced experiments. Meanwhile, Trovi has emerged as a service for sharing reproducible artifacts. This project aims to bridge the two by adding support in Trovi for importing, discovering, and launching complex appliances.\nKate Keahey, Mark Powers\nContextualization – Extending Chameleon’s Orchestration for One-Click Experiment Deployment\nOverview Chameleon already provides powerful capabilities to orchestrate and configure resources through Heat templates (similar to Terraform) and the python-chi library. However, these focus primarily on provisioning (i.e., allocating and configuring hardware resources).\nMark Powers, Michael Sherman\nDisentangled Generation and Editing of Pathology Images\nTopics: computational pathology, image generation, disentangled representations, latent space manipulation, deep learning Skills: Programming Languages: Proficient in Python, with experience in machine learning libraries such as PyTorch or TensorFlow. Generative Models: Familiarity with Variational Autoencoders (VAEs), Generative Adversarial Networks (GANs), and contrastive learning methods.\nXi Li\nEnhancing Reproducibility in Distributed AI Training: Leveraging Checkpointing and Metadata Analytics\nReproducibility in distributed AI training is a crucial challenge due to several sources of uncertainty, including stragglers, data variability, and inherent randomness. Stragglers—slower processing nodes in a distributed system—can introduce timing discrepancies that affect the synchronization of model updates, leading to inconsistent states across training runs.\nLuanzheng \"Lenny\" Guo\nEnhancing Reproducibility in RAG Frameworks for Scientific Workflows\nRetrieval-Augmented Generation (RAG) frameworks, which merge the capabilities of retrieval systems and generative models, significantly enhance the relevance and accuracy of responses produced by large language models (LLMs). These frameworks retrieve relevant documents from a large corpus and use these documents to inform the generative process, thereby improving the contextuality and precision of the generated content.\nLuanzheng \"Lenny\" Guo\nEnvironmental NeTworked Sensor (ENTS)\nENTS I: Web portal for large-scale sensor networks Topics: Data Visualization, Backend, Frontend, UI/UX, Analytics Skills: Required: React, Javascript, Python, SQL, Git Nice to have: Flask, Docker, CI/CD, AWS, Authentication Difficulty: Medium Size: Large (350 hours) Mentors: Colleen Josephson, John Madden, Alec Levy The Environmental NeTworked Sensor (ENTS) platform, formally Open Sensing Platform (OSP), implements data visualization website for monitoring microbial fuel cell sensors (see GitHub).\nColleen Josephson\nExploration of I/O Reproducibility with HDF5\nParallel I/O is a critical component in high-performance computing (HPC), allowing multiple processes to read and write data concurrently from a shared storage system. HDF5—a widely adopted data model and library for managing complex scientific data—supports parallel I/O but introduces challenges in I/O reproducibility, where repeated executions do not always produce identical results.\nLuanzheng \"Lenny\" Guo, Wei Zhang\nFairFace\nFairFace: Reproducible Bias Evaluation in Facial AI Models via Controlled Skin Tone Manipulation Bias in facial AI models remains a persistent issue, particularly concerning skin tone disparities. Many studies report that AI models perform differently on lighter vs.\nprofjamesdavis\nGeFARe: Discovering Reproducible Failure Scenarios and Developing Failure-Aware Scheduling for Genomic Workflows\nTopics: genomic processing (e.g., DNA and RNA alignment), workflow scheduling, resource/cluster management, container orchestration Skills: Linux, cloud computing (e.g., OpenStack), cluster manager (e.g., Kubernetes), systems automation (e.g., Bash/Python/Puppet), genomic workflows and applications (e.\nIn Kee Kim\nh5bench with AI workloads\nh5bench is a suite of parallel I/O benchmarks or kernels representing I/O patterns that are commonly used in HDF5 applications on high performance computing systems. h5bench measures I/O performance from various aspects, including the I/O overhead, and observed I/O rate.\nJean Luca Bez, Suren Byna\nHAgent\nHAgent is a platform to build AI hardware agent engine to support multiple components in chip design, such as code generation, verification, debugging, and tapeout. HAgent is build as a compiler for for Hardware Agents, it interfaces with typical EDA tools like compilers, synthesis, and verification.\nJose Renau\nKolmogorov-Arnold-based Transformer for LLMs: Implementation, Evaluation and Benchmarking\nProject Objectives KALLM project proposes a new Kolmogorov-Arnold Network (KAN)-based Transformer implementation of an open-source LLM called SmolLM2. Transformers have found increasing success in many open-source LLMs across language reasoning tasks like text generation, summarization and some tasks imitating advanced critical thinking.\nSai Suman Lamba Karanam, Zahmeeth Sakkaff\nLLMSeqRec: LLM Enhanced Contextual Sequential Recommender\nProject Description Sequential Recommender Systems are widely used in scientific and business applications to analyze and predict patterns over time. In biology and ecology, they help track species behavior by suggesting related research on migration patterns and environmental changes.\nLinsey Pang, Bin Dong\nLMS Toolkit\nThe EduLinq LMS Toolkit (also called the “Canvas Tool” or “py-canvas”) is a suite of tools used by several courses at UCSC to interact with Canvas from the command line or Python.\nEriq Augustine\nMediglot\nPolyPhy is a GPU-oriented agent-based system for reconstructing and visualizing optimal transport networks defined over sparse data. Rooted in astronomy and inspired by nature, we have used an early prototype called Polyphorm to reconstruct the Cosmic web structure, but also to discover network-like patterns in natural language data.\nOskar Elek, Kiran Deol\nMPI Appliance for HPC Research on Chameleon\nOverview This project aims to develop a streamlined template for launching MPI (Message Passing Interface) clusters on the Chameleon Cloud testbed. By configuring disk images with the necessary MPI dependencies and providing orchestration templates that set up networking and instances automatically, researchers will be able to quickly and consistently deploy distributed computing environments.\nMark Powers\nOpen Testbed for Reproducible Evaluation of Replicated Systems at the Edges\nProject Description Topics: Distributed systems Skills: Java, Go, Python, Bash scripting, Linux, Docker. Difficulty: Hard Size: Large (350 hours) Mentors: Fadhil I. Kurnia Replication is commonly employed to improve system availability and reduce latency.\nFadhil Kurnia\nOpenROAD - An Open-Source, Autonomous RTL-GDSII Flow for Chip Design\nThe OpenROAD project is a non-profit project, originally funded by DARPA with the aim of creating open-source EDA tools; an Autonomous flow from RTL-GDSII that completes < 24 hrs, to lower cost and boost innovation in IC design.\nMatt Liberty, Eder Monteiro, Arthur Koucher, Jack Luar\nPeersky Browser\nPeersky Browser is an experimental personal gatekeeper to a new way of accessing web content. In a world where a handful of big companies control most of the internet, Peersky leverages distributed web technologies—IPFS, Hypercore, and Web3—to return control to the users.\nAkhilesh Thite\nQuiz Composer\nThe EduLinq Quiz Composer (also called the “Quiz Generator”) is a tool used by several courses at UCSC to create and maintain platform-agnostic quizzes (including exams and worksheets). Knowledge assessments like quizzes, exams, and tests are a core part of the learning process for many courses.\nEriq Augustine\nRAG-ST: Retrieval-Augmented Generation for Spatial Transcriptomics\nTopics: bioinformatics, spatial transcriptomics, gene expression generation, retrieval-augmented generation, large models Skills: Programming Languages: Proficient in Python, and familiarity with machine learning libraries such as PyTorch. Data Analysis: Experience with spatial transcriptomics datasets and statistical modeling.\nZiheng Duan\nReasonWorld\nReasonWorld: Real-World Reasoning with a Long-Term World Model A world model is essentially an internal representation of an environment that an AI system would construct based on external information to plan, reason, and interpret its surroundings.\nprofjamesdavis\nReIDMM: Re-identifying Multiple Objects across Multiple Streams\nProject Description Re-identifying multiple objects across multiple streams (ReIDMM) is essential in scientific research and various industries. It involves tracking and analyzing entities across different viewpoints or time frames. In astronomy, ReIDMM helps track celestial objects like asteroids and space debris using multiple observatories.\nBin Dong, Linsey Pang\nScenic: A Language for Design and Verification of Autonomous Cyber-Physical Systems\nScenic is a probabilistic programming language for the design and verification of autonomous cyber-physical systems like self-driving cars. Scenic allows users to define scenarios for testing or training their system by putting a probability distribution on the system’s environment: the positions, orientations, and other properties of objects and agents, as well as their behaviors over time.\nDaniel Fremont\nSeam: Kubernetes-Aware Programmable Networking & Cloud Provisioning\nSeam is a project focused on building a Kubernetes-aware programmable networking and cloud provisioning system. It combines Python, Kubernetes, P4 programming, and SmartNICs to create a robust framework for managing cloud resources, optimizing networking, and provisioning virtual machines.\nMohammad Firas Sada\nSmart Batching for Large Language Models\nSequence tokenization is a crucial step during Large Language Model training, fine-tuning, and inference. User prompts and training data are tokenized and zero-padded before being fed to the model in batches.\nDaniel Wong, Luanzheng \"Lenny\" Guo\nSmart Environments – An AI System for Reproducible Custom Computing Environments\nOverview Modern research on cloud testbeds often requires setting up specialized software environments on both virtual machines (VMs) and bare metal servers. This can be tedious and prone to error if performed manually—especially when researchers need to replicate the same environment across different hardware configurations.\nMark Powers, Michael Sherman\nStatWrap\nStatWrap is a free and open-source assistive, non-invasive discovery and inventory tool to document research projects. It inventories project assets (e.g., code files, data files, manuscripts, documentation) and organizes information without additional input from the user.\nLuke Rasmussen\nTowards High Performance NCCL-enabled 2D partitioned PyLops-MPI library\nProject Description PyLops ecosystem designed to enable large-scale, distributed-memory computations for matrix-free inverse problems. PyLops has achieved more than 400 stars till now. PyLops-MPI is an extension of the PyLops. It can be widely used in scientific computation problems.\nYuxi Hong, Matteo Ravasi, Nan Ding\nType Narrowing: A Language Design Benchmark\nUntyped languages such as JavaScript and Python provide a flexible starting point for software projects, but eventually, the lack of reliable types makes code hard to debug and maintain. Gradually typed languages such as TypeScript, Flow, Mypy, and Pyright address the problem with type checkers that can reason about an ever-growing subset of untyped code.\nBen Greenman\nVector Embeddings Dataset\nVector Embeddings Dataset Topics: Vector Embeddings LLMs Transformers Skills: software development, apis, scripting, python Difficulty: Moderate Size: Medium or Large (175 or 350 hours) Mentors: Jayjeet Chakraborty To benchmark vector search algorithms (aka ANN algorithms), there are several datasets available but none of them represent actual real world workloads.\njayjeetc\nWaDAR\nWaDAR (Water Radar) is an innovative, low-cost, hybrid approach to soil moisture sensing that combines the benefits of in-ground (in situ) and remote sensing technologies. Traditional soil moisture measurement methods suffer from drawbacks: in situ sensors are expensive and difficult to maintain, while remote sensing offers lower accuracy and resolution.\nColleen Josephson, Eric Vetha\nWidgets for Python-chi in Jupyter\nOverview As cloud researchers often work with Jupyter Notebooks for interactive data analysis and experimentation, the python-chi library offers a powerful way to automate and control resources on Chameleon Cloud. This project will extend python-chi by adding interactive widgets specifically designed for use in Jupyter, empowering users to launch, monitor, and manage their experiments without leaving the notebook environment.\nMark Powers, Michael Sherman\nWildBerryEye\nWildBerryEye leverages Raspberry Pi and YOLO object detection models to monitor pollinizers like bees and hummingbirds visiting flowers. This initiative aims to enhance environmental research by automating data collection and analysis of pollinator activities, which are crucial for ecological assessments and conservation efforts.\nCarlos Isaac Espinosa Ramirez\nProject Topics\n\nAcross all years\n\nagrotech AI AI AI for education analytics API design application development ar/vr artifact asicdesign autonomous vehicles backend benchmarking bioinformatics biology Bottleneck Analysis browser bug analysis C++ causeway Chameleon checkpoint chemistry chip design cloud cloud computing compression COMPSs computational pathology computational storage computer systems congestion control contributing coordination protocols csharp cyber security data analysis Data augmentation data management data science data streaming data visualization databases debugging disentanglement Distributed Algorithms distributed system distributed systems diversity and inclusion DNN DNN training documentation dweb ecology edge education educational technologies embeddings energy erasure coding events FABRIC failure characterization Fairness in AI FasTensor formal methods frontend genai generation generative models genomics GNN GPU gsco24 gsoc24 hardware design agents HDL high performance computing High Performance Computing (HPC) hpc I/O image editing Image Processing KALLM key-value key-value stores Kolmogorov-Arnold Networks kubernetes laboratory automation lanl large models Lawrence Berkeley National Lab LBL LBNL linear algebra llm llm llms load testing local-first machine learning machinelearning metadata ml MPI Multimodal navigation aid networking networks newcomers nyu openroad operating systems OS ospo osre osre2024 osre22 osre23 osre24 osre25 osss p2p performance performance analysis performance benchmarks Performance Modeling PNNL polyphy probabilistic programming programmable storage programming languages provenance PyLops-MPI python RAG Recommender reproducibility resource management RO-Crate robotics sc24 scalability scheduling scientfic computing scientific visualization scientific workflow scheduling Scientific Workflows sdsc Search sensor development SLICES-RI smartnics smollm2 software development software packaging sor spatial transcriptomics statwrap storage storage system storage systems Streaming Processing students sustainability systems architecture TCP teaching teaching tools tech4good tensor processing testbeds Transformers types uc ucospo ucsc ucsd UI UX vector video analytic video analytics visualization visually impaired people VR web development website design webXR wireless sensing World model\nAdministration\nStephanie Lieggi\nExecutive Director of OSPO, Executive Director of CROSS, UC Santa Cruz\nOpen Source Program Office\nUC Santa Cruz\nUniversity of California Mentors\nStephanie Lieggi\nExecutive Director of OSPO, Executive Director of CROSS, UC Santa Cruz\nDaniel Wong\nAssociate Professor of Electrical and Computer Engineering\nLuanzheng \"Lenny\" Guo\nComputer Scientist, Pacific Northwest National Laboratory\nAkhilesh Thite\nMasters’ student at the University of California, Santa Cruz | Founder, P2P Labs\nAbel Souza\nAssistant Professor at UC Santa Cruz\nCarlos Isaac Espinosa Ramirez\nPhD Candidate, UC Santa Cruz\nJean Luca Bez\nResearch Scientist, Lawrence Berkeley National Laboratory\nSuren Byna\nProfessor, The Ohio State University\nDaniel Fremont\nAssistant Professor, Computer Science and Engineering, UC Santa Cruz\nJose Renau\nProfessor of Computer Science & Engineering, Department Chair\nNan Ding\nResearch Scientist, Lawrence Berkeley National Laboratory\nYuxi Hong\nPostdoctoral Researcher, Lawrence Berkeley National Laboratory\nXi Li\nPh.D. Candidate, University of California, Irvine\nEriq Augustine\nPostdoctoral Researcher, LINQS Lab, UC Santa Cruz\nBin Dong\nResearch Scientist, Lawrence Berkeley National Laboratory\nLinsey Pang\nPrincipal Applied Scientist, Salesforce\nColleen Josephson\nAssistant Professor at UC Santa Cruz\nEric Vetha\nGraduate Student Researcher, University of California Santa Cruz\nMohammad Firas Sada\nResearcher, UC San Diego, and Lead for the SEAM project\nKiran Deol\nUndergraduate at the University of Alberta\nOskar Elek\nOSPO Incubator Fellow, Postdoctoral Researcher, UC Santa Cruz\nDavid Lee\nAssistant Professor, UC Santa Cruz\nArthur Koucher\nR&D Engineer Precision Innovations\nEder Monteiro\nR&D Engineer Precision Innovations\nJack Luar\nIndividual Contributor\nMatt Liberty\nVP R&D Precision Innovations & Visiting Scholar UCSD\nZiheng Duan\nPh.D. Candidate, University of California, Irvine\nEmily Lovell\nOSPO Incubator Fellow, UC Santa Cruz\nJohn Wu\nSenior Computer Scientist, Lawrence Berkeley National Laboratory\nPalaniappan R\nStudent at Birla Institute of Technology and Sciences, Pilani\nLeilani H. Gilpin\nAssistant Professor, UC Santa Cruz\nDustin Richmond\nAssistant Professor of Computer Science & Engineering at UC Santa Cruz\nTyler Sheaves\nPhD Student at UC Davis\nSakshi Garg\nPh.D. Student, UC Santa Cruz\nAustin Rovinski\nAssistant Professor, New York University\nIndira Iyer\nHead of Customer Success and Outreach\nVitor Bandeira\nCloud and DevOps Architect at Precision Innovations & Visiting Scholar UCSD & PhD Candidate UFRGS\nHoujun Tang\nComputer Research Scientist, Lawrence Berkeley National Laboratory\nJesse Cirimelli-Low\nPh.D. Student, UC Santa Cruz\nCindy Rubio González\nAssociate Professor, UC Davis\nHao-Nan Zhu\nPh.D. Student, University of California, Davis\nDan Bryce\nFellow, Smart Information Flow Technologies, LLC.\nTim Fallon\nPostdoctoral Fellow, University of California, San Diego\nAldrin Montana\nPhD Student, UC Santa Cruz\nAugusto Berndt\nR&D Engineer Precision Innovations\nEric Vin\nPhD Student, Computer Science and Engineering, UC Santa Cruz\nEthan Mahintorabi\nSoftware Engineer\nFarzaneh Rabiei Kashanaki\nPh.D. Student, UC Santa Cruz\nOsama Hammad\nSenior Software Engineer\nPeter Gadfort\nDirector of Silicon Engineering\nSummer of Reproducibility Mentors\nLuanzheng \"Lenny\" Guo\nComputer Scientist, Pacific Northwest National Laboratory\nWei Zhang\nPostdoctoral Researcher, Lawrence Berkeley National Laboratory\nKate Keahey\nScientist at the Argonne National Laboratory and Senior Fellow at the Computation Institute at the University of Chicago\nMark Powers\nResearch Software Engineer at the University of Chicago\nMichael Sherman\nResearch Software Engineer at the University of Chicago\nFlavio Castro\nSystems Developer, Argonne National Laboratory\nJoaquin Chung\nResearch Scientist, Argonne National Laboratory\nSai Suman Lamba Karanam\nPhD Candidate, University of Nebraska-Lincoln\nZahmeeth Sakkaff\nAsst. Professor, West Virginia Tech and West Virginia University\nIn Kee Kim\nAssociate Professor, University of Georgia\nLuke Rasmussen\nSenior Clinical Research Associate, Northwestern University\nLinsey Pang\nPrincipal Applied Scientist, Salesforce\nBen Greenman\nPI at the University of Utah\nRaül Sirvent\nEstablished Researcher, Barcelona Supercomputing Center\nKexin Pei\nNeubauer Family Assistant Professor of Computer Science, University of Chicago\nRuidan Li\nPh.D. Student, University of Chicago\nTanu Malik\nAssociate Professor for Databases, High Performance and Scientific Computing, Systems Development\nAnjus George\nHPC Storage R&D staff, Oak Ridge National Laboratory\nMeng Wang\nPhD Student, University of Chicago\nSwami Sundararaman\nSenior Manager, IBM\nYuyang (Roy) Huang\nPh.D. Student, University of Chicago\nSascha Hunold\nAssociate Professor, Technical University of Vienna\nAyse Coskun\nInterim Associate Dean for Research and Faculty Development, Professor (ECE, SE); Director, Center for Information and Systems\nAshutosh Srivastava\nPhD Student, NYU Tandon School of Engineering\nFraida Fund\nResearch Assistant Professor, NYU Tandon School of Engineering\nBogdan \"Bo\" Stoica\nPhD Student, University of Chicago\nYang Wang\nAssociate Professor, The Ohio State University\nJohn Bent\nResearch Scientist, Los Alamos National Laboratory\nRay Andrew Sinurat\nPhD Student, University of Chicago\nSandeep Madireddy\nComputer Scientist at Argonne National Laboratory\nDavid Koop\nAssistant Professor, Northern Illinois University\nDaniar H. Kurniawan\nPh.D. Candidate, University of Chicago\nHaryadi S. Gunawi\nAssociate Professor, University of Chicago\nJunchen Jiang\nAssitant Professor, University of Chicago\nGeorg Carle\nFull Professor, Technical University of Munich\nSebastian Gallenmüller\nPostDoc, Technical University of Munich\nMiao YU\nPh.D. Student, The Ohio State University\nCindy Rubio González\nAssociate Professor, UC Davis\nHao-Nan Zhu\nPh.D. Student, University of California, Davis\nJoão Felipe Pimentel\nPostdoctoral Researcher, Northern Arizona University\nJuliana Freire\nProfessor of Computer Science and Engineering and Data Science at NYU\nDan Bryce\nFellow, Smart Information Flow Technologies, LLC.\nTim Fallon\nPostdoctoral Fellow, University of California, San Diego\nVijay Chidambaram\nAssociate Professor, The University of Texas at Austin\nAnjo Vahldiek-Oberwagner\nResearch Scientist, Intel Labs\nYeonju Ro\nPh.D. Student, The University of Texas at Austin\n\n© 2025 Regents of the University of California. This work is licensed under CC BY 4.0\n\n \n\nPublished with Wowchemy — the free, open source website builder that empowers creators.\n"}