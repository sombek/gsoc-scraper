{"name":"Accord Project","description":"Open source software for smart legal contracts","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/accord-project","ideas_url":"https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List","logo":"https://summerofcode.withgoogle.com/media/org/accord-project/1q3vpch01xpsriu9-360.png","technologies":["python","javascript","json","react","artificial intelligence"],"topics":["natural language processing","data modeling","legal technology","contract management","document assembly"],"projects":[{"project_name":"Linter for Concerto","summary":"Develop a TypeScript linter for Concerto source files that enforces specific syntax and structure rules.","difficulty":"Medium"},{"project_name":"Decorator Command Set JSON<->YAML Convertor","summary":"Create a tool for converting verbose Decorator Command Set JSON to a more readable YAML format and vice-versa.","difficulty":"Medium"},{"project_name":"Accord Project Agreement Protocol","summary":"Update the Accord Project Agreement Protocol with a new Open API specification and implementation to enhance document and contract management features.","difficulty":"Medium"},{"project_name":"Specification Conformance Tests","summary":"Overhaul specification conformance testing by migrating to a more robust framework and creating a dedicated package for validating Concerto.","difficulty":"Medium"},{"project_name":"Incorporating AI into Template Playground","summary":"Enhance the Template Playground by integrating AI features for easier contract template creation, editing, and previewing.","difficulty":"Medium"},{"project_name":"Testing for Code Generation Targets","summary":"Implement a testing framework for validating generated code across multiple programming languages using Docker images in CI/CD pipelines.","difficulty":"Medium"},{"project_name":"Migration of Template Playground to use Tailwind CSS","summary":"Migrate the Template Playground application to Tailwind CSS to improve performance, maintainability, and user experience.","difficulty":"Medium"},{"project_name":"Linter for Concerto","summary":"Develop a TypeScript linter for Concerto Source files to validate DSL syntax and JSON AST against configurable rules.","difficulty":"Medium"},{"project_name":"Decorator Command Set JSON<->YAML Convertor","summary":"Create a converter to transform Decorator Command Sets from verbose JSON format to a more readable YAML format and vice versa.","difficulty":"Medium"},{"project_name":"Accord Project Agreement Protocol (APAP)","summary":"Update the APAP for better integration between document generation engines and agreement servers, including Open API specification updates.","difficulty":"Medium"},{"project_name":"Specification Conformance Tests","summary":"Overhaul the specification conformance testing by migrating to a robust test framework to assess Concerto implementations against the specification.","difficulty":"Medium"},{"project_name":"Incorporating AI into Template Playground","summary":"Enhance the Template Playground web application by integrating AI features to ease the creation and editing of contract templates.","difficulty":"Medium"},{"project_name":"Testing for Code Generation Targets","summary":"Implement a testing mechanism for generated code across multiple languages to ensure correctness through compilation and execution.","difficulty":"Medium"},{"project_name":"Migration of Template Playground to use Tailwind CSS","summary":"Improve the Template Playground's UI performance and maintainability by migrating to the Tailwind CSS framework.","difficulty":"Medium"}],"jina_response":"Title: Google Summer of Code 2025 Ideas List\n\nURL Source: https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List\n\nMarkdown Content:\n1\\. Linter for Concerto\n-----------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#1-linter-for-concerto)\n\nWrite a linter in TypeScript for Concerto Source files. It should make use of existing functionality to validate the Concerto DSL syntax and JSON AST of Concerto model against a set of rules. Rules should be defined in Typescript and which rules are run should be configurable. You may be able to make use of a tool like [Spectral](https://github.com/stoplightio/spectral) as the framework for defining our own rules over the Concerto AST (JSON).\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes)\n\nA tool that allow users to:\n\n*   Specify the naming of declarations. E.g. all names of scalars should be in camel case.\n*   Specify the naming of properties, enum cases e.t.c\n*   Specify which language features can be used. E.g. disallow maps, disallow forward references in regex validators.\n*   Enforce the use of certain features. E.g. all string properties should have a length validator.\n*   Enforce the use of @Term decorators on all declarations and properties e.t.c\n*   All concepts in a namespace should extend a given concept\n*   All concepts in a namespace must have unique names across multiple namespaces\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred)\n\nAlgorithms, Functional programming, Back end development, NodeJS, TypeScript\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors)\n\nJamie Shorten, Sanket Shevkar\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project)\n\n175 hours (medium)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty)\n\nMedium\n\n2\\. Decorator Command Set JSON<\\-\\>YAML Convertor\n-------------------------------------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#2-decorator-command-set-json-yaml-convertor)\n\nDesign and implement a convertor that would convert Decorator Command Sets JSON Objects to a much more human readable YAML format and vice-versa. Currently DCS JSON objects are very verbose to read, write and edit. With the new custom YAML format we aim to make DCS objects much more easier to read, write and edit.\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes-1)\n\n*   A utility/method in DecoratorManager to convert DCS JSON to YAML and from YAML to JSON.\n*   1:1 conversion is not expected. YAML should have a custom format that is less verbose and more readable.\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred-1)\n\nNodeJS, Typescript, Javascript, Basic understanding of Data Formats like JSON and YAML\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors-1)\n\nSanket Shevkar\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project-1)\n\n175 hours (medium)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty-1)\n\nMedium\n\n3\\. Accord Project Agreement Protocol\n-------------------------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#3-accord-project-agreement-protocol)\n\nThe [Accord Project Agreement Protocol](https://github.com/accordproject/apap) (APAP) defines the protocol used between a document generation engine or contract management platform and an agreement server that provides agreement features like template management, document generation, format conversion etc.\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes-2)\n\n*   Updated Open API specification\n*   Updated reference implementation for the specification\n*   Address (some of) open issues\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred-2)\n\nNodeJS, Typescript, Javascript, REST API design\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors-2)\n\nDan Selman, Niall Roche\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project-2)\n\n350 hours (large)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty-2)\n\nMedium\n\n4\\. Specification Conformance Tests\n-----------------------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#4-specification-conformance-tests)\n\nOur specification conformance testing is in need of an overhaul! We'd like to migrate to a robust, proven testing framework like [Vitest](https://vitest.dev/guide/comparisons.html) which would support ESM, and be performant and have a new dedicated concerto package used for Concerto conformance testing. An AI tool may be useful in helping with the migration, so feel free to mention how AI could help you with this project! The goal is to have a set of tests that can be run against any Concerto implementation to assess whether it is conformant with the specification.\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes-3)\n\n*   Migration to Vitest (or other appropriate framework)\n*   Consolidation of testing methodology and tooling\n*   New concerto package for tests, focused on conformance\n*   Build a set of tests for the [Concerto validation rules](https://github.com/accordproject/concerto/issues/819)\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred-3)\n\n*   Node / Javascript\n*   Unit testing (Mocha / Jest for example)\n*   Behaviour driven testing (optional, Cucumber, for example)\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors-3)\n\nDan Selman, Ertugrul Karademir\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project-3)\n\n175 hours (medium)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty-3)\n\nMedium\n\n5\\. Incorporating AI into Template Playground\n---------------------------------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#5-incorporating-ai-into-template-playground)\n\nOur [Template Playground](https://playground.accordproject.org/) web application is used to help onboard users to our technologies. We'd love to make this even easier by adding AI features to make it easier to create, edit, and preview contract templates. This project will build upon the work that was [carried out last year](https://accordproject.org/news/gsoc-2024-model-creation-ai-assistant-co-pilot/) in the context of VS Code.\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes-4)\n\n*   Allow users to upload a file and we'd use AI to convert it to an Accord Project template\n*   Possibly incorporate auto-complete suggestions when editing using the code editors built into the web app\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred-4)\n\nReactJS, AI tooling\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors-4)\n\nDiana Lease\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project-4)\n\n350 hours (large)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty-4)\n\nMedium\n\n6\\. Testing for Code Generation Targets\n---------------------------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#6-testing-for-code-generation-targets)\n\nWe have tools that allow users to generate code from their Concerto models, supporting [several languages](https://concerto.accordproject.org/docs/category/code-generation). We would like to introduce a way of testing this code generation that compiles code for each language we are generating.\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes-5)\n\n*   Set of Docker images for each code generation target\n*   Run code gen tests within the correct image using GitHub actions, for example, generate Java code and then compile and run it using `javac` to ensure the generated code is correct\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred-5)\n\n*   Systems engineering, CI/CD\n*   Docker, Docker compose\n*   GitHub actions\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors-5)\n\nDan Selman, Ertugrul Karademir\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project-5)\n\n175 hours (medium)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty-5)\n\nMedium\n\n7\\. Migration of Template Playground to use Tailwind CSS\n--------------------------------------------------------\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#7-migration-of-template-playground-to-use-tailwind-css)\n\nAs mentioned previously, our [Template Playground](https://playground.accordproject.org/) web application is used to help onboard users to our technologies. By using a popular, well-maintained CSS framework like Tailwind, we could improve performance and code maintainability.\n\n#### Expected Outcomes:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-outcomes-6)\n\n*   Template Playground updated to use Tailwind CSS\n*   Existing UI tests updated\n*   Possibly other UI changes to make user experience better, more performant, and/or optimized for multiple screen sizes\n\n#### Skills required/preferred:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#skills-requiredpreferred-6)\n\nReactJS, Tailwind CSS\n\n#### Possible Mentors:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#possible-mentors-6)\n\nDiana Lease\n\n#### Expected size of project:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-size-of-project-6)\n\n175 hours (medium) - 350 hours (large)\n\n#### Expected difficulty:\n\n[](https://github.com/accordproject/techdocs/wiki/Google-Summer-of-Code-2025-Ideas-List#expected-difficulty-6)\n\nMedium\n"}