{"name":"ArduPilot","description":"World's most advanced autonomous vehicle software","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/ardupilot","ideas_url":"https://ardupilot.org/dev/docs/gsoc-ideas-list.html","logo":"https://summerofcode.withgoogle.com/media/org/ardupilot/oveqvcxkpgkuv8wq-360.png","technologies":["python","lua","c++","pixhawk"],"topics":["robotics","ai","Drone","autonomous vehicle","unmanned vehicle"],"projects":[{"project_name":"Non-GPS Position Estimation Using 3D Camera and Pre-Generated Map","summary":"Develop a system to estimate local position using a 3D camera comparing its point cloud to a pre-generated map.","difficulty":"Hard"},{"project_name":"AI Chat WebTool for use with MP and/or QGC","summary":"Create a web tool that translates pilot's verbal commands into MAVLink to control a multicopter.","difficulty":"Medium"},{"project_name":"AI Chat Integration with all WebTools","summary":"Integrate an AI chat assistant into existing ArduPilot WebTools to assist users with queries and operations.","difficulty":"Medium"},{"project_name":"Gazebo Plug-in Model of a Motor","summary":"Model the electromechanical properties of a motor within the ArduPilot Gazebo plugin for simulation purposes.","difficulty":"Medium"},{"project_name":"SITL AI Reinforcement Learning Concept Script","summary":"Develop a Lua script that automates parameter changes in simulation using reinforcement learning techniques.","difficulty":"Medium"},{"project_name":"SITL Test Script for Controls Testing","summary":"Create a simplified test script for setting up a vehicle in SITL for controls testing, targeting beginners.","difficulty":"Medium"}],"jina_response":"Title: List of Suggested Projects for GSoC 2025 — Dev documentation\n\nURL Source: https://ardupilot.org/dev/docs/gsoc-ideas-list.html\n\nMarkdown Content:\nThis is a list of projects suggested by ArduPilot developers for [GSoC 2025](https://summerofcode.withgoogle.com/). These are only suggestions so if you have your own ideas then please discuss them on the [ArduPilot Discord Chat](https://ardupilot.org/discord) or on the [discuss server here](https://discuss.ardupilot.org/c/google-summer-of-code)\n\n*   Non-GPS Position Estimation Using 3D Camera and Pre-Generated Map\n    \n*   AI Chat WebTool for use with MP and/or QGC\n    \n*   AI Chat Integration with all Web Tools\n    \n*   Gazebo Plug-in Model of a Motor\n    \n*   SITL AI Reinforcement Learning Concept Script\n    \n*   SITL Test Script for Controls Testing\n    \n\nSee lower down on this page for more details on each project\n\nTimeline[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#timeline \"Link to this heading\")\n------------------------------------------------------------------------------------------------\n\nThe timeline for [GSoC 2025 is here](https://developers.google.com/open-source/gsoc/timeline)\n\nHow to improve your chances of being accepted[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#how-to-improve-your-chances-of-being-accepted \"Link to this heading\")\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nWhen making the difficult decision about which students to accept, we look for:\n\n*   Clear and detailed application explaining how you think the project could be done\n    \n*   Relevant prior experience\n    \n*   Experience contributing to ArduPilot or other open source projects\n    \n*   Understanding of Git and/or GitHub\n    \n\n### Non-GPS Position Estimation Using 3D Camera and Pre-Generated Map[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#non-gps-position-estimation-using-3d-camera-and-pre-generated-map \"Link to this heading\")\n\n*   Skills required: Python, C++\n    \n*   Mentor: Randy Mackay\n    \n*   Expected Size: 175h\n    \n*   Level of Difficulty: Hard\n    \n*   Expected Outcome: Copter with low-cost 3D camera estimates its local position by comparing the camera point cloud to a pre-generated 3D map\n    \n\nThe goal of this project is to allow a Copter to estimate its local position using a low-cost 3D camera (e.g. Intel D465) by comparing the camera’s point cloud to a pre-generated 3D map. The steps involved include:\n\n*   Create a tool to capture a 3D map of the flight area. The resulting map should be loaded onto the vehicle’s companion computer (e.g. RPI5)\n    \n*   Mount a low-cost 3D camera (e.g. Intel D465) onto an ArduPilot copter (e.g. EDU650 or similar) equipped with a companion computer\n    \n*   Write localisation software (e.g. python code) to compare the output of the 3D camera to the pre-generated 3D map and send the estimated position to the vehicle’s EKF (see [Non-GPS Position Estimation](https://ardupilot.org/dev/docs/mavlink-nongps-position-estimation.html#mavlink-nongps-position-estimation))\n    \n*   Implement a simulator of the system (e.g. gazebo)\n    \n*   Document the setup and operation for future developers and users\n    \n\nFunding will be provided for hardware including a copter (e.g. Hexsoon EDU650), companion computer and 3D camera (e.g. Intel D465) if necessary\n\n### AI Chat WebTool for use with MP and/or QGC[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#ai-chat-webtool-for-use-with-mp-and-or-qgc \"Link to this heading\")\n\n*   Skills required: JavaScript, OpenAI, Google Gemini\n    \n*   Mentor: Randy Mackay\n    \n*   Expected Size: 175h\n    \n*   Level of Difficulty: Medium\n    \n*   Expected Outcome: Web tool capable following a pilot’s verbal commands and converting them to MAVLink in order to control an ArduPilot multicopter\n    \n\nThis project involves re-implementing the [MAVProxy’s AI chat module](https://ardupilot.org/mavproxy/docs/modules/chat.html) ([see blog here](https://discuss.ardupilot.org/t/ardupilot-openais-chatgpt-using-mavproxys-chat-module/111336)) to run as a [WebTool](https://firmware.ardupilot.org/Tools/WebTools/)\n\nOnce complete the WebTool should be capable of:\n\n*   Connecting to the vehicle via Mission Planner or QGC\n    \n*   Responding to verbal or written questions and commands from the pilot\n    \n*   Arming the vehicle\n    \n*   Issuing takeoff commands and flying the vehicle a specified distance in any direction\n    \n*   Changing the vehicle’s flight mode\n    \n\nMost of the development can be completed using the [SITL simulator](https://ardupilot.org/dev/docs/sitl-simulator-software-in-the-loop.html#sitl-simulator-software-in-the-loop) and any OpenAI or Google Gemini usage costs will be covered\n\n### AI Chat Integration with all WebTools[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#ai-chat-integration-with-all-webtools \"Link to this heading\")\n\n*   Skills required: JavaScript, OpenAI, Google Gemini\n    \n*   Mentor: Randy Mackay\n    \n*   Expected Size: 175h\n    \n*   Level of Difficulty: Medium\n    \n*   Expected Outcome: All WebTools include AI chat to help users understand and use the tool\n    \n\nThis project involves adding an OpenAI or Google Gemini chat window into some or all of the [ArduPilot Webtools](https://firmware.ardupilot.org/Tools/WebTools/)\n\nOnce complete some or all of the WebTools should:\n\n*   Include a new chat widget allowing users to ask an AI assistant questions about the tool using text or voice\n    \n*   Allow the AI assistant to operate the tool based on user input (e.g. push buttons, change zoom of graphs, etc)\n    \n\nThe top priority WebTool is the “UAV Log viewer” although simpler tools like the “Hardware Report” could be a good starting point\n\nMost of the development can be completed using the [SITL simulator](https://ardupilot.org/dev/docs/sitl-simulator-software-in-the-loop.html#sitl-simulator-software-in-the-loop) and any OpenAI or Google Gemini usage costs will be covered\n\n### Gazebo Plug-in Model of a Motor[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#gazebo-plug-in-model-of-a-motor \"Link to this heading\")\n\n*   Skills required: Gazebo, C++\n    \n*   Mentor: Nate Mailhot\n    \n*   Expected Size: 175h\n    \n*   Level of Difficulty: Medium\n    \n*   Expected Outcome: ArduPilot Gazebo plugin simulates a Motor\n    \n\nAs part of the ArduPilot\\_Gazebo plugin, we ask a student to model the electromechanical properties of a motor (no thrust/aero, just the motor angular acceleration/power itself)\n\n### SITL AI Reinforcement Learning Concept Script[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#sitl-ai-reinforcement-learning-concept-script \"Link to this heading\")\n\n*   Skills required: Gaazebo, Lua, AI\n    \n*   Mentor: Nate Mailhot\n    \n*   Expected Size: 175h\n    \n*   Level of Difficulty: Medium\n    \n*   Expected Outcome: Lua script that uses re-inforcement learning to automate changing some parameters\n    \n\nAn AP-SITL reinforcement learning script concept, focuses on using Lua applets or some python to automate parameter changes according to some basic implementation of online reinforcement learning (actor-critic/SARSA/Q-learning)\n\n### SITL Test Script for Controls Testing[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#sitl-test-script-for-controls-testing \"Link to this heading\")\n\n*   Skills required: Gaazebo, Python\n    \n*   Mentor: Nate Mailhot\n    \n*   Expected Size: 175h\n    \n*   Level of Difficulty: Medium\n    \n*   Expected Outcome: Python code that allows easily setting up an AP vehicle in SITL for controls testing\n    \n\nA safe “for education/rookies” SITL test script that strips away the majority of complexity in set-up and gives a Copter (and Plane if time permits) that requires some basic tuning and gives hints/pointers in a UI (this could lower the threshold for earlier year mech/electrical engineers to get their hands dirty on some software and try out basic controls testing)\n\n### Projects Completed in past years[¶](https://ardupilot.org/dev/docs/gsoc-ideas-list.html#projects-completed-in-past-years \"Link to this heading\")\n\nIn 2024, students completed the following projects:\n\n*   [Visual Follow-Me](https://discuss.ardupilot.org/t/gsoc-2024-wrapping-up-visual-follow-me/123232)\n    \n*   [High Altitude Non-GPS Navigation](https://discuss.ardupilot.org/t/gsoc-2024-wrapping-up-high-altitude-non-gps-navigation/122905)\n    \n*   [MAVProxy AI Chat Enhancements](https://discuss.ardupilot.org/t/gsoc-2024-wrapping-up-mavproxy-ai-chat-enhancements/122793)\n    \n*   [All-in-One System Identification Toolkit](https://discuss.ardupilot.org/t/gsoc24-all-in-one-system-identification-toolkit-for-ardupilot-update/121116)\n    \n\nIn 2023, students completed the following projects:\n\n*   [Improvements for ROS2 Support for Ardupilot](https://discuss.ardupilot.org/t/gsoc-23-wrapping-up-improvements-to-the-native-dds-support-in-ardupilot/105643)\n    \n*   [Camera and Gimbal enhancements](https://discuss.ardupilot.org/t/gsoc-2023-wrapping-up-camera-and-gimbal-enhancements/105600)\n    \n*   [GPS-Denied Autonomous Exploration with ROS 2](https://discuss.ardupilot.org/t/gsoc-2023-gps-denied-autonomous-exploration-with-ros-2/101121)\n    \n*   [MultiCopter Swarm Avoidance](https://discuss.ardupilot.org/t/gsoc-2023-multicopter-swarm-avoidance/102108)\n    \n\nIn 2022, students worked on these projects:\n\n*   [Rover autonomous docking](https://discuss.ardupilot.org/t/gsoc-2022-rover-autodocking-conclusion/90626)\n    \n*   [ROS integration for Non-GPS navigation and off-board path-planning](https://discuss.ardupilot.org/t/gsoc-2022-update-ros-integration-for-non-gps-navigation-and-off-board-path-planning/86948)\n    \n*   [Boat object avoidance with Luxonis AI camera](https://discuss.ardupilot.org/t/gsoc-2022-boat-object-avoidance-with-luxonis-ai-camera/91257)\n    \n\nIn 2019, students successfully completed these projects:\n\n*   AirSim Simulator Support for ArduPilot SITL\n    \n*   Development of Autonomous Autorotations for Traditional Helicopters\n    \n*   Further Development of Rover Sailboat Support\n    \n*   Integration of ArduPilot and VIO tracking camera for GPS-less localization and navigation\n    \n*   MAVProxy GUI and module development\n    \n\nIn 2018, students successfully completed these projects:\n\n*   [BalanceBot](https://ardupilot.org/rover/docs/balance_bot-home.html)\n    \n*   RedTail integration with ArduPilot\n    \n*   Live video improvements for APSync\n    \n\nIn 2017, 3 students successfully completed these projects:\n\n*   Smart Return-To-Launch which involves storing the vehicle’s current location and maintaining the shortest possible safe path back home\n    \n*   Rework ArduRover architecture to allow more configurations and rover type ([see details here](https://github.com/khancyr/GSOC-2017))\n    \n*   Add “sensor head” operation of ArduPilot, split between two CPUs\n"}