{"name":"Open Technologies Alliance - GFOSS","description":"Promote Open Standards and Open Source","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/open-technologies-alliance-gfoss","ideas_url":"https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas","logo":"https://summerofcode.withgoogle.com/media/org/open-technologies-alliance-gfoss/kiyijull8pfdypve-360.png","technologies":["javascript","c/c++","nodejs","python 3","Machine Learning (ML)"],"topics":["web","robotics","open hardware","c++","Artificial Inteligence"],"projects":[{"project_name":"Expanding HassIO smart home capabilities via low-code automation development","summary":"This project aims to enhance SmAuto, a low-code automation development platform for smart homes, by adding features such as REST protocol support, new nodes for user-defined tasks, and integration with Home Assistant for graphical automation design.","difficulty":"Medium"},{"project_name":"A Tool for Visualizing the Arguments, Sentiments and User Interactions of Online Discussions","summary":"The goal is to create an open-source visualization tool that analyzes online discussions by summarizing topics, arguments, and sentiments, enhancing understanding and accessibility of complex dialogues across various platforms.","difficulty":"Large"},{"project_name":"PersonalAIs: Generative AI Agent for Personalized Music Recommendations","summary":"This project focuses on developing an AI-powered music recommendation agent that interacts using natural language, assesses user emotions, and adjusts playlists in real-time by integrating with the Spotify API.","difficulty":"Medium"},{"project_name":"OpenRF 3D","summary":"This initiative looks to connect NVIDIA Sionna’s 6G simulation framework with Cesium’s 3D geospatial engine to analyze wireless networks in real-time, enhancing visualization and performance evaluation in different terrains.","difficulty":"Large"},{"project_name":"Exploring and Abstracting Triplestore Alternatives","summary":"The objective is to analyze various triplestore databases, conduct benchmarks, and create an abstraction layer that allows seamless integration of different triplestore technologies in applications.","difficulty":"Medium"},{"project_name":"Flexible GovDoc Scanner","summary":"This tool aims to create a system that crawls public incorporation documents from Greece, extracts essential information using AI and OCR, and provides it through a searchable REST API.","difficulty":"Large"},{"project_name":"Extending the capabilities of OpenTRIM","summary":"This project intends to enhance OpenTRIM, a code for simulating ions' passage through materials, by adding features for new simulation capabilities and visualization tools for better data interpretation.","difficulty":"Large"},{"project_name":"Cleaning of HPLT Greek v2 Dataset for GlossApi LLM","summary":"This task involves cleaning and normalizing the Greek dataset for the GlossApi project, ensuring the output consists of grammatically correct and complete sentences for effective language model training.","difficulty":"Medium"},{"project_name":"Add SAML and OpenID Connect support to Consul Democracy","summary":"The aim is to integrate SAML and OpenID Connect protocols into the Consul Democracy platform to facilitate secure authentication, allowing different institutions to easily implement their existing authentication setups.","difficulty":"Medium"},{"project_name":"Docker for Consul Democracy citizen participation platform","summary":"This project seeks to enable easy installation and deployment of Consul Democracy using Docker, simplifying accessibility for institutions using different server setups.","difficulty":"Medium"},{"project_name":"Εxtending the apothesis factory pattern for seamless 2D and 3D lattice integration","summary":"The goal is to expand the factory pattern used in the Apothesis simulation software to support more complex 2D and 3D lattice structures, improving user-defined lattice integration for research purposes.","difficulty":"Large"},{"project_name":"Identifying transition points in the ZGB model using convolutional neural networks (CNNs)","summary":"This research aims to predict transition points in the ZGB model of catalytic processes using CNNs trained on data from kinetic Monte Carlo simulations, enhancing the understanding of catalytic mechanisms.","difficulty":"Large"},{"project_name":"MyUni","summary":"The project focuses on developing a customizable university application that provides a backend for real-time information delivery, student data management, and a user-friendly interface for educational institutions.","difficulty":"Large"},{"project_name":"GlossAPI","summary":"This initiative seeks to create an open-source corpus of the Greek language to enhance language models' performance, aiming for representation across various domains in Greek, thus supporting the local tech ecosystem.","difficulty":"Large"},{"project_name":"DIY IoT Physics Experiments for education","summary":"The goal is to create remote physics experiments using DIY IoT technology, enabling students to conduct experiments from anywhere, enhanced with 3D digital twin representations for educational clarity.","difficulty":"Medium"},{"project_name":"eCodeOrama, an educational interactive flow visualization tool for mit scratch programs","summary":"This project aims to develop a tool that visualizes and edits the flow of code within MIT Scratch programs, promoting understanding and debugging for young students through interactive layouts.","difficulty":"Medium"}],"jina_response":"Title: Google Summer of Code 2025 proposed ideas - Ελεύθερο Λογισμικό\n\nURL Source: https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas\n\nMarkdown Content:\nContributors interested to participate should check which of the following projects fits their interests and skills.\n\n**Τo communicate with the mentors and ask questions about the projects, students should subscribe to this** [list](https://lists.ellak.gr/gsoc-developers/listinfo.html) **and post relevant questions. Please follow the [Proposal Template](https://ellak.gr/wiki/index.php?title=Proposal_Template \"Proposal Template\")**\n\nFor practical information, developers should visit this **[page](https://summerofcode.withgoogle.com/how-it-works)**.\n\n**Expanding HassIO smart home capabilities via low-code automation development**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=1 \"Edit section: Expanding HassIO smart home capabilities via low-code automation development\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=1 \"Edit section: Expanding HassIO smart home capabilities via low-code automation development\")\\]\nn\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=2 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=2 \"Edit section: Brief Explanation\")\\]\n\nSmart environments are becoming quite popular in the home setting consisting of a broad range of connected devices. While offering a novel set of possibilities, this also contributes to the complexity of the environment, posing new challenges to allowing the full potential of a sensorized home to be made available to users. SmAuto, is a Domain Specific Language (DSL) that enables users to program complex automation scenarios and pipelines, for connected IoT devices in smart environments, that go beyond simple tasks. It was initially developed by the ISSEL research team (AUTH) as textual DSL and later evolved into a web-based low-code development environment. SmAuto lacks extra features like utilization of external REST data sources, time delays, semantic annotation, and accessing of in-house entities, etc., thus it should be expanded in this direction. Furthermore, HomeAssistant would benefit from the integration of a low-code approach for rapidly developing and deploying automations, using the entities existing in a smart environment.\n\n#### Expected Results\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=3 \"Edit section: Expected Results\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=3 \"Edit section: Expected Results\")\\]\n\n• In the context of this project, we desire to expand the SmAuto DSL with the following features: a) support the REST protocol, so as for the automations to be able to access information from external data sources, b) incorporate auxiliary concepts like Delay, Switches, or Compute nodes, c) SmAuto integration in HA. The integration of SmAuto and HomeAssistant should occur, by creating a new open-source HA addon, where users will be able to design and deploy automations graphically, using the SmAuto low-code environment.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=4 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=4 \"Edit section: Duration of the Project\")\\]\n\n(350 hours).\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=5 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=5 \"Edit section: Related repositories\")\\]\n\n[https://github.com/robotics-4-all/smauto](https://github.com/robotics-4-all/smauto), [https://www.home-assistant.io/](https://www.home-assistant.io/)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=6 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=6 \"Edit section: Knowledge Prerequisites\")\\]\n\n\\[Required\\]: Python, Software engineering, IoT concepts, Unix/Linux, \\[Desired\\]: Model Driven Engineering, HomeAssistant, Docker\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=7 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=7 \"Edit section: Mentors\")\\]\n\nKonstantinos Panayiotou, Emmanouil Tsardoulias, Andreas Symeonidis\n\n**A Tool for Visualizing the Arguments, Sentiments and User Interactions of Online Discussions**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=8 \"Edit section: A Tool for Visualizing the Arguments, Sentiments and User Interactions of Online Discussions\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=8 \"Edit section: A Tool for Visualizing the Arguments, Sentiments and User Interactions of Online Discussions\")\\]\nn\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=9 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=9 \"Edit section: Brief Explanation\")\\]\n\nIn recent years, the analysis and visualization of dialogue have gained prominence in fields such as computational linguistics, social sciences, and human-computer interaction. The ability to model, analyze, and visualize real-life discussions provides valuable insights into the flow of conversations, the exchange of arguments, and the sentiments conveyed. Such visualizations can improve the understanding of complex discussions, foster decision-making, and even help develop better AI systems for facilitating or mediating discussions. We are particularly interested in online text-only discussions (e.g. on platforms like Reddit).\n\nVarious tools and platforms have been developed in order to facilitate structured discussions and multi-party decision making. Kialo is an online, structured debate platform, where the use of argumentation is the central component. It allows the construction of argument maps, in the form of trees. It promotes thoughtful discussion, understanding of different viewpoints and collaborative decision-making, through visualizations of argument maps.\n\nDebategraph is another online structured debate platform, using more complex graphs, called &quot;mind-maps&quot;, where arguments are interconnected in a web-like structure. It allows an even wider choice of visualizations of relationships between ideas.\n\nDebateVis is a tool that can help non-expert users explore and analyze debate transcripts. Given a transcript, the tool produces: (a) an Interactions Graph that summarizes how often each candidate spoke overall, mentioned other candidates and discussed each topic, (b) an Annotated Transcript with automatically extracted topic labels and speaker interactions, (c) a Timeline visualization providing an overview of the debate.\n\nFinally, VisArgue is a framework proposing a range of visualizations of dialogues, including: Lexical Episode Plots (a timeline representation of the topics discussed), (b) Conversational Topic Visualizations, representing the shifting of focus of individual user on topics, (c) various statistics measuring user participation, respect, justification and accommodation, (d) Lexical Units, which are timeline representations of features such as the amount of argumentation and emotions.\n\nAlthough tools such as the above offer important functionality, there are still issues: in most cases, either the source code is not available, or integration with new projects is not seamless, or it is difficult to parameterize the output. Furthermore, the tools above focus mostly on debate, whereas we are also interested in other types of online discussions (e.g. deliberation to improve legislation bills, non-adversarial discussions for intra-company decision making).\n\nTherefore, this project’s goal is the design and implementation of an open source tool for visualizing and analyzing real-life, online, text-only discussions, exploring subjects like: topics discussed, arguments exchanged and emotions conveyed. The project will also explore how these visualizations can be leveraged for improving public understanding of contentious issues, academic discourse, and online discussion platforms.\n\n**Project Objectives / Contributions:**\n\n\\- Select, from the literature, prominent dialogue visualization approaches / ideas (e.g. styles of graph-based, or timeline-based, visualizations used) to represent various aspects of real-life online discussions and collect available libraries (not necessarily discussion-specific) that can be used to implement them (e.g. Gephi, NetworkX).\n\n\\- Explore the open-source toolkits being developed in the Archimedes project “LLM3: LLMs as mediators and moderators” to measure dialogue quality aspects (e.g., sentiment, politeness, topics, user participation) and select those that can provide useful meta-data for visualizing on-line discussions.\n\n\\- Develop a tool capable of ingesting data from real-life online discussions generating relevant meta-data (possibly by calling other toolkits) and producing the desired visualizations of the discussions.\n\n\\- Potentially, evaluate the effectiveness of the tool and its visualizations in making complex online discussions understandable to diverse audiences, such as researchers, mediators, or general users.\n\n**Project Impact:**\n\n\\- A novel, easy-to-use, open source, visualization tool (with accompanying paper) for online, text-only discussions, that can help the analysis of discussions in different settings and domains (e.g. political discourse, academic debates, or customer feedback).\n\n\\- Expand the general understanding of how visualization techniques can make debates more accessible and informative (possibly also leading to a publication).\n\n- Contribution to the Archimedes project “LLM3: LLMs as mediators and moderators” which aims to develop and evaluate LLM-based mediation agents that will actively participate in online discussions, with or without additional human mediation.\n\n**Key Types of Dialogue Visualizations:**\n\nThe project will develop and explore several types of dialogue visualizations. Some are briefly described below. The contributor will be free to propose and implement new ones.\n\n1) Timelines: they represent the chronological flow of a conversation, highlighting key moments such as topic shifts, argument introductions and emotional peaks. Possible Features: topic evolution over time, points of conflict or agreement, visual markers for significant events (e.g. emotional outbursts or resolution points).\n\n2) Argumentation Graphs: they visualize the logical structure of arguments, including claims, counterclaims and evidence. Possible Features: nodes representing arguments or claims, edges denoting relationships (e.g., support, contradiction).\n\n3) User Interaction Graphs: they map the relationships and interaction patterns between participants in the debate. Possible Features: nodes representing participants, weighted edges showing the frequency, tone, or sentiment of interactions, clusters indicating subgroups or coalitions in the dialogue.\n\n4) Sentiment Heatmaps: they analyze and visualize the emotional dynamics of a conversation. Possible Features: color-coded intensity for positive, negative, or neutral sentiments, overlay with timeline or topic visualization for richer insights.\n\n5) Topic Trees or Topic Flow Diagrams: they represent how topics are introduced, branched out, and revisited during the discussion. Possible Features: hierarchical or radial layouts for topic relationships, highlights of overlapping or transitioning topics.\n\n6) Hybrid Visualizations: by combining multiple visualization techniques.\n\nImportance of Dialogue Visualizations:\n\nDialogue visualizations, such as those presented above, can support:\n\n\\- Topic Analysis: by identifying the main topics discussed and their transitions over time, and by highlighting overlapping topics and their importance to the dialogue.\n\n\\- Argumentation Analysis: by understanding the logical flow of arguments, counterarguments, and evidence, and by identifying circular reasoning, weak arguments, or areas of agreement.\n\n\\- Sentiment Analysis: by visualizing the emotional tone of the conversation and its impact on the debate, and by examining whether certain sentiments correlate with specific topics or arguments.\n\n\\- Participant Dynamics: by mapping the influence and activity of each participant, and by analyzing interaction patterns (e.g., dominance, interruptions, alliances).\n\n**Methodology:**\n\n\\- Data Collection and Preparation:\n\nThe tool should be able to ingest data from various online debate platforms (e.g. Reddit, Kialo), from political debate transcripts, from academic discourse, as well as from debates among LLM-agents. Since the format of raw data may vary, we propose the use of the Convokit tool in order to homogenise and preprocess the data.\n\n\\- Development of Visualization Prototypes:\n\nTools/Technologies: Python (matplotlib, seaborn, Plotly), D3.js for web-based visualizations, or tools like Gephi for network analysis. Use natural language processing (NLP) libraries (e.g., spaCy, Hugging Face Transformers) for topic modeling, sentiment analysis, and argument mining, along with tools being developed at the LLM3 project of Archimedes.\n\n\\- User Feedback and Iterative Improvement:\n\nTest the outputs (visualizations) with researchers, mediators, or other stakeholders. Refine designs based on usability feedback and task-specific performance.\n\n**Evaluation**\n\nIf time allows, the contributor will contribute in evaluating the effectiveness of their dialogue visualizations, in the context of Archimedes’ LLM3 project, by using them for both real-life and LLM-generated dialogues. Their output will be measured on clarity, usability and informativeness.\n\n**Desired Profile:**\n\nWe are looking for a contributor with the following characteristics:\n\n\\- Good programming skills in Python (experience in network analysis and / or NLP is a plus).\n\n\\- Experience (and interest for) coding visual representations of concepts with libraries such as: matplotlib, seaborn, Plotly, Gephi, D3.js.\n\n\\- Interest in the subject of human interaction through dialogue (more specifically, on themes such as: argumentation, topic identification, sentiment analysis).\n\n\\- A taste for concise, elegant and efficient solutions / visualizations.\n\nThe contributor will be mentored/supported by members of the LLM3 project, the broader NLP group of Archimedes (https://archimedesai.gr/en/), as well as the NLP Group (http://nlp.cs.aueb.gr/) of the Department of Informatics, Athens University of Economics and Business.\n\n**Conclusion:**\n\nThis GSOC project aims to develop an open-source tool that will make complex, online discussions more understandable, insightful, and actionable. By capturing the topics, arguments, sentiments, and participant dynamics, it will offer a comprehensive approach to online dialogue visualization that can benefit multiple fields, from education to public policy.\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=10 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=10 \"Edit section: Related repositories\")\\]\n\n[https://sites.google.com/view/llm3/home](https://sites.google.com/view/llm3/home)\n\n#### Expected Results\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=11 \"Edit section: Expected Results\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=11 \"Edit section: Expected Results\")\\]\n\nA tool able to process real-life, text-only dialogues and produce selected visualizations capturing their essential points.\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=12 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=12 \"Edit section: Mentors\")\\]\n\nDionysios Kontarinis (denniskont@gmail.com), Ion Androutsopoulos, Ioannis Pavlopoulos\n\n**PersonalAIs: Generative AI Agent for Personalized Music Recommendations**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=13 \"Edit section: PersonalAIs: Generative AI Agent for Personalized Music Recommendations\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=13 \"Edit section: PersonalAIs: Generative AI Agent for Personalized Music Recommendations\")\\]\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=14 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=14 \"Edit section: Brief Explanation\")\\]\n\nThis project aims to develop an AI-powered agent that interacts with users in natural language to determine their emotional state and musical preferences in a conversational manner. The agent will then generate and refine music playlists accordingly. The system will integrate with the Spotify API to provide personalized recommendations based on user preferences, liked songs, and listening history. Users can opt-out of personal data usage for a more exploratory approach. The agent will also enable real-time conversational modifications to playlists, allowing users to tweak mood, energy, and genre preferences.\n\n#### Core Features & Technologies:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=15 \"Edit section: Core Features & Technologies:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=15 \"Edit section: Core Features & Technologies:\")\\]\n\n\\- Natural Language Processing (NLP): Used to determine user mood and preferences based on conversation.\n\n\\- Generative AI: Small LLM models hosted locally or accessed via an API key for dialogue generation.\n\n\\- Spotify API Integration: Authentication, playlist management, retrieval of user metadata (liked songs, playlists, etc.).\n\n\\- Frontend UI: A web-based chatbot interface similar to ChatGPT.\n\n\\- Backend Processing: Handles AI model interactions, API requests, and user session management.\n\n\\- Real-time Modifications: Users can refine recommendations by requesting changes in mood, genre, energy, etc.\n\nSources &amp;amp; References:\n\n\\- Spotify API Documentation: https://developer.spotify.com/documentation/web-api/\n\nMood-Based Playlist Research:\n\n\\- Generating personalized music playlists based on mood and listening data\n\n\\- Moodify: Emotion recognition in songs for personalized recommendations\n\nExample Datasets:\n\n\\- Moodify Dataset (Spotify-based mood labels)\n\n\\- Awesome Music Emotion Recognition (MER) Dataset Collection\n\n#### Expected Results\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=16 \"Edit section: Expected Results\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=16 \"Edit section: Expected Results\")\\]\n\n''- A full-stack AI agent (local hosted and/or API Key) that generates personalized music playlists based on user input.  - Integration with Spotify API for user authentication, playlist creation, and retrieval of user metadata.  - Real-time, conversational playlist modifications through a chatbot-style UI.  - Advanced mood detection using NLP or audio analysis. Integration with external music recommendation sources.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=17 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=17 \"Edit section: Duration of the Project\")\\]\n\n(350 hours).\n\n#### **Knowledge Prerequisites**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=18 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=18 \"Edit section: Knowledge Prerequisites\")\\]\n\n''- Basics of Machine Learning and NLP.  - Experience with pre-trained generative models (e.g., GPT, BERT) and recommendation systems.  - Familiarity with APIs, particularly Spotify API.  - Frontend/backend development experience for a chatbot-style UI.\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=19 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=19 \"Edit section: Mentors\")\\]\n\nGiannis Prokopiou, Thanos Aidinis\n\n**OpenRF 3D**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=20 \"Edit section: OpenRF 3D\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=20 \"Edit section: OpenRF 3D\")\\]\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=21 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=21 \"Edit section: Brief Explanation\")\\]\n\nThis project aims to bridge NVIDIA Sionna’s 6G simulation framework with Cesium’s 3D geospatial engine, enabling real-time, terrain-aware wireless network analysis. The student will develop a bidirectional WebSocket pipeline to dynamically stream Cesium’s elevation and 3D building data into Sionna, where channel models are enhanced to account for terrain-induced pathloss and urban blockages. Simultaneously, Sionna’s ray-traced outputs (e.g., signal strength, beamforming patterns) will be visualized in Cesium as interactive heatmaps and antenna coverage overlays. Key deliverables include a Python/JavaScript interface using Protocol Buffers for efficient data serialization, integration of 3GPP TR38.901 models with real-world terrain, and Jupyter notebooks demonstrating urban/rural 5G optimization.\n\n#### Expected Results\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=22 \"Edit section: Expected Results\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=22 \"Edit section: Expected Results\")\\]\n\nThe project will deliver a fully functional YouTube data engine, interactive dashboards, automated report generation, and an LLM-powered query system, enabling intuitive data exploration and analysis for researchers and content creators. Complete documentation and an open-source release will empower community contributions.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=23 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=23 \"Edit section: Duration of the Project\")\\]\n\n(350 hours).\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=24 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=24 \"Edit section: Related repositories\")\\]\n\n[https://github.com/NVlabs/sionna](https://github.com/NVlabs/sionna), [https://github.com/CesiumGS/cesium](https://github.com/CesiumGS/cesium)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=25 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=25 \"Edit section: Knowledge Prerequisites\")\\]\n\nA developer with strong Python &amp; JavaScript skills, and an understanding of real-time networking (WebSockets, Protobuf). Experience in wireless communications &amp; 3D geospatial visualization, and prior exposure to Sionna, CesiumJS would be highly beneficial.\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=26 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=26 \"Edit section: Mentors\")\\]\n\nIlias Chrysovergis ([https://www.linkedin.com/in/ilias-chrysovergis/](https://www.linkedin.com/in/ilias-chrysovergis/)), Iason Malkotsis ([https://malkotsis.com/](https://malkotsis.com/))\n\n**Exploring and Abstracting Triplestore Alternatives**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=27 \"Edit section: Exploring and Abstracting Triplestore Alternatives\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=27 \"Edit section: Exploring and Abstracting Triplestore Alternatives\")\\]\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=28 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=28 \"Edit section: Brief Explanation\")\\]\n\n#### Objective\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=29 \"Edit section: Objective\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=29 \"Edit section: Objective\")\\]\n\nThe primary objective of this project is to explore, analyze, and abstract various triplestore alternatives. The project aims to provide young programmers with a comprehensive understanding of different back-end alternatives that allow for storing data in triple format, commonly known as triplestores.\n\n#### Background\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=30 \"Edit section: Background\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=30 \"Edit section: Background\")\\]\n\nTriplestores are a type of database specialized in storing triples, a data structure for representing information in a subject-predicate-object format. They are crucial in semantic web technologies, such as RDF, SPARQL, and OWL. However, there are numerous triplestore alternatives available, each with its own strengths and weaknesses.\n\n#### Project Description\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=31 \"Edit section: Project Description\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=31 \"Edit section: Project Description\")\\]\n\nThis project will involve a detailed exploration of various triplestore alternatives. The participants will perform rudimentary tests and benchmarks on these alternatives to understand their performance, scalability, and other key features.\n\nThe ultimate goal is to develop a library that can act as an abstraction layer for these triplestore alternatives. This library will \"hide\" the underlying implementation, allowing developers to switch between different triplestores without changing their application code. This abstraction layer can be compared to a library abstracting various specific relational database management systems, all providing very similar functionality, like supporting SQL.\n\n#### Methodology\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=32 \"Edit section: Methodology\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=32 \"Edit section: Methodology\")\\]\n\n_Research:_ Identify and study various triplestore alternatives. Understand their architecture, features, and limitations.\n\n_Testing:_ Perform rudimentary tests and benchmarks on the identified triplestore alternatives.\n\n_Analysis:_ Analyze the test results to understand the performance and scalability of each alternative.\n\n_Development:_ Develop an abstraction layer that can interface with the various triplestore alternatives.\n\n_Documentation:_ Document the findings and the usage of the developed library.\n\n#### Expected Outcome\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=33 \"Edit section: Expected Outcome\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=33 \"Edit section: Expected Outcome\")\\]\n\nBy the end of the project, we expect to have a well-documented library that can act as an abstraction layer for various triplestore alternatives. This will provide developers with the flexibility to choose the most suitable triplestore for their specific needs without having to modify their application code.\n\n#### Conclusion\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=34 \"Edit section: Conclusion\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=34 \"Edit section: Conclusion\")\\]\n\nThis project will not only enhance the understanding of participants about triplestore alternatives but also equip them with the skills to develop an abstraction layer, thereby broadening their programming skills and knowledge.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=35 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=35 \"Edit section: Duration of the Project\")\\]\n\nLong (350 hours)\n\nRelated repositories\n\nNew project, no existing repo available.\n\n#### Information links\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=36 \"Edit section: Information links\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=36 \"Edit section: Information links\")\\]\n\n\\- [Triplestore](https://en.wikipedia.org/wiki/Triplestore \"wikipedia:Triplestore\") - [Triples](https://en.wikipedia.org/wiki/Semantic_triple \"wikipedia:Semantic triple\") - [Query language](https://en.wikipedia.org/wiki/SPARQL \"wikipedia:SPARQL\")\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=37 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=37 \"Edit section: Knowledge Prerequisites\")\\]\n\nPython (mandatory). Other programming languages like C, Go, Rust, Java, might prove useful.\n\n#### Mentors:Alexios Zavras, TBD\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=38 \"Edit section: Mentors:Alexios Zavras, TBD\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=38 \"Edit section: Mentors:Alexios Zavras, TBD\")\\]\n\n**Flexible GovDoc Scanner**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=39 \"Edit section: Flexible GovDoc Scanner\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=39 \"Edit section: Flexible GovDoc Scanner\")\\]\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=40 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=40 \"Edit section: Brief Explanation\")\\]\n\nThe goal of this project is to develop the Flex GovDoc Scanner, an application that leverages the Node.js stack, AI tools, and cloud services to transform public incorporation documents from Greece's business portal (ΓΕΜΗ, https://publicity.businessportal.gr/) into structured, searchable data. This project aims to facilitate access to essential company information, such as legal representatives, board members, and incorporation history, by offering advanced discovery capabilities through a REST service.\n\n**Project Overview:**\n\n\\- Crawl and Index Public Documents:\n\nDevelop a robust crawling mechanism to gather all relevant PDF documents from the ΓΕΜΗ portal while ensuring compliance with legal standards.\n\n\\- Extract and Structure Metadata:\n\nUtilize AI and OCR technologies to extract key metadata from these documents and store them in a structured format.\n\n\\- REST Service for Metadata Search:\n\nCreate an efficient REST API to provide users with search functionalities on the extracted metadata, enabling easy access and analysis.\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=41 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=41 \"Edit section: Related repositories\")\\]\n\n[https://github.com/flexivian/govdoc-scanner](https://github.com/flexivian/govdoc-scanner)\n\n#### Expected Outcome\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=42 \"Edit section: Expected Outcome\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=42 \"Edit section: Expected Outcome\")\\]\n\n''- Implement a nodejs application to Crawl and Index Public Documents, utilize an opensource DB optimized for documents - Enhance the application with AI and OCR capabilities to extract metadata from scanned documents - Implement a REST API using nodejs to provide users with search functionalities on the extracted metadata, enabling easy access and analysis.\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=43 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=43 \"Edit section: Knowledge Prerequisites\")\\]\n\nnodejs, docker, git , AI concepts and tools, NLP, OCR, RESTful API design and implementation, Knowledge of databases (SQL or NoSQL)\n\n#### Mentors:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=44 \"Edit section: Mentors:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=44 \"Edit section: Mentors:\")\\]\n\niskitsas@gmail.com, vasilisnx@gmail.com\n\n**Extending the capabilities of OpenTRIM**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=45 \"Edit section: Extending the capabilities of OpenTRIM\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=45 \"Edit section: Extending the capabilities of OpenTRIM\")\\]\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=46 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=46 \"Edit section: Brief Explanation\")\\]\n\nOpenTRIM is a new open-source code for simulating the passage of energetic ions through materials and calculating the associated modifications and damage that they cause to the these materials. It is based on the kinetic Monte-Carlo method and employs the Binary Collision Approximation to describe the interaction between ions and target atoms. OpenTRIM comprises of a set of C++ libraries, a command line program for executing simulations in batch mode and a Qt-based graphical user interface that can be used to configure &amp;amp; run a simulation and evaluate the results. Currently, there are various parts of OpenTRIM where work is needed for improving and extending the capabilities of the code.\n\n#### Expected Outcome\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=47 \"Edit section: Expected Outcome\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=47 \"Edit section: Expected Outcome\")\\]\n\n1\\. Extend the base C++ simulation code to include new capabilities for user-defined “tallies”, i.e., scoring tables where data from the simulation are extracted as a function of ion energy, position, direction or other possible optional variables.  2. Create a tool for 2D or 3D visualization of the simulated ion trajectories. 3. Write a number of example simulations, complete with the required input files and evaluation of the output results, which will become a part of the code documentation.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=48 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=48 \"Edit section: Duration of the Project\")\\]\n\nDepending on the proposal\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=49 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=49 \"Edit section: Related repositories\")\\]\n\n[https://github.com/ir2-lab/OpenTRIM](https://github.com/ir2-lab/OpenTRIM)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=50 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=50 \"Edit section: Knowledge Prerequisites\")\\]\n\nC++, Qt (optional), OpenGL (optional)\n\n#### Mentors:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=51 \"Edit section: Mentors:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=51 \"Edit section: Mentors:\")\\]\n\nGeorge Apostolopoulos (https://github.com/gapost), Michail Axiotis (https://github.com/psaxioti), Eleni Mitsi (https://github.com/elmitsi)\n\n**Cleaning of HPLT Greek v2 Dataset for GlossApi LLM**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=52 \"Edit section: Cleaning of HPLT Greek v2 Dataset for GlossApi LLM\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=52 \"Edit section: Cleaning of HPLT Greek v2 Dataset for GlossApi LLM\")\\]\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=53 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=53 \"Edit section: Brief Explanation\")\\]\n\nCleanup of the Greek datasets at [https://hplt-project.org/datasets/v2.0](https://hplt-project.org/datasets/v2.0). The cleanup will be done with the help of the glossAPI team.\n\nFor methodology see [https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1+](https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1+).\n\n#### Expected Outcome\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=54 \"Edit section: Expected Outcome\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=54 \"Edit section: Expected Outcome\")\\]\n\nThe goal is to isolate from the html Greek text with normal grammar and complete sentences (not fragmented).\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=55 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=55 \"Edit section: Duration of the Project\")\\]\n\nDepending on the proposal\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=56 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=56 \"Edit section: Related repositories\")\\]\n\n[https://github.com/eellak/glossapi](https://github.com/eellak/glossapi)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=57 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=57 \"Edit section: Knowledge Prerequisites\")\\]\n\nPython, βιβλιοθήκες NLP\n\n#### Mentors:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=58 \"Edit section: Mentors:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=58 \"Edit section: Mentors:\")\\]\n\nFoivos Karounos, Nikolaos Vidras\n\n**Add SAML and OpenID Connect support to Consul Democracy**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=59 \"Edit section: Add SAML and OpenID Connect support to Consul Democracy\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=59 \"Edit section: Add SAML and OpenID Connect support to Consul Democracy\")\\]\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=60 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=60 \"Edit section: Brief Explanation\")\\]\n\nConsul Democracy is a web-based citizen participation tool written in Ruby, using the Ruby on Rails framework. Consul Democracy is licensed under the AGPL and its installations are decentralized, meaning there are more than 200 institutions across the world running their own independent server and using a custom version of Consul Democracy. Some of these institutions have authentication solutions based on either SAML or OpenID Connect; however, there's no built-in support for these authentication solutions in Consul Democracy, so each institution has to build their own.\n\nIn Ruby, the OmniAuth library provides a standard way to manage multi-provider authentication. Consul Democracy currently uses several Ruby gems, all based on OmniAuth, to provide authentication via Facebook, Google, Twitter/X and WordPress. There's been an attempt at providing SAML support using the omniauth-saml Ruby gem, but its development hasn't been finished due to the lack of a SAML platform to test against.\n\nConsul Democracy also supports multitenancy, meaning the same application can be used to manage several institutions (with different domains or subdomains). For authentication using Facebook, Google, Twitter/X or WordPress, Consul Democracy provides the option to use the same configuration for each institution, to use different configurations for different institutions, or a mix of both (one default configuration which can be overwritten per institution).\n\nThe aim of this proposal is to provide generic SAML and OpenID Connect authentication solutions in Consul Democracy so a variety of institutions can easily integrate their existing authentication platform.\n\n#### Expected Results.\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=61 \"Edit section: Expected Results.\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=61 \"Edit section: Expected Results.\")\\]\n\n\\* Make it possible to authenticate in Consul Democracy using a SAML service\n\n\\* Make it possible to authenticate in Consul Democracy using an OpenID Connect service\n\n\\* Both SAML and OpenID Connect solutions must allow different configurations for different institutions in a multitenant environment\n\n\\* Both SAML and OpenID Connect solutions should be flexible enough so institutions don't have to change the source code in order to configure their service\n\n\\* The source code of the SAML and OpenID Connect solutions should be similar to the source code of the existing Facebook, Google, Twitter/X and WordPress solutions\n\n\\* Update the documentation with instructions on how to configure SAML and OpenID Connect\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=62 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=62 \"Edit section: Duration of the Project\")\\]\n\nMedium Size 175 hrs\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=63 \"Edit section: Related Repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=63 \"Edit section: Related Repositories\")\\]\n\n[https://github.com/consuldemocracy/consuldemocracy](https://github.com/consuldemocracy/consuldemocracy)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=64 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=64 \"Edit section: Knowledge Prerequisites\")\\]\n\n\\* SAML and OpenID Connect authentication configuration \\* (Optional) Ruby on Rails and OmniAuth authentication\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=65 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=65 \"Edit section: Mentors\")\\]\n\nJavier Martín - https://github.com/javierm, Sebastià Roig - https://github.com/taitus\n\n**Docker for Consul Democracy citizen participation platform**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=66 \"Edit section: Docker for Consul Democracy citizen participation platform\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=66 \"Edit section: Docker for Consul Democracy citizen participation platform\")\\]\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=67 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=67 \"Edit section: Brief Explanation\")\\]\n\nConsul Democracy is a web-based citizen participation tool written in Ruby, using the Ruby on Rails framework. Consul Democracy is licensed under the AGPL and its installations are decentralized, meaning there are more than 200 institutions across the world running their own independent server and using a custom version of Consul Democracy. That means Consul Democracy developers don't have access to production machines, and so Consul Democracy must be as simple to install and maintain as possible so anyone can do it no matter how familiar they are with the technologies used by Consul Democracy.\n\nCurrently, Consul Democracy is installed on production by running an ansible-based installer which installs all the project dependencies on a Debian GNU/Linux or Ubuntu Linux server. Deployment of new developments is then done using Capistrano.\n\nThe source code of Consul Democracy contains a Dockerfile and a docker-compose.yml file that are exclusively meant for the development environment, in order to make it easier for developers who are familiar with Docker to contribute to the project. However, there's currently no way to deploy to a production environment using Docker, which is inconvenient for institutions who don't use Debian or Ubuntu on their servers, or for institutions who have adopted Docker as their preferred way to setup their servers. The main goal of this proposal is to solve this issue. Since 2024, Ruby on Rails applications are configured to use Kamal by default as a solution to deploy to production using a Docker container. To our knowledge, this would be the most simple solution to our problem.\n\nThere's a third kind of Docker integration, which uses a devcontainer to allow developers to use tools like GitHub Codespaces to run the application in a development environment, which is also configured by default in new Rails applications since 2024, and we'd like to enable this option in Consul Democracy.\n\nWith this developments, we could enable many more municipalities to utilise digital citizen participation - and thus offer their citizens greater involvement in the development of their cities.\n\n#### Expected Results.\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=68 \"Edit section: Expected Results.\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=68 \"Edit section: Expected Results.\")\\]\n\n\\* Make it possible to install and deploy Consul Democracy applications using Docker in the most simple way (probably with Kamal)\n\n\\* Add a devcontainer for integration with GitHub Codespaces\n\n\\* Make sure the current development setup with Docker keeps working after the previous additions \\*\n\nThe configuration files for all three environments mentioned above should have as little duplicate code as possible so they're easy to maintain\n\n\\* Update the technical documentation for both development and production environments\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=69 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=69 \"Edit section: Duration of the Project\")\\]\n\nMedium Size 175 hrs\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=70 \"Edit section: Related Repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=70 \"Edit section: Related Repositories\")\\]\n\n[https://github.com/consuldemocracy/consuldemocracy](https://github.com/consuldemocracy/consuldemocracy)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=71 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=71 \"Edit section: Knowledge Prerequisites\")\\]\n\n\\* Experience deploying to production environments using Docker\n\n\\* (Optional) Experience using Docker in Ruby on Rails applications\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=72 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=72 \"Edit section: Mentors\")\\]\n\nJavier Martín - https://github.com/javierm, Sebastià Roig - https://github.com/taitus\n\n**Εxtending the apothesis factory pattern for seamless 2D and 3D lattice integration**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=73 \"Edit section: Εxtending the apothesis factory pattern for seamless 2D and 3D lattice integration\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=73 \"Edit section: Εxtending the apothesis factory pattern for seamless 2D and 3D lattice integration\")\\]\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### **Overview**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=74 \"Edit section: Overview\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=74 \"Edit section: Overview\")\\]\n\nApothesis is a generalized software for designing, simulating, and analyzing deposition processes using the kinetic Monte Carlo method. It consists of two main components: a lattice (e.g., simple cubic, HPC, etc.) and the processes (adsorption, desorption, diffusion, and surface reactions) that occur within it. Currently, Apothesis includes a factory-based mechanism for lattice creation, but this implementation is limited in scope, primarily focusing on basic lattice structures. To enhance its flexibility and scalability, this proposal aims to extend the factory pattern to support a broader range of 2D and 3D surfaces in a seamless and modular way. This extension will involve introducing specialized lattice factories tailored for different geometries, such as hexagonal, face-centered cubic, and custom surface representations, ensuring compatibility with kinetic Monte Carlo processes. Additionally, a dynamic factory registry system will be implemented, allowing new lattice types to be registered and instantiated at runtime without modifying the core system. This approach will not only improve adaptability but also facilitate user-defined lattice structures while preserving maintainability and efficiency. By refining the factory mechanism, Apothesis will provide a more robust framework for deposition process simulations, enabling researchers and engineers to explore a wider range of surface dynamics with greater ease.\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=75 \"Edit section: Related work\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=75 \"Edit section: Related work\")\\]\n\nApothesis already implements a factory pattern for lattice creation, but it needs to be expanded to support a broader range of 2D and 3D surfaces in a more seamless and flexible way. The current implementation primarily focuses on basic lattice structures, and extending it would involve introducing specialized factories for different geometries, such as hexagonal, face-centered cubic, and custom surface representations. Enhancing the factory pattern should include a more modular approach, allowing new lattice types to be dynamically registered and instantiated without modifying the core system. Additionally, ensuring that these new lattice structures fully integrate with kinetic Monte Carlo processes—such as adsorption, desorption, diffusion, and surface reactions—will be crucial for maintaining simulation accuracy and consistency. By refining the factory mechanism and introducing a more extensible registry system, Apothesis can achieve greater adaptability, making it easier for users to define and integrate new lattice types while preserving maintainability and scalability.\n\n#### **Details of your coding project**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=76 \"Edit section: Details of your coding project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=76 \"Edit section: Details of your coding project\")\\]\n\nA potential practical approach to extending the factory pattern in Apothesis for 2D and 3D surfaces involves creating a modular and extensible lattice generation system. This can be achieved by defining an abstract LatticeFactory that enforces a standard way of creating lattice structures while delegating specific implementations to derived factories. Specialized factories such as SimpleCubicLatticeFactory, HexagonalLatticeFactory, FCCLatticeFactory, and GrapheneLatticeFactory can be implemented to handle different lattice geometries while ensuring compatibility with kinetic Monte Carlo processes like adsorption, desorption, diffusion, and surface reactions. Each factory produces a lattice object implementing a common ILattice interface, encapsulating geometry, boundary conditions, and process compatibility. A dynamic factory registry mechanism allows runtime selection and registration of new lattice types, enabling users to introduce custom lattices without modifying the core code. This approach ensures scalability, flexibility, and maintainability by decoupling lattice creation from simulation logic while seamlessly supporting both 2D and 3D structures.\n\n#### **Size**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=77 \"Edit section: Size\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=77 \"Edit section: Size\")\\]\n\nLarge (350 hours)\n\n#### **Skills**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=78 \"Edit section: Skills\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=78 \"Edit section: Skills\")\\]\n\nRequired: C++, desing patters, experience with physicochemical based software\n\n#### **Expected impact**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=79 \"Edit section: Expected impact\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=79 \"Edit section: Expected impact\")\\]\n\nThe expected impact of extending the factory pattern in Apothesis includes enhanced flexibility, scalability, and efficiency in lattice creation for deposition process simulations. By introducing a more modular and extensible approach, researchers and engineers will be able to seamlessly integrate new 2D and 3D surface structures without modifying core code, reducing development time and increasing adaptability. The improved factory mechanism will ensure better compatibility with kinetic Monte Carlo processes, enabling more accurate and diverse simulations of adsorption, desorption, diffusion, and surface reactions. Additionally, the dynamic factory registry will foster customization and extensibility, allowing users to define and register their own lattice structures, thereby broadening the range of possible simulations. Overall, this enhancement will make Apothesis a more powerful and user-friendly tool, supporting advanced research, industrial applications, and innovation in surface science and material deposition technologies.\n\n#### **Mentors**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=80 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=80 \"Edit section: Mentors\")\\]\n\n• Nikolaos (Nikos) Cheimarios <n.cheimarios at gmail.com\\> is a researcher with contributions in scientific software development. He has previous experience as mentor in 2020, 2022, 2023 and 2024. He is one of the authors of Apothesis, Chameleon software and several web-based scientific numerical applications.\n\n• Christianna Gatsiou <christianna.gatsiou at gmail.com\\>.\n\n#### **Tests**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=81 \"Edit section: Tests\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=81 \"Edit section: Tests\")\\]\n\nStudents, the following test will be helpful. • Easy: Compile and run Apothesis for the CO heterogeneous catalysis case. • Medium: Perform runs with SimpleCubic and HPC lattices. • Hard: Identify the part of code that creates the lattices. Briefly describe how you would implement the 2D graphene lattice. For tips and references contact the Mentors!\n\n#### **References**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=82 \"Edit section: References\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=82 \"Edit section: References\")\\]\n\n\\[1\\] N. Cheimarios, D. To, G. Kokkoris, G. Memos and A.G. Boudouvis “Monte Carlo & Kinetic Monte Carlo models for deposition processes: A review of recent works”, Frontiers in Physics, 9, 165 (2021).\n\n\\[2\\] N. Cheimarios, “Insights into the effect of growth on the Ziff-Gulari-Barshad model and the film properties”, Modelling and Simulation in Materials Science and Engineering, 31, 065007, (2023).\n\n\\[3\\] A.P.F Jansen, \"An Introduction to Kinetic Monte Carlo Simulations of Surface Reactions\", Springer Berlin, Heidelberg, 2012. https://doi.org/10.1007/978-3-642-29488-4\n\n\\[4\\] M. Andersen, C. Panosetti, K. Reuter, \"A Practical Guide to Surface Kinetic Monte Carlo Simulations\", Frontiers in Chemistry, 7, 202 (2019).\n\n**Identifying transition points in the ZGB model using convolutional neural networks (CNNs)**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=83 \"Edit section: Identifying transition points in the ZGB model using convolutional neural networks (CNNs)\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=83 \"Edit section: Identifying transition points in the ZGB model using convolutional neural networks (CNNs)\")\\]\nn\nScientific computing for physical/chemical sciences and engineering edited this page 3 weeks ago ·\n\n#### **Overview**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=84 \"Edit section: Overview\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=84 \"Edit section: Overview\")\\]\n\nIn 1986, Ziff, Gulari, and Barshad introduced the ZGB model to computationally study the heterogeneous catalytic process of CO oxidation to CO₂ with O₂ on a metal surface (e.g., Pt). Using Monte Carlo simulations on a simple square lattice, with the partial pressure of CO, yCO, as the only parameter, they demonstrated that at low yCO values, the catalytic surface becomes poisoned (fully covered) by oxygen atoms, preventing the surface reaction and the conversion to CO₂. In this case, the system remains out of equilibrium. As yCO increases, at approximately y1 ≈ 0.389, the system transitions to an equilibrium state where CO begins to convert into CO₂. Further increasing yCO leads to a first-order, discontinuous phase transition at y2 ≈ 0.525, where CO conversion to CO₂ ceases again due to surface poisoning by CO atoms. In 1990, Jensen and Fogedby extended this model by incorporating diffusion phenomena, showing that the transition points shift depending on the diffusion rate, pd , but do not disappear.\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=85 \"Edit section: Related work\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=85 \"Edit section: Related work\")\\]\n\nApothesis is a generalized open-source software for simulating heterogeneous catalysis and deposition processes via kMC. It is based on performing certain processes (adsorption, desorption, diffusion and surface reaction(s)) on lattices. Currently, Apothesis supports simple cubic, FCC, HPC and diamond lattices. It has been used to study both heterogeneous catalysis of CO and related type growth models \\[2\\].\n\n#### **Details of your coding project**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=86 \"Edit section: Details of your coding project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=86 \"Edit section: Details of your coding project\")\\]\n\nThis works aims to predict the transition points using machine learning methods, specifically convolutional neural networks (CNNs), based on surfaces derived from kinetic Monte Carlo simulations from Apothesis at equilibrium states. For that, an outer shell to Apothesis must be build that will read the data from Apothesis and use it for training a CNN and then for the prediction of the transition points.\n\n#### **Size**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=87 \"Edit section: Size\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=87 \"Edit section: Size\")\\]\n\nLarge (350 hours)\n\n#### **Skills**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=88 \"Edit section: Skills\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=88 \"Edit section: Skills\")\\]\n\nRequired: Python, Tensorflow, experience with physicochemical based software\n\n#### **Expected impact**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=89 \"Edit section: Expected impact\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=89 \"Edit section: Expected impact\")\\]\n\nThe project will build an outer shell for Apothesis to be used in ML/AI applications.\n\n#### **Mentors**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=90 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=90 \"Edit section: Mentors\")\\]\n\n*   Nikolaos (Nikos) Cheimarios <n.cheimarios at gmail.com\\> is a researcher with contributions in scientific software development. He has previous experience as mentor in GSoC 2020, 2022, 2023 and 2024. He is one of the authors of Apothesis, Chameleon software and several web-based scientific numerical applications.\n*   Konstantinos (Kostas) Eftaxias is a data scientist with more than 15 years of experience in research and industry applications. His main interests are computer vision, time series modelling/prediction and reinforcement learning.\n\n#### **Tests**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=91 \"Edit section: Tests\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=91 \"Edit section: Tests\")\\]\n\nStudents, the following test will be helpful. • Easy: Compile and run Apothesis for the CO heterogeneous catalysis case. • Medium: Take three surfaces (SurfaceSpecies\\_\\*.dat) generated by Apothesis and read it in Python. • Hard: Call Apothesis from Python and read the latest surface generated. For tips and references contact the Mentors!\n\n#### **References**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=92 \"Edit section: References\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=92 \"Edit section: References\")\\]\n\n\\[1\\] R. M. Ziff, E. Gulari, and Y. Barshad, Kinetic Phase Transitions in an Irreversible Surface-Reaction Model, Phys. Rev. Lett. 56, 2553 (1986).\n\n\\[2\\] I. Jensen and H. C. Fogedby, Kinetic Phase Transitions in a Surface-Reaction Model with Diffusion: Computer Simulations and Mean-Field Theory, Phys. Rev. A 42, 1969 (1990).\n\n\\[3\\] N. Cheimarios, Surface diffusion effects on the system and the film properties of a Ziff–Gulari–Barshad type growth model, Mat. Today Comm. 39, 109189 (2024).\n\n\\[4\\] N. Cheimarios, Mean field approximation of a surface-reaction growth model with dissociation, Phys. Lett. A 524, 129828 (2024).\n\n\\[5\\] Y. Bahri, J. Kadmon, J. Pennington, S. S. Schoenholz, J. Sohl-Dickstein, S. Ganguli, Statistical Mechanics of Deep Learning, Annu. Rev. Condens.Matter Phys. 11, 501 (2020).\n\n\\[6\\] D.W. Tola, M. Bekele, Machine Learning of Nonequilibrium Phase Transition in an Ising Model on Square Lattice, Condens. Matter 8, 83 (2023).\n\n**MyUni**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=93 \"Edit section: MyUni\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=93 \"Edit section: MyUni\")\\]\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=94 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=94 \"Edit section: Brief Explanation\")\\]\n\nCurrently there is a University App called MyUoM for Greek universities in [https://my.uom.gr/](https://my.uom.gr/) (followed by an effort in University of West Attica, [https://iam.uniwa.gr/](https://iam.uniwa.gr/). This app is official but it lacks features(e.g. login) and a proper backend with an architecture that will allow different implementations for Universities. In this project we want to add a CMS for info that is changing frequently and a backend that fetches realtime info from the official websites. We want to unify those efforts and make it easier for other universities to join.\n\n#### Expected Results.\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=95 \"Edit section: Expected Results.\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=95 \"Edit section: Expected Results.\")\\]\n\n1\\. Create a structure that can be used by different university structures and can be fully customised based on the needs of each institution.\n\n2\\. The application should be fully customisable in terms of interface, content and functionality.\n\n3\\. The content can be personalized and the home page can display tiles selected by each institution and display content that will be created as a page (wordpress type)\n\n4\\. Adding a students portal where all the student's data, personal and any other information will be collected, in order to be used as a reference point.\n\n5\\. Add an admin panel from where the appearance and content of the institution's application will be defined.\n\n6\\. Create a BackEnd system to manage all the data described above.\n\n7\\. Setup a backend that fetches information from official sources and static information(e.g. map images) to make the frontend lighter.\n\n8\\. Rewrite in Typescript for maintainability\n\n9\\. Creation of a custom CMS (consisting of FrontEnd & BackEnd) for data changing frequently\n\n10\\. Create a system where the application is shared across domains by creating an instance.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=96 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=96 \"Edit section: Duration of the Project\")\\]\n\nDepending on the scope\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=97 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=97 \"Edit section: Related repositories\")\\]\n\n[https://github.com/Open-Source-UoM/MyUoM](https://github.com/Open-Source-UoM/MyUoM)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=98 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=98 \"Edit section: Knowledge Prerequisites\")\\]\n\n   • React.js\n   • Express.js (for BackEnd)\n   • MySQL (for BackEnd)\n   • JavaScript\n   • TypeScript\n   • Next.js (optional)\n\n#### Mentors:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=99 \"Edit section: Mentors:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=99 \"Edit section: Mentors:\")\\]\n\nAnastasios Tsalmas tsalmanastasios@gmail.com,\n\nEfstathios Iosifidis eiosifidis@gmail.com\n\n**GlossAPI**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=100 \"Edit section: GlossAPI\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=100 \"Edit section: GlossAPI\")\\]\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=101 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=101 \"Edit section: Brief Explanation\")\\]\n\nGlossAPI is an open source project seeking to develop a standard open access corpus of the Greek language, and benchmark it against existing and to-be-developed language models, with the objective of providing an upstream service to the Greek tech community. The project is named after a portmandeau of the Greek word for \"language\" and \"API\" which creates a visual resemblance to the word Glossary in Greek. This is to express our objective to provide an index of the Greek language via flexible programing interfaces.\n\nGreek is a language that is under-represented in existing LLMs, while it has a complex history, grammar and writing system. Our trials with existing models have shown lack of syntactic and semantic knowledge of advanced Greek and its nuances, and we have put forth a number of analyses showing that this poses a risk for digital divides, language extinction, and subpar experience for users of public services.\n\nTo our knowledge other LLM projects that tackle the problem of the Greek language are either proprietary, closed code, narrow scope, or otherwise unfit for our purpose which is to provide publicly available, fully open source language models with respect to all code/weights/procedures/data. We reach out and bring together people that have the expertise, the passion, the collections, or the hardware, to take part in this endeavor, that will help the Greek stratup/tech scene catch up with the rapid developments in downstream applications that are now common place for developers of English language generative models.\n\n#### Expected Results\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=102 \"Edit section: Expected Results\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=102 \"Edit section: Expected Results\")\\]\n\nThe project will result to an Open Source Corpus, representative of the Greek language and its different varieties. At first emphasis will be given to the formal varieties used in government, education and the law. Additionally, we want to represent, in a subsequent training stage, a number of basic knowledge domains to an \"undergraduate degree\" level. The datasets will be versioned and benchmarked against different models and tokenizers. We also need to develop a sufficient set of evaluation tasks (such as Factual QA - Greek). Finally a couple of foundation models of different architectures will be fitted onto the dataset and the evaluation suite, and published to the community under an open source licence. With these moves we expect to pollinate the Greek tech ecosystem with reliable, inexpensive, and extensible models and datasets, that will help the Greek Open Source AI scence thrive. All data and models will be accompanied by thorough documentation and guides, to ensure replicability and reusability of the results.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=103 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=103 \"Edit section: Duration of the Project\")\\]\n\n350 hrs\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=104 \"Edit section: Related Repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=104 \"Edit section: Related Repositories\")\\]\n\n[https://github.com/eellak/glossAPI/](https://github.com/eellak/glossAPI/) [https://github.com/eellak/glossAPI/wiki](https://github.com/eellak/glossAPI/wiki)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=105 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=105 \"Edit section: Knowledge Prerequisites\")\\]\n\nCorpus Annotation for Language Models Quantitative Corpus Linguistics or Natural Language Processing Python with transformers library, sci-kit learn, numpy, pandas and streamlit, langchain or similar Mathematical statistics or similar discipline Django knowledge is good to have\n\n#### Mentors\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=106 \"Edit section: Mentors\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=106 \"Edit section: Mentors\")\\]\n\nF.Karounos, A. Melidis, Greek Free Open Source Software/Hardware Alliance\n\n**DIY IoT Physics Experiments for education**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=107 \"Edit section: DIY IoT Physics Experiments for education\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=107 \"Edit section: DIY IoT Physics Experiments for education\")\\]\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=108 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=108 \"Edit section: Brief Explanation\")\\]\n\nRemote physics experiments for students in all educational levels are the second best to hands-on experiments.  Especially for students who temporarily cannot attend school or in cases like Covid-19 and the lockdowns. In many practical cases, they are the only alternative, as they are available 24/7, they can involve dangerous materials or conditions, they can be accessed from anywhere and any device, they require less maintenance, have lower cost, can be easily modified, or arranged to perform another experiment, and are less probable to be damaged.  They are in line with the modern way of performing experiments, as it is desirable to have as little direct contact with the experiments as possible and use them online.  Examples include online telescopes and electronic microscopes.  This is possible due to automation; data acquisition and manipulation of the experimental data is done using a computer or a single board computer.  In this way students need not take pain stacking notes, especially for experiments that take a lot of time to collect data, sometimes days or months.  Students can concentrate on data processing, the analysis of the results, and arrive at scientifically valid conclusions.  Our laboratory has set up many remote experiments and has more than 10 years’ experience in designing, setting, and servicing remote experiments.  Our remote experiments are based on Arduino and readily available sensors and actuators. The previous year it was designed and implemented a way to make the sensors, and the actuators form an IoT local network so that it will be easier to easily utilize them in different experiments and to build new experiments.  The IoT sensors and actuators are DIY and based on open software.   The previous year GSoC stipend receiver, programed the ESP8266 to receive data from the sensor and transmit the data through MQTT to ThingsBoard. Similarly, for an actuator the ESP8266 to receive MQTT data from ThingsBoard. The stipend receiver prepared five DIY IoT sensors and five actuators. ThingsBoard provided users with visual representation of the data and the control of the experimental setup through dashboards.  There are produced five dashboards for five corresponding experiments.  The present successful applicant will have to produce a digital twin of the experiments.  This will involve open software for producing 3D models of five experiments, allowing them to manipulate the digital twins, view the evolution of the experiment, provide data presentation tools, and extract model parameters.\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=109 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=109 \"Edit section: Related repositories\")\\]\n\n#### [https://github.com/totheworld2004/DIY-Physics-IoT](https://github.com/totheworld2004/DIY-Physics-IoT)\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=110 \"Edit section: https://github.com/totheworld2004/DIY-Physics-IoT\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=110 \"Edit section: https://github.com/totheworld2004/DIY-Physics-IoT\")\\]\n\n#### Exprected Outcome:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=111 \"Edit section: Exprected Outcome:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=111 \"Edit section: Exprected Outcome:\")\\]\n\nFive digital twins of corresponding five experiments, their documentation and instructions of how to use them\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=112 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=112 \"Edit section: Knowledge Prerequisites\")\\]\n\nAny one for case a)-e) or similar --- a) 3D Web-Based Physics Simulations: Three.js, Babylon.js, p5.js, Godot b) Interactive Dashboards: Plotly Dash, Panel, Bokeh c) Custom Data Visualizations: D3.js, Matplotlib, Jupyter Notebooks d) Game-Based Physics Experiments: Godot, Babylon.js e) Embedded 3D Simulations: Three.js, Babylon.js\n\n#### Mentors:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=113 \"Edit section: Mentors:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=113 \"Edit section: Mentors:\")\\]\n\nHariton Polatoglou and Panagiotis Koustoumpardis\n\n**eCodeOrama, an educational interactive flow visualization tool for mit scratch programs**\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=114 \"Edit section: eCodeOrama, an educational interactive flow visualization tool for mit scratch programs\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=114 \"Edit section: eCodeOrama, an educational interactive flow visualization tool for mit scratch programs\")\\]\nn\n#### Brief Explanation\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=115 \"Edit section: Brief Explanation\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=115 \"Edit section: Brief Explanation\")\\]\n\nThe project will create a interactive tool to extract, visualize graphically and edit (to improve the presentation of) the layout of the flow of code in blocks / scripts in a mit scratch program and their interaction with any messages or other external events. The tool will use rules to decide on many layout parameters (e.g. the position of the code blocks in the layout, the colors used, etc) but the user will be able to overwrite the default choices. The presentation will be compatible with the codeOrama code layout specification. The tool will also promote code understanding, especially to young students that use scratch, and will include debugging aids. The students can use this flow to better visualize and understand their program, to explain it to others, to debug it and to design extensions and modifications.\n\n#### Expected Results\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=116 \"Edit section: Expected Results\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=116 \"Edit section: Expected Results\")\\]\n\nA tool to visualize and edit the layout of the event based script flow of a scratch program, keeping it compatible with the codeOrama code layout specification.\n\n#### Duration of the Project\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=117 \"Edit section: Duration of the Project\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=117 \"Edit section: Duration of the Project\")\\]\n\n350 hours\n\n#### \\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=118 \"Edit section: Related repositories\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=118 \"Edit section: Related repositories\")\\]\n\n[https://github.com/sarantos40/eCodeOrama](https://github.com/sarantos40/eCodeOrama)\n\n#### Knowledge Prerequisites\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=119 \"Edit section: Knowledge Prerequisites\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=119 \"Edit section: Knowledge Prerequisites\")\\]\n\npython, mit scratch, gui development\n\n#### Mentors:\\[[edit](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&veaction=edit&section=120 \"Edit section: Mentors:\") | [edit source](https://ellak.gr/wiki/index.php?title=Google_Summer_of_Code_2025_proposed_ideas&action=edit&section=120 \"Edit section: Mentors:\")\\]\n\nSarantos Kapidakis (sarantos.kapidakis@gmail.com), Chrysovalantis Sfyrakis\n"}