{"name":"OpenStreetMap","description":"Create and distribute free geodata for the world","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/openstreetmap","ideas_url":"https://wiki.openstreetmap.org/wiki/Google_Summer_of_Code/2025/Project_ideas","logo":"https://summerofcode.withgoogle.com/media/org/openstreetmap/ihw4tczyumj0yx81-360.png","technologies":["python","javascript","java","c++","rust"],"topics":["databases","web","ui","geodata"],"projects":[{"project_name":"Modernize the 3D Model Repository","summary":"Improve the 3D Model Repository by adopting glTF format, updating the codebase, and enhancing the website UI and API.","difficulty":"medium"},{"project_name":"Temporary road closures database and API","summary":"Create a prototype repository and API for temporary road closures supporting user submissions and integration in OSM navigation apps.","difficulty":"medium"},{"project_name":"Nominatim - Transliteration of Search Results","summary":"Add transliteration to Nominatim search results to aid users unfamiliar with local scripts or languages.","difficulty":"medium"},{"project_name":"Nominatim - Category search using ID presets","summary":"Enhance Nominatim's search functionality using tagging presets for better category search results.","difficulty":"medium to advanced"},{"project_name":"Valhalla - Faster Tile Builds","summary":"Optimize the tile build process in Valhalla to reduce overall build time for routing.","difficulty":"moderate"},{"project_name":"Ferrostar - Snapshot Recording, Testing, and Replay","summary":"Develop a session logging and snapshot testing tool for the Ferrostar navigation SDK, helping to identify issues in navigation sessions.","difficulty":"medium"},{"project_name":"MapRoulette Integration in iD","summary":"Integrate MapRoulette into the iD editor to help users see and resolve mapping tasks more effectively.","difficulty":"medium"},{"project_name":"Improve Sidewalk mapping in iD","summary":"Backport and modify improvements for sidewalk mapping from the Rapid tool to enhance iD editor functionality.","difficulty":"medium"},{"project_name":"Widget for opening hours","summary":"Build a UI widget in iD for better management of opening hours, including validation and visual representation of data.","difficulty":"medium"},{"project_name":"Add a 'kbar' for iD configuration","summary":"Implement a 'kbar' in iD as an alternative way for users to access configuration options quickly.","difficulty":"medium"},{"project_name":"AI extraction of information from camera captured images","summary":"Develop a solution for extracting text from images using on-device resources for tagging OSM objects.","difficulty":"medium to challenging"},{"project_name":"Photos in Every Door","summary":"Enable users to attach photos to OSM notes and objects in the Every Door application, integrating with existing infrastructure.","difficulty":"medium"},{"project_name":"Test coverage for Every Door","summary":"Increase test coverage in the Every Door application to reduce the risk of bugs and improve the application's foundation.","difficulty":"medium"}],"jina_response":"Title: Google Summer of Code/2025/Project ideas\n\nURL Source: https://wiki.openstreetmap.org/wiki/Google_Summer_of_Code/2025/Project_ideas\n\nMarkdown Content:\nGoogle Summer of Code/2025/Project ideas\n< Google Summer of Code‎ | 2025\nJump to navigation\nJump to search\n\nThis page lists a number of ideas for potential Google Summer of Code 2025 projects. This page's primary purpose is to help to give potential applicants ideas that they can build on to turn into applications for the program. Members of the OSM developer community are encouraged to identify ideas for projects, and indicate whether they would be willing to act as a mentor for a GSoC contributor attempting the project, using the GSoC idea template.\n\nContents\n1\tParticipant project ideas\n2\tGeneral\n2.1\tModernize the 3D Model Repository\n2.2\tTemporary road closures database and API\n3\tSearching\n3.1\tNominatim - Transliteration of Search Results\n3.2\tNominatim - Category search using ID presets\n4\tRouting\n4.1\tValhalla - Faster Tile Builds\n4.2\tFerrostar - Snapshot Recording, Testing, and Replay\n5\tiD editor\n5.1\tMapRoulette Integration in iD\n5.2\tImprove Sidewalk mapping in iD\n5.3\tWidget for opening hours\n5.4\tAdd a \"kbar\" for an alternative way to configure iD\n5.5\t«Come up with your own idea!»\n6\tVespucci\n6.1\tAI extraction of information from camera captured images\n7\tEvery Door\n7.1\tPhotos in Every Door\n7.2\tTest coverage for Every Door\nParticipant project ideas\n\nGSoC contributors can base their application on one of the ideas below, but we also encourage potential GSOC contributors to come up with their own ideas for projects around OpenStreetMap software. Do you have a pet annoyance you want fixed? A feature you think should be implemented? If you believe you are capable of implementing it and it fits within the time constraints and the GSOC eligibility criteria feel free to bring the idea forward.\n\nPlease get in touch with the organizers (at gsoc-orga@openstreetmap.org) as soon as possible if you want to work on something not listed here, so that we can make sure you get the best support possible. We would suggest supplying the same information as in the templates below, if you don't have a potential mentor it may be possible for us to find one for you.\n\nGeneral\nModernize the 3D Model Repository\nSuggested By\nTordanik\nSummary\nThe 3D Model Repository (3DMR) is a website which lets users upload openly licensed 3D models and link them with OSM data. Renderers such as OSM2World can use this to create 3D scenes of real-world locations. The goal of this project is to improve the 3DMR by adopting glTF as the format for 3D models, and to upgrade the codebase to current versions of Django and Oauth. In addition to these essential updates, the project would be an opportunity to improve the website UI and API.\nMandatory skills\nPython\nUseful skills\nDjango, JavaScript, 3D graphics\nLength\n350 hours\nDifficulty\nmedium\nPossible Mentors\nLonvia, Tordanik\nNotes\nAs a minimum requirement for applicants, we expect you to set up a local copy of the existing codebase on your own prior to submitting your application so you have a starting point for your work.\nTemporary road closures database and API\nSuggested By\nSimonPoole\nSummary\nProduce a prototype repository and API for temporary road closures and similar for use in OSM (navigation) apps that supports user submitted data, at least one prototype integration in an OSM Navigation app is expected.\nMandatory skills\nPostgres/SQL, languages suitable for prototyping for an UI and an API\nUseful skills\nhaving a brain\nLength\n350 hours\nDifficulty\nmedium\nPossible Mentors\nSimonPoole\nNotes\nThe assumption is that the API will deliver the information in OpenLR format and that data entry can either be via an extension to an app, or a web UI.\nSearching\nNominatim - Transliteration of Search Results\nSuggested By\nLonvia\nSummary\nOpenStreetMap registers names of streets, POIs and places usually in the local language. Larger features like cities or states have translations into other languages but simple POIs like restaurants or hotels often have the local name only. That means that it is quite possible that when searching in OSM data, results are returned that are not only in an unknown language but also in an unknown script, making it impossible to read. Transliteration solves this problem by transfering an unknown script into one the user knows an can read. For this project we want to add transliteration to results of the search engine Nominatim when there are a results that the user may not be able to read.\nMandatory skills\nPython\nUseful skills\nknowledge of a non-Latin script or the willingness to learn basic reading of one during the project\nLength\n175 hours\nDifficulty\nmedium (some research is expected and smaller road blocks that need to be solved independently)\nPossible Mentors\nLonvia, mtmail\nNotes\nThe map on openstreetmap.de shows transliterated names. Have a look especially at Asia and compare with the standard map on [1]. The code for the localisation of the German map can give some useful pointers to libraries for transliteration.\nComments\nPlease also see the general hints for contributing to Nominatim for GSOC at User:Lonvia/GSoC_2021_Nominatim_Projects.\nNominatim - Category search using ID presets\nSuggested By\nLonvia\nSummary\nWhen users search places, they often like to use category words (\"hotels in Berlin\", \"Eiffel tower bus stop\", ...). Nominatim has limited support for such category searches. It defines Nominatim/Special_Phrases which are detected in the search query and then used to filter the results. The manually curated lists in the wiki are rather tedious to keep and duplicate other community-maintained lists. For this project, you should explore the tagging presets of the ID editor. The presets contain an extensive list of category names for OSM tags with many translations. The goal of this project is to make these terms searchable with Nominatim. Given that the editors and search engines have very different goals, this will not be a straightforward translation. You will have to experiment and research how category words are used in search, which may include thinking about into simple linguistic problems in a multi-lingual setting.\nMandatory skills\nbasic understanding of OSM tagging including some experience with editing OSM data, basic Python\nUseful skills\nSQL(Postgresql, Postgis)\nRequired experience\nintermediate\nLength\n175 or 350 hours\nDifficulty\nmedium to advanced\nPossible Mentors\nLonvia, mtmail\nNotes\nThis idea can be either done as a shorter 175h project concentrating on extracting and using simple category words from ID's presets. This would be of medium difficulty. At a length of 350h, students can dive more deeply into the search algorithms for categories and improve them to also find subcategories (\"vegan restaurants\").\nComments\nOriginal issue at [2]. Please also see the general hints for contributing to Nominatim for GSOC at User:Lonvia/GSoC_2021_Nominatim_Projects.\nRouting\nValhalla - Faster Tile Builds\nSuggested By\nKevinkreiser\nSummary\nThe router relies on a preprocessing step to build a graph from OSM data. This graph tile build is a multiphase process that takes around a day to run on modern hardware. There are a number optimization experiments we can try to bring the overall build time down. More info here: https://github.com/valhalla/valhalla/issues/5099\nMandatory skills\nfamiliarity with c-like languages\nUseful skills\nmultithreading, performance profiling, knowledge of graph structures\nRequired experience\nnovice\nLength\n175 hours\nDifficulty\nmoderate\nPossible Mentors\nKevinkreiser\nNotes\nComments\nExperimentation is encouraged, we should pull whatever threads look to be most promising in our experiments.\nFerrostar - Snapshot Recording, Testing, and Replay\nSuggested By\nIan Wagner (on osm, edits, contrib, heatmap, chngset com.)\nSummary\nFerrostar is a rust based cross-platform turn-by-turn navigation SDK. Ferrostar works with multiple routing engines and using tools like Mozilla's UniFFI and TSify, integrates with modular UI for native iOS, Android and a web PWA (thanks to GSOC 2024!).\n\nBut not all navigation goes according to plan! If we could record the inputs from a navigation session (GPS etc.), and the new state after each update, we can “see through the user’s eyes” when something goes wrong. The contributor will help build such a session logging and snapshot testing tool.\n\nIn addition to the backend (Rust), the contributor will also build a frontend integration for at least one platform (Native iOS or Android, or Typescript web components).\nMandatory skills\nRust; some mobile or web\nUseful skills\nMost work will be in Rust, but there will also be some work in a frontend platform of your choice (iOS, Android, Web); you don’t need to be an excellent frontend designer or anything, but some existing knowledge will help.\nLength\n175 hours\nDifficulty\nmedium\nPossible Mentors\nIan Wagner (on osm, edits, contrib, heatmap, chngset com.) and Jacob Fielding\nNotes\nGitHub discussion\niD editor\nMapRoulette Integration in iD\nSuggested By\n@tordans\nSummary\nSimilar to the QA Layers in iD, add a MapRoulette integration to see and resolve tasks. The UI can be mostly backported from Rapid. However, the underlying code will likely need to be changed to fit into the iD architecture. More at https://github.com/openstreetmap/iD/issues/10758\nMandatory skills\nJavaScript, D3\nUseful skills\nWorking with APIs in JavaScript, OSM mapping experience\nRequired experience\nintermediate\nLength\n175 hours\nDifficulty\nmedium\nPossible Mentors\nMartin Raifer\nNotes\n-\nComments\n-\nImprove Sidewalk mapping in iD\nSuggested By\n@tordans\nSummary\nBackport the improvements for Sidewalk mapping from Rapid to iD and modify them based on community feedback. More at https://github.com/openstreetmap/iD/issues/10757 and https://github.com/openstreetmap/iD/issues/10743\nMandatory skills\nJavaScript, D3, strong OSM mapping background\nUseful skills\n-\nRequired experience\nadvanced\nLength\n175 hours\nDifficulty\nmedium\nPossible Mentors\nMartin Raifer\nNotes\n-\nComments\n-\nWidget for opening hours\nSuggested By\nMartin Raifer\nSummary\nThe goal of this project would be to implement a user interface widget which should a) provide a better visual interpretation of already mapped Key:opening_hours (for example in the form of a time table), b) checks for the validity of the contents of the tag, and c) allow to more easily add or modify such information. The widget should be able to take the most common formats into account and allow a fallback to show the full tag content for more complex situations.\nMandatory skills\nJavaScript\nUseful skills\nExperience with the D3.js framework, OSM tagging/mapping workflows, and iD development\nRequired experience\nintermediate\nLength\n90 or 175 hours\nDifficulty\nmedium\nPossible Mentors\nMartin Raifer\nNotes\nThis project could be extended to 175 hours by enhancing the functionality of the widget also to UI fields for tags with temporal conditions.\n\n\n\n\nAdd a \"kbar\" for an alternative way to configure iD\nSuggested By\n@tordans\nSummary\niD has many options that can be toggled during a mapping session. The concept of a \"kbar\" (https://kbar.vercel.app/) provides an alternative way to reach those options. This would allow power users to quickly change settings without adding keyboard shortcuts to each setting (and memorizing them). See https://github.com/openstreetmap/iD/issues/8801 for more\nMandatory skills\nJavaScript, D3\nUseful skills\n-\nRequired experience\nadvanced\nLength\n175 hours\nDifficulty\nmedium\nPossible Mentors\nMartin Raifer, Tobias\nNotes\n-\nComments\n-\n\n\n\n\n«Come up with your own idea!»\nSuggested By\nyou!\nSummary\nDo you have a feature that you think would be a good fit for iD and would like to get it implemented? Does it fit into a time frame between 90 to 350 hours? Is it somewhat self-contained (i.e. does not require to change too many different parts of the iD editor at the same time)? Does it improve the usability/accessibility of the iD editor, does it add more improve mapping workflows, data validations, localization features and/or performance? If the answers to most questions are yes, please be welcome to put in your own idea as a project proposal for the iD editor!\nMandatory skills\nJavaScript, D3, OSM mapping\nUseful skills\nUI/UX, …\nRequired experience\nadvanced\nLength\n90, 175 or 350 hours\nDifficulty\nhard\nPossible Mentors\nMartin Raifer\nNotes\n-\nComments\n-\nVespucci\nAI extraction of information from camera captured images\nSuggested By\nSimonPoole\nSummary\nDevelop a solution to extract text from a captured image or directly from the camera. The captured text should either be able to be used as a tag value, or to generate a set of tags that can be directly applied to an osm object. It is mandatory that this only uses resources available on device.\nMandatory skills\nJava or Kotlin\nUseful skills\ngradle, experience with Android development\nLength\n350 hours\nDifficulty\nmedium to challenging\nPossible Mentors\nSimonPoole\nNotes\nThe successful candidate will need to have access to a suitably powerful Android device. Googles MLkit might be a potential starting point for text recognition. Note that the use of models and code that cannot be distributed on open terms is not possible.\nEvery Door\nPhotos in Every Door\nSuggested By\nUser:Zverik\nSummary\nMany people have asked for photos in Every Door. They need to be of two kinds: photo notes, and pictures of OpenStreetMap objects. The former may be probably attached to OSM notes and share the StreetComplete infrastructure, while the latter must use Panoramax and add relevant tags. There will be an authentication hurdle, probably related to sharing OAuth tokens. This might also involve collaborating with MapComplete author on their instance.\nMandatory skills\nFlutter + Dart\nUseful skills\nUX design, Riverpod\nRequired experience\nintermediate\nLength\n175 hours\nDifficulty\nmedium\nPossible Mentors\nUser:Zverik\nNotes\nThe Every Door code base is currently undergoing a major refactoring, so it's unclear how easy or hard this would be. But with an experience in basic app design this should be not very hard.\nTest coverage for Every Door\nSuggested By\nUser:Zverik\nSummary\nEvery Door has grown into a big application with a lot of moving parts. Modifying it is sometimes risky, which leads to bugs not patched for a long time. Some little things are covered with tests, but there are absolutely no widget tests, and data tests are also largely missing. Here we need to cover with tests three main areas: providers, field widgets and classes, and helper classes.\nMandatory skills\nFlutter + Dart, QA\nUseful skills\nRiverpod\nRequired experience\nhigh\nLength\n350 hours\nDifficulty\nmedium\nPossible Mentors\nUser:Zverik\nNotes\nThis is not a front-facing tasks: the app won't get better from your work. But it hardens the foundation for future improvements. You need to have some experience in planning and writing tests, and reading flutter code.\nCategories: Google Summer of Code 2025Google Summer of Code ideas\nNavigation menu\nEnglish\nCreate account\nLog in\nPage\nDiscussion\nRead\nView source\nView history\nSearch\nMain Page\nThe map\nMap Features\nContributors\nHelp\nBlogs\nShop\nDonations\nWiki discussion\nRecent changes\nTools\nWhat links here\nRelated changes\nSpecial pages\nPrintable version\nPermanent link\nPage information\nCite this page\nThis page was last edited on 25 February 2025, at 12:40.\nContent is available under Creative Commons Attribution-ShareAlike 2.0 license unless otherwise noted.\nPrivacy policy\nAbout OpenStreetMap Wiki\nDisclaimers\nMobile view\n"}