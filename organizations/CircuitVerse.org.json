{"name":"CircuitVerse.org","description":"Build and learn logic circuits in the cloud!","gsoc_url":"https://summerofcode.withgoogle.com/programs/2025/organizations/circuitverseorg","ideas_url":"https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List","logo":"https://summerofcode.withgoogle.com/media/org/circuitverseorg/rxan5pn96f3m4yfu-360.png","technologies":["javascript","rails","canvas","vue"],"topics":["education","web","simulation","pedagogy","digital logic design"],"projects":[{"project_name":"Circuit Management & Performance Enhancement","summary":"This project aims to enhance the management and performance of the CircuitVerse platform by implementing a folder-based system for subcircuits, improving backend operations, optimizing queries, and developing an explore page for circuits.","difficulty":"Medium"},{"project_name":"Desktop Application & Vue Frontend Updates","summary":"This initiative seeks to improve CircuitVerse’s desktop application and frontend by refactoring components, establishing an automated release pipeline, and migrating the codebase to TypeScript while optimizing resource usage.","difficulty":"Medium"},{"project_name":"Migrate to View components","summary":"The goal of this project is to modernize the user interface by migrating UI elements to ViewComponents, applying responsive design principles, and using Figma for design improvements.","difficulty":"Easy"},{"project_name":"Assignment Suite Enhancement","summary":"This project aims to enhance assignment management capabilities with features for collaborative projects, flexible submission processes, and integration with Canvas LMS to support educators and students.","difficulty":"Easy"},{"project_name":"Enhanced Verilog Support & Stability","summary":"This initiative focuses on improving the Verilog module and simulator stability, enhancing user interaction with circuits, and adding functionalities like play/pause options in simulations.","difficulty":"Hard"},{"project_name":"Open Hardware Component Library","summary":"This project expands the digital component library by adding new components and enabling hardware integration capabilities for better interaction with physical devices.","difficulty":"Hard"},{"project_name":"Flutter Upgrade","summary":"The focus of this project is to update the CircuitVerse mobile application for compatibility with the latest Flutter framework, optimizing performance and enhancing usability.","difficulty":"Easy"}],"jina_response":"Title: GSoC'25 Project List\n\nURL Source: https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List\n\nMarkdown Content:\nCircuitVerse GSoC 2025 Project Ideas\n------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#circuitverse-gsoc-2025-project-ideas)\n\nThis document presents the project ideas for CircuitVerse’s participation in Google Summer of Code (GSoC) 2025. CircuitVerse is an open-source platform dedicated to digital logic education, and we invite motivated candidates to contribute to its development. The following projects aim to enhance functionality, performance, and user experience. Candidates are also encouraged to submit original proposals aligned with the platform’s objectives.\n\nMany of the ideas on this list could be over scoped, it is it give flexibility for candidates to propose ideas based on this. Final set of deliverable will be decided based on the discussion between the mentors and candidates to ensure better use of time.\n\nEssential Information\n---------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#essential-information)\n\n*   **Community Engagement:** Participate in discussions and receive updates via our [Slack Channel](https://circuitverse.org/slack).\n*   **Proposal Submission:** Utilize the [Proposal Template](https://docs.google.com/document/d/1oeYPAuqWxeC79d-R5I9uFJywQJv4ooO4obF4pwifyTY/edit?usp=sharing) (Google Docs recommended).\n*   **Project Discussions:** Collaborate and refine ideas on [GitHub Discussions](https://github.com/orgs/CircuitVerse/discussions/5388).\n\n* * *\n\nProject 1: Circuit Management & Performance Enhancement\n-------------------------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-1-circuit-management--performance-enhancement)\n\n**Duration:** 175 hours  \n**Difficulty:** Medium  \n**Technologies:** Ruby on Rails, JavaScript\n\nThis project focuses on refining the organizational structure and performance of the CircuitVerse platform. The objective is to enhance user efficiency by introducing a systematic approach to circuit management and optimizing backend operations. Participants will implement a folder-based system for subcircuits, enabling users to categorize their work effectively. Additionally, the project includes developing a feature for circuits with group-specific visibility, ensuring accessibility within designated teams while maintaining privacy. Performance improvements will involve optimizing Ruby on Rails N+1 queries with the Bullet gem to reduce latency, particularly for complex circuits. The scope also extends to creating a comprehensive circuits explore page with search functionality, integrating a leaderboard for weekly contests, and enabling locale switching from the homepage to improve accessibility.\n\n**Learning Path:**\n\n*   Acquire proficiency in Ruby on Rails through [The Odin Project’s Full-Stack Ruby on Rails Course](https://www.theodinproject.com/paths/full-stack-ruby-on-rails/courses/ruby-on-rails), covering foundational and advanced concepts.\n*   Enhance Rails expertise with [Pragmatic Studio’s Rails Course](https://pragmaticstudio.com/rails) for structured, practical training.\n*   Develop JavaScript skills using [JavaScript.info](https://javascript.info/) to support frontend enhancements.\n\n**Possible Mentors:** [Vedant Jain](https://github.com/vedant-jain03), [Vaibhav Upreti](https://github.com/VaibhavUpreti), [Smriti Garg](https://github.com/smritigarg)\n\n* * *\n\nProject 2: Desktop Application & Vue Frontend Updates\n-----------------------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-2-desktop-application--vue-frontend-updates)\n\n**Duration:** 175 hours  \n**Difficulty:** Medium  \n**Technologies:** VueJS, Ruby on Rails, TypeScript, JavaScript\n\nThis project aims to extend CircuitVerse’s reach by improving our lightweight desktop application using Tauri, ensuring efficient performance across operating systems, and establishing an automated release pipeline for streamlined deployment. Participants will refactor web-based components into reusable, platform-agnostic units suitable for both web and desktop environments, optimizing resource usage for desktop contexts. A reliable update mechanism will be implemented to deliver future improvements seamlessly. The project also entails modernizing the frontend by converting the JavaScript codebase to TypeScript, replacing jQuery with Vue’s reactivity system, and addressing issues in the Verilog module and layout rendering. Enhancements to the TestBench will improve usability and output compatibility, supported by thorough testing with Vitest. Synchronization with the main CircuitVerse repository will ensure consistency across platforms.\n\n**Learning Path:**\n\n*   Gain expertise in VueJS via the [Vue.js Official Guide](https://vuejs.org/guide/introduction.html) for reactive frontend development.\n*   Study TypeScript fundamentals at [TypeScript Documentation](https://www.typescriptlang.org/docs/) to facilitate codebase migration.\n*   Learn Tauri application development through its [Official Docs](https://tauri.app/v1/guides/).\n*   Prepare for testing with [Vitest Documentation](https://vitest.dev/guide/) covering unit, integration, and end-to-end tests.\n\n**Possible Mentors:** [Vedant Jain](https://github.com/vedant-jain03), [Aryann Dwivedi](https://github.com/aryanndwi123), [Niladri Adhikary](https://github.com/niladrix719)\n\n* * *\n\nProject 3: Migrate to View components\n-------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-3-migrate-to-view-components)\n\n**Duration:** 175 hours  \n**Difficulty:** Easy  \n**Technologies:** HTML, CSS, JavaScript, Figma, Ruby on Rails\n\nThe focus of this project is to elevate the user experience and modernize CircuitVerse’s technical foundation. Participants will be migrating UI elements to ViewComponents for maintainability. Responsive design principles will be applied to ensure compatibility across devices. Candidates will utilize Figma to design interface improvements, translating them into functional code, resulting in a more polished and accessible platform.\n\n**Learning Path:**\n\n*   Build foundational skills in HTML, CSS, and JavaScript with [FreeCodeCamp’s Responsive Web Design](https://www.freecodecamp.org/learn/responsive-web-design/).\n*   Learn UI/UX design with Figma through [Figma’s Official Tutorials](https://www.figma.com/resources/learn-design/).\n*   Study Rails ViewComponents at [ViewComponent Docs](https://viewcomponent.org/) and Hotwire via [Hotwire Docs](https://hotwired.dev/).\n\n**Possible Mentors:** [Aman Asrani](https://github.com/Asrani-Aman), [Siddhant-K-code](https://github.com/Siddhant-K-code), [Siddharth Asthana](https://github.com/edith007), [Yashika Jotwani](https://github.com/yashikajotwani12)\n\n* * *\n\nProject 4: Assignment Suite Enhancement\n---------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-4-assignment-suite-enhancement)\n\n**Duration:** 175 hours  \n**Difficulty:** Easy  \n**Technologies:** Ruby on Rails, JavaScript\n\nThis project seeks to advance CircuitVerse’s educational tools by enhancing classroom and assignment management capabilities. The scope includes developing a multi-level classroom structure, allowing students to form subgroups for collaborative projects, and creating a flexible assignment management system for both individual and group submissions. Participants will introduce features such as pre-built circuit submissions with integrated test cases, incorporate auto-verification from practice sessions, and refine the assignment submission process for efficiency. Integration with Canvas LMS will be improved to strengthen CircuitVerse’s utility in academic settings, supporting educators and students with robust, user-friendly tools.\n\n**Learning Path:**\n\n*   Develop Rails proficiency with [The Odin Project’s Ruby on Rails Course](https://www.theodinproject.com/paths/full-stack-ruby-on-rails/courses/ruby-on-rails).\n*   Enhance JavaScript knowledge at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide) for dynamic functionality.\n*   Review Canvas LMS integration through its [Developer Docs](https://canvas.instructure.com/doc/api/).\n\n**Possible Mentors:** [Aman Asrani](https://github.com/Asrani-Aman), [Siddhant-K-code](https://github.com/Siddhant-K-code), [Siddharth Asthana](https://github.com/edith007), [Yashika Jotwani](https://github.com/yashikajotwani12)\n\n* * *\n\nProject 5: Enhanced Verilog Support & Stability\n-----------------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-5-enhanced-verilog-support--stability)\n\n**Duration:** 175 hours  \n**Difficulty:** Hard  \n**Technologies:** JavaScript, Canvas\n\nThis project targets the enhancement of CircuitVerse’s Verilog module and overall simulator stability. The goal is to refine the Verilog interface, making it more intuitive and enabling users to generate, view, edit, and test circuits comprehensively. Detailed documentation will accompany these improvements to assist users. Additional enhancements include adding play/pause functionality to simulations, implementing a full-screen view for the Boolean Logic Table This project requires a strong focus on technical precision to strengthen a critical component of the platform.\n\n**Learning Path:**\n\n*   Master JavaScript for simulation logic with [Eloquent JavaScript](https://eloquentjavascript.net/).\n*   Learn Canvas rendering techniques at [MDN Canvas Tutorial](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial).\n\n**Possible Mentors:** [Vedant Jain](https://github.com/vedant-jain03), [Niladri Adhikary](https://github.com/niladrix719)\n\n* * *\n\nProject 6: Open Hardware Component Library\n------------------------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-6-open-hardware-component-library)\n\n**Duration:** 90 hours  \n**Difficulty:** Hard  \n**Technologies:** JavaScript, Ruby on Rails\n\nThis project aims to expand CircuitVerse’s digital component library and introduce hardware integration capabilities. Participants will enrich the platform by adding components such as shift registers, sensors, and counters, broadening its appeal to hardware-focused users. The initiative also involves enabling serial device connectivity to facilitate interaction with physical hardware. Though shorter in duration, this project demands a high level of technical skill and innovation to advance CircuitVerse’s utility in hardware education.\n\n**Learning Path:**\n\n*   Strengthen Rails knowledge with [Rails Guides](https://guides.rubyonrails.org/).\n*   Study hardware integration concepts via [Arduino Tutorials](https://www.arduino.cc/en/Tutorial/HomePage).\n*   Deepen JavaScript proficiency at [You Don’t Know JS](https://github.com/getify/You-Dont-Know-JS).\n\n**Possible Mentors:** [Smriti Garg](https://github.com/smritigarg)\n\n* * *\n\nProject 7: Flutter Upgrade\n--------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#project-7-flutter-upgrade)\n\n**Duration:** 90 hours  \n**Difficulty:** Easy  \n**Technologies:** Dart, JavaScript\n\nThis project focuses on updating the CircuitVerse mobile application to ensure compatibility with the latest Flutter framework. Participants will upgrade the app to the current Flutter version, optimizing its performance, and implement circuit embedding functionality to enhance mobile usability. This concise project offers an opportunity to contribute to the platform’s mobile presence with a focus on modern development practices.\n\n**Learning Path:**\n\n*   Learn Flutter development at [Flutter Official Docs](https://flutter.dev/docs).\n*   Study Dart essentials with the [Dart Language Tour](https://dart.dev/guides/language/language-tour).\n*   Review JavaScript fundamentals at [MDN JavaScript Guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide).\n\n**Possible Mentors:** To be determined (Contact mentors via Slack or GitHub Discussions for availability).\n\n* * *\n\nPropose Your Own Project Idea\n-----------------------------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#propose-your-own-project-idea)\n\nCandidates are encouraged to submit original project proposals. Submissions should include:\n\n1.  A clear description of the proposed concept and the problem it addresses.\n2.  Supporting visual materials, such as wireframes, mockups, or screenshots.\n3.  Identification of the intended beneficiaries (e.g., students, educators, or hardware users).\n4.  A detailed implementation plan outlining the approach and timeline.\n\nPrior to submission, candidates should consult with mentors on [Slack](https://circuitverse.org/slack) or [GitHub Discussions](https://github.com/orgs/CircuitVerse/discussions/5388) to refine their proposals.\n\n* * *\n\nConclusion\n----------\n\n[](https://github.com/CircuitVerse/CircuitVerse/wiki/GSoC'25-Project-List#conclusion)\n\nThe projects outlined above provide a foundation for meaningful contributions to CircuitVerse during GSoC 2025. Each initiative offers opportunities for skill development and collaboration within an open-source community dedicated to advancing digital logic education. Candidates may select a listed project or propose a unique idea, and we look forward to working together to enhance the platform’s capabilities.\n"}